From 5c0f73b871569154525f5cf00cf9ba4d146ecbd3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:19:28 +0200
Subject: [PATCH 001/276] Step 0.2: Remove both, client and server

---
 both/collections/demo-collection.ts           |  4 --
 both/models/demo-data-object.ts               |  4 --
 client/app.component.html                     |  4 --
 client/app.component.scss                     |  5 --
 client/app.component.ts                       | 15 -----
 client/imports/demo/demo-data.service.test.ts | 19 ------
 client/imports/demo/demo-data.service.ts      | 18 -----
 client/imports/demo/demo.component.html       |  8 ---
 client/imports/demo/demo.component.scss       |  3 -
 client/imports/demo/demo.component.test.ts    | 95 ---------------------------
 client/imports/demo/demo.component.ts         | 25 -------
 client/index.html                             |  6 --
 client/init.test.ts                           | 12 ----
 client/main.ts                                |  5 --
 server/imports/server-main/main.test.ts       | 40 -----------
 server/imports/server-main/main.ts            | 30 ---------
 server/main.ts                                |  4 --
 17 files changed, 297 deletions(-)
 delete mode 100644 both/collections/demo-collection.ts
 delete mode 100644 both/models/demo-data-object.ts
 delete mode 100644 client/app.component.html
 delete mode 100644 client/app.component.scss
 delete mode 100644 client/app.component.ts
 delete mode 100644 client/imports/demo/demo-data.service.test.ts
 delete mode 100644 client/imports/demo/demo-data.service.ts
 delete mode 100644 client/imports/demo/demo.component.html
 delete mode 100644 client/imports/demo/demo.component.scss
 delete mode 100644 client/imports/demo/demo.component.test.ts
 delete mode 100644 client/imports/demo/demo.component.ts
 delete mode 100644 client/index.html
 delete mode 100644 client/init.test.ts
 delete mode 100644 client/main.ts
 delete mode 100644 server/imports/server-main/main.test.ts
 delete mode 100644 server/imports/server-main/main.ts
 delete mode 100644 server/main.ts

diff --git a/both/collections/demo-collection.ts b/both/collections/demo-collection.ts
deleted file mode 100644
index 3a92264..0000000
--- a/both/collections/demo-collection.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-import {DemoDataObject} from "../models/demo-data-object";
-import {Mongo} from "meteor/mongo";
-
-export const DemoCollection = new Mongo.Collection<DemoDataObject>('demo-collection');
\ No newline at end of file
diff --git a/both/models/demo-data-object.ts b/both/models/demo-data-object.ts
deleted file mode 100644
index 64846d7..0000000
--- a/both/models/demo-data-object.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-export interface DemoDataObject {
-  name: string;
-  age: number;
-}
\ No newline at end of file
diff --git a/client/app.component.html b/client/app.component.html
deleted file mode 100644
index 1d40faa..0000000
--- a/client/app.component.html
+++ /dev/null
@@ -1,4 +0,0 @@
-<div>
-    <h1>Hello Angular2-Meteor!</h1>
-    <demo></demo>
-</div>
diff --git a/client/app.component.scss b/client/app.component.scss
deleted file mode 100644
index 4c02b72..0000000
--- a/client/app.component.scss
+++ /dev/null
@@ -1,5 +0,0 @@
-body {
-
-}
-
-@import "./imports/demo/demo.component";
diff --git a/client/app.component.ts b/client/app.component.ts
deleted file mode 100644
index 61bbab6..0000000
--- a/client/app.component.ts
+++ /dev/null
@@ -1,15 +0,0 @@
-import { Component } from '@angular/core';
-
-import { DemoComponent } from './imports/demo/demo.component';
-
-import template from './app.component.html';
-
-@Component({
-  selector: 'app',
-  template,
-  directives: [DemoComponent]
-})
-export class AppComponent {
-  constructor() {
-  }
-}
diff --git a/client/imports/demo/demo-data.service.test.ts b/client/imports/demo/demo-data.service.test.ts
deleted file mode 100644
index 4320d63..0000000
--- a/client/imports/demo/demo-data.service.test.ts
+++ /dev/null
@@ -1,19 +0,0 @@
-// chai uses as asset library
-import { assert } from 'chai';
-import { Mongo } from 'meteor/mongo';
-
-// Project imports
-import { DemoDataService } from './demo-data.service';
-
-describe('DemoDataService', () => {
-  let demoDataService:DemoDataService;
-
-  beforeEach(() => {
-    // Create the service instance
-    demoDataService = new DemoDataService();
-  });
-
-  it('Should return MongoDB Cursor when requesting the data', () => {
-    assert.isTrue(demoDataService.getData() instanceof Mongo.Cursor);
-  });
-});
diff --git a/client/imports/demo/demo-data.service.ts b/client/imports/demo/demo-data.service.ts
deleted file mode 100644
index 5e7579b..0000000
--- a/client/imports/demo/demo-data.service.ts
+++ /dev/null
@@ -1,18 +0,0 @@
-import { Injectable } from '@angular/core';
-import { Mongo } from 'meteor/mongo';
-
-import { DemoDataObject } from '../../../both/models/demo-data-object';
-import { DemoCollection } from '../../../both/collections/demo-collection';
-
-@Injectable()
-export class DemoDataService {
-  private data : Mongo.Cursor<DemoDataObject>;
-
-  constructor() {
-    this.data = DemoCollection.find({});
-  }
-
-  public getData() : Mongo.Cursor<DemoDataObject> {
-    return this.data;
-  }
-}
diff --git a/client/imports/demo/demo.component.html b/client/imports/demo/demo.component.html
deleted file mode 100644
index 166aa89..0000000
--- a/client/imports/demo/demo.component.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<h2>{{greeting}}</h2>
-
-This is the available data:
-<ul>
-    <li *ngFor="let item of getData()">
-        {{item.name}} ({{item.age}})
-    </li>
-</ul>
diff --git a/client/imports/demo/demo.component.scss b/client/imports/demo/demo.component.scss
deleted file mode 100644
index 9e27489..0000000
--- a/client/imports/demo/demo.component.scss
+++ /dev/null
@@ -1,3 +0,0 @@
-demo {
-
-}
diff --git a/client/imports/demo/demo.component.test.ts b/client/imports/demo/demo.component.test.ts
deleted file mode 100644
index 4182810..0000000
--- a/client/imports/demo/demo.component.test.ts
+++ /dev/null
@@ -1,95 +0,0 @@
-// chai uses as asset library
-import { assert } from 'chai';
-
-// Angular 2 tests imports
-import { inject } from '@angular/core/testing';
-import { provide } from '@angular/core';
-import { TestComponentBuilder } from '@angular/compiler/testing';
-
-// Project imports
-import { DemoComponent } from './demo.component';
-import { DemoDataService } from './demo-data.service';
-import { DemoDataObject } from '../../../both/models/demo-data-object';
-
-describe('DemoComponent', () => {
-  let demoComponentInstance:DemoComponent;
-  let demoComponentElement;
-  let componentFixture;
-
-  let mockDataArray = [
-    <DemoDataObject>{
-      name: 'Test',
-      age: 10
-    }
-  ];
-
-  let mockDataService = {
-    getData: () => mockDataArray
-  };
-
-  beforeEach(inject([TestComponentBuilder], (tcb:TestComponentBuilder) => {
-    // We inject TestComponentBuilder that provides use the ability to control the injections of the component
-    // Then we will request to get DemoComponent with a mock service instead of the real DemoDataService
-    // The fixture created contain the element and the instance of the Component class
-    // Finally, we need to save 'detectChanges' and call it to flush the changes into the view.
-    return tcb.overrideProviders(DemoComponent, [
-      provide(DemoDataService, {useValue: mockDataService})
-    ]).createAsync(DemoComponent).then((fixture) => {
-      componentFixture = fixture;
-
-      demoComponentInstance = componentFixture.componentInstance;
-      demoComponentElement = componentFixture.nativeElement;
-
-      componentFixture.detectChanges();
-    });
-  }));
-
-  describe('@Component instance', () => {
-    it('Should have a greeting string on the component', () => {
-      assert.typeOf(demoComponentInstance.greeting, 'string', 'Greeting should be a string!');
-    });
-
-    it('Should say hello to the component on the greeting string', () => {
-      assert.equal(demoComponentInstance.greeting, 'Hello Demo Component!');
-    });
-
-    it('Should have an array (from the mock) of the instance', () => {
-      assert.typeOf(demoComponentInstance.getData(), 'array');
-    });
-
-    it('Should have an items in the array', () => {
-      assert.typeOf(demoComponentInstance.getData(), 'array');
-      assert.equal((<Array>demoComponentInstance.getData()).length, 1);
-    });
-  });
-
-  describe('@Component view', () => {
-    it('Should print the greeting to the screen', () => {
-      assert.include(demoComponentElement.innerHTML, 'Hello Demo Component');
-    });
-
-    it('Should change the greeting when it changes', () => {
-      assert.include(demoComponentElement.innerHTML, 'Hello Demo Component');
-      demoComponentInstance.greeting = 'New Test Greeting';
-      componentFixture.detectChanges();
-      assert.include(demoComponentElement.innerHTML, 'New Test Greeting');
-    });
-
-    it('Should display a list of items in the screen', () => {
-      assert.isNotNull(demoComponentElement.querySelector('ul'));
-    });
-
-    it('Should add item to the list when modifying the data in the service', () => {
-      assert.equal(demoComponentElement.querySelectorAll('li').length, 1);
-
-      mockDataArray.push({
-        name: 'Dotan',
-        age: 20
-      });
-
-      componentFixture.detectChanges();
-
-      assert.equal(demoComponentElement.querySelectorAll('li').length, 2);
-    });
-  });
-});
diff --git a/client/imports/demo/demo.component.ts b/client/imports/demo/demo.component.ts
deleted file mode 100644
index 81ad185..0000000
--- a/client/imports/demo/demo.component.ts
+++ /dev/null
@@ -1,25 +0,0 @@
-import { Component } from '@angular/core';
-import { MeteorComponent } from 'angular2-meteor';
-
-import { DemoDataService } from './demo-data.service';
-
-import template from './demo.component.html';
-
-@Component({
-  selector: 'demo',
-  template,
-  providers: [DemoDataService]
-})
-export class DemoComponent extends MeteorComponent {
-  greeting: string;
-
-  constructor(private demoDataService: DemoDataService) {
-    super();
-
-    this.greeting = 'Hello Demo Component!';
-  }
-
-  getData() {
-    return this.demoDataService.getData();
-  }
-}
diff --git a/client/index.html b/client/index.html
deleted file mode 100644
index d3675e5..0000000
--- a/client/index.html
+++ /dev/null
@@ -1,6 +0,0 @@
-<head>
-    <base href="/">
-</head>
-<body>
-  <app>Loading...</app>
-</body>
diff --git a/client/init.test.ts b/client/init.test.ts
deleted file mode 100644
index 7397f76..0000000
--- a/client/init.test.ts
+++ /dev/null
@@ -1,12 +0,0 @@
-// angular2-meteor polyfills required for testing
-import 'angular2-meteor-tests-polyfills';
-
-// Angular 2 tests imports
-import {
-  TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS,
-  TEST_BROWSER_DYNAMIC_PLATFORM_PROVIDERS
-} from '@angular/platform-browser-dynamic/testing';
-import { setBaseTestProviders } from '@angular/core/testing';
-
-// Init the test framework
-setBaseTestProviders(TEST_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS);
diff --git a/client/main.ts b/client/main.ts
deleted file mode 100644
index 2dbeb1d..0000000
--- a/client/main.ts
+++ /dev/null
@@ -1,5 +0,0 @@
-import { bootstrap } from 'angular2-meteor-auto-bootstrap';
-
-import { AppComponent } from './app.component';
-
-bootstrap(AppComponent);
diff --git a/server/imports/server-main/main.test.ts b/server/imports/server-main/main.test.ts
deleted file mode 100644
index e050427..0000000
--- a/server/imports/server-main/main.test.ts
+++ /dev/null
@@ -1,40 +0,0 @@
-// chai uses as asset library
-import * as chai from 'chai';
-import * as spies from 'chai-spies';
-import StubCollections from 'meteor/hwillson:stub-collections';
-
-import { DemoCollection } from '../../../both/collections/demo-collection';
-import { Main } from './main';
-
-chai.use(spies);
-
-describe('Server Main', () => {
-  let mainInstance : Main;
-
-  beforeEach(() => {
-    // Creating database mock
-    StubCollections.stub(DemoCollection);
-
-    // Create instance of main class
-    mainInstance = new Main();
-  });
-
-  afterEach(() => {
-    // Restore database
-    StubCollections.restore();
-  });
-
-  it('Should call initFakeData on startup', () => {
-    mainInstance.initFakeData = chai.spy();
-    mainInstance.start();
-
-    chai.expect(mainInstance.initFakeData).to.have.been.called();
-  });
-
-  it('Should call insert 3 times when init fake data', () => {
-    DemoCollection.insert = chai.spy();
-    mainInstance.initFakeData();
-
-    chai.expect(DemoCollection.insert).to.have.been.called.exactly(3);
-  });
-});
diff --git a/server/imports/server-main/main.ts b/server/imports/server-main/main.ts
deleted file mode 100644
index b2aba91..0000000
--- a/server/imports/server-main/main.ts
+++ /dev/null
@@ -1,30 +0,0 @@
-import { DemoCollection } from '../../../both/collections/demo-collection';
-import { DemoDataObject } from '../../../both/models/demo-data-object';
-
-export class Main {
-  constructor() {
-  }
-
-  start():void {
-    this.initFakeData();
-  }
-
-  initFakeData():void {
-    if (DemoCollection.find({}).count() === 0) {
-      DemoCollection.insert(<DemoDataObject>{
-        name: 'Dotan',
-        age: 25
-      });
-
-      DemoCollection.insert(<DemoDataObject>{
-        name: 'Liran',
-        age: 26
-      });
-
-      DemoCollection.insert(<DemoDataObject>{
-        name: 'Uri',
-        age: 30
-      });
-    }
-  }
-}
diff --git a/server/main.ts b/server/main.ts
deleted file mode 100644
index 715c9e4..0000000
--- a/server/main.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-import { Main } from './imports/server-main/main';
-
-let mainInstance = new Main();
-mainInstance.start();
-- 
2.7.4


From 202c6da96890862594d6be97a44830aa7d038f34 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:22:11 +0200
Subject: [PATCH 002/276] Step 0.3: Create index.html

---
 client/index.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 client/index.html

diff --git a/client/index.html b/client/index.html
new file mode 100644
index 0000000..b971956
--- /dev/null
+++ b/client/index.html
@@ -0,0 +1,6 @@
+<head>
+    <base href="/">
+</head>
+<body>
+  Hello World!
+</body>
-- 
2.7.4


From 86766801daeefc8d8e1502c7ecd54e8ad92706ad Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:22:32 +0200
Subject: [PATCH 003/276] Step 0.4: Create App component

---
 client/app.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 client/app.component.ts

diff --git a/client/app.component.ts b/client/app.component.ts
new file mode 100644
index 0000000..9c5caf4
--- /dev/null
+++ b/client/app.component.ts
@@ -0,0 +1,6 @@
+import { Component } from '@angular/core';
+
+@Component({
+  selector: 'app'
+})
+export class AppComponent {}
-- 
2.7.4


From a531ea90020f2f0705eb52a17b8d16797f75774e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:23:29 +0200
Subject: [PATCH 004/276] Step 0.5: Create template for the App component

---
 client/app.component.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/app.component.html

diff --git a/client/app.component.html b/client/app.component.html
new file mode 100644
index 0000000..980a0d5
--- /dev/null
+++ b/client/app.component.html
@@ -0,0 +1 @@
+Hello World!
-- 
2.7.4


From b19c13befa62b07d1653f115f33c8add6778c6eb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:23:58 +0200
Subject: [PATCH 005/276] Step 0.6: Implement template

---
 client/app.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 9c5caf4..91e1a06 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,6 +1,9 @@
 import { Component } from '@angular/core';
 
+import template from './app.component.html';
+
 @Component({
-  selector: 'app'
+  selector: 'app',
+  template
 })
 export class AppComponent {}
-- 
2.7.4


From a83011560c3a136dec97759e3cf7311a0885f322 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:25:10 +0200
Subject: [PATCH 006/276] Step 0.7: Add App component to index.html

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index b971956..d3675e5 100644
--- a/client/index.html
+++ b/client/index.html
@@ -2,5 +2,5 @@
     <base href="/">
 </head>
 <body>
-  Hello World!
+  <app>Loading...</app>
 </body>
-- 
2.7.4


From 538e1404dcf2138d2cb9c895407c2773354f5037 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:26:00 +0200
Subject: [PATCH 007/276] Step 0.8: Create client-side entry point

---
 client/main.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/main.ts

diff --git a/client/main.ts b/client/main.ts
new file mode 100644
index 0000000..2dbeb1d
--- /dev/null
+++ b/client/main.ts
@@ -0,0 +1,5 @@
+import { bootstrap } from 'angular2-meteor-auto-bootstrap';
+
+import { AppComponent } from './app.component';
+
+bootstrap(AppComponent);
-- 
2.7.4


From 188111a83edaaf27530fa2399cf1c3a3b3257806 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:26:58 +0200
Subject: [PATCH 008/276] Step 1.1: Add static HTML to the main component view

---
 client/app.component.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/app.component.html b/client/app.component.html
index 980a0d5..dd1ef68 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1 +1,14 @@
-Hello World!
+<ul>
+  <li>
+    <span>Dubstep-Free Zone</span>
+    <p>
+      Can we please just for an evening not listen to dubstep.
+    </p>
+  </li>
+  <li>
+    <span>All dubstep all the time</span>
+    <p>
+      Get it on!
+    </p>
+  </li>
+</ul>
-- 
2.7.4


From f964ee19f82f56000f79b91fda4c021f91fa2107 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:27:59 +0200
Subject: [PATCH 009/276] Step 2.1: Add dynamic html to the App component

---
 client/app.component.html | 23 +++++++++--------------
 1 file changed, 9 insertions(+), 14 deletions(-)

diff --git a/client/app.component.html b/client/app.component.html
index dd1ef68..fd084c1 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,14 +1,9 @@
-<ul>
-  <li>
-    <span>Dubstep-Free Zone</span>
-    <p>
-      Can we please just for an evening not listen to dubstep.
-    </p>
-  </li>
-  <li>
-    <span>All dubstep all the time</span>
-    <p>
-      Get it on!
-    </p>
-  </li>
-</ul>
+<div>
+  <ul>
+    <li *ngFor="let party of parties">
+      {{party.name}}
+      <p>{{party.description}}</p>
+      <p>{{party.location}}</p>
+    </li>
+  </ul>
+</div>
-- 
2.7.4


From c415fae23268bae429d4d121fc01f41a7668c1a2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:29:04 +0200
Subject: [PATCH 010/276] Step 2.2: Load parties data into app

---
 client/app.component.ts | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 91e1a06..3b6e90a 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -6,4 +6,21 @@ import template from './app.component.html';
   selector: 'app',
   template
 })
-export class AppComponent {}
+export class AppComponent {
+  constructor() {
+    this.parties = [
+      {'name': 'Dubstep-Free Zone',
+        'description': 'Can we please just for an evening not listen to dubstep.',
+        'location': 'Palo Alto'
+      },
+      {'name': 'All dubstep all the time',
+        'description': 'Get it on!',
+        'location': 'Palo Alto'
+      },
+      {'name': 'Savage lounging',
+        'description': 'Leisure suit required. And only fiercest manners.',
+        'location': 'San Francisco'
+      }
+    ];
+  }
+}
-- 
2.7.4


From 5457038ca6333571fc9368d96bff489898c47569 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:29:43 +0200
Subject: [PATCH 011/276] Step 2.3: Define parties property

---
 client/app.component.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.component.ts b/client/app.component.ts
index 3b6e90a..834d1ea 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -7,6 +7,8 @@ import template from './app.component.html';
   template
 })
 export class AppComponent {
+  parties: any[];
+
   constructor() {
     this.parties = [
       {'name': 'Dubstep-Free Zone',
-- 
2.7.4


From 0e9490fdd913a776d84a73466a63ae8c2f08390f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 21:59:06 +0200
Subject: [PATCH 012/276] Step 3.1: Add Parties collection

---
 both/collections/parties.collection.ts | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 both/collections/parties.collection.ts

diff --git a/both/collections/parties.collection.ts b/both/collections/parties.collection.ts
new file mode 100644
index 0000000..b5a5f11
--- /dev/null
+++ b/both/collections/parties.collection.ts
@@ -0,0 +1,3 @@
+import {Mongo} from 'meteor/mongo';
+
+export const Parties = new Mongo.Collection('parties');
-- 
2.7.4


From 6fe6c9298869338942907f21b8e71b0606f56863 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 22:00:07 +0200
Subject: [PATCH 013/276] Step 3.2: Import Parties collection

---
 client/app.component.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.component.ts b/client/app.component.ts
index 834d1ea..64a749b 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,5 +1,7 @@
 import { Component } from '@angular/core';
 
+import { Parties }   from '../both/collections/parties.collection';
+
 import template from './app.component.html';
 
 @Component({
-- 
2.7.4


From 0ba4eb3155b5f075e705fb82a0f39214078597b3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Jul 2016 22:01:25 +0200
Subject: [PATCH 014/276] Step 3.3: Bind Mongo Collection to Angular

---
 client/app.component.ts | 18 +++---------------
 1 file changed, 3 insertions(+), 15 deletions(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 64a749b..f071405 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,4 +1,5 @@
 import { Component } from '@angular/core';
+import { Mongo } from 'meteor/mongo';
 
 import { Parties }   from '../both/collections/parties.collection';
 
@@ -9,22 +10,9 @@ import template from './app.component.html';
   template
 })
 export class AppComponent {
-  parties: any[];
+  parties: Mongo.Cursor<any>;
 
   constructor() {
-    this.parties = [
-      {'name': 'Dubstep-Free Zone',
-        'description': 'Can we please just for an evening not listen to dubstep.',
-        'location': 'Palo Alto'
-      },
-      {'name': 'All dubstep all the time',
-        'description': 'Get it on!',
-        'location': 'Palo Alto'
-      },
-      {'name': 'Savage lounging',
-        'description': 'Leisure suit required. And only fiercest manners.',
-        'location': 'San Francisco'
-      }
-    ];
+    this.parties = Parties.find();
   }
 }
-- 
2.7.4


From 2d08a3cf13af26fa2134b9db9834140ad91e5a0e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 11:59:10 +0200
Subject: [PATCH 015/276] Step 3.4: Add Parties data-fixtures

---
 server/imports/fixtures/parties.ts | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 server/imports/fixtures/parties.ts

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
new file mode 100644
index 0000000..6da0c12
--- /dev/null
+++ b/server/imports/fixtures/parties.ts
@@ -0,0 +1,25 @@
+import { Parties } from '../../../both/collections/parties.collection';
+
+export function loadParties() {
+  if (Parties.find().count() === 0) {
+    const parties = [
+      {
+        name: 'Dubstep-Free Zone',
+        description: 'Can we please just for an evening not listen to dubstep.',
+        location: 'Palo Alto'
+      },
+      {
+        name: 'All dubstep all the time',
+        description: 'Get it on!',
+        location: 'Palo Alto'
+      },
+      {
+        name: 'Savage lounging',
+        description: 'Leisure suit required. And only fiercest manners.',
+        location: 'San Francisco'
+      }
+    ];
+
+    parties.forEach((party) => Parties.insert(party));
+  }
+}
-- 
2.7.4


From 1c1f8c76adcc999b8d34e35481956a13db98d1a4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:00:03 +0200
Subject: [PATCH 016/276] Step 3.5: Load initial Parties

---
 server/main.ts | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 server/main.ts

diff --git a/server/main.ts b/server/main.ts
new file mode 100644
index 0000000..0cb0fd9
--- /dev/null
+++ b/server/main.ts
@@ -0,0 +1,7 @@
+import {loadParties} from './imports/fixtures/parties';
+import {Meteor} from 'meteor/meteor';
+
+Meteor.startup(() => {
+  // load initial Parties
+  loadParties();
+});
-- 
2.7.4


From 75b5d7612c9fde9e8f33f9b52329445f8071f2fa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:06:41 +0200
Subject: [PATCH 017/276] Step 4.1 Create PartiesForm component

---
 client/imports/parties/parties-form.component.ts | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/imports/parties/parties-form.component.ts

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
new file mode 100644
index 0000000..189ee8a
--- /dev/null
+++ b/client/imports/parties/parties-form.component.ts
@@ -0,0 +1,9 @@
+import { Component } from '@angular/core';
+
+import template from './parties-form.component.html';
+
+@Component({
+  selector: 'parties-form',
+  template
+})
+export class PartiesFormComponent { }
-- 
2.7.4


From 9095a3f648eb5fe1cd6eb06587441c7e101e4046 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:07:34 +0200
Subject: [PATCH 018/276] Step 4.2: Add template for PartiesForm

---
 client/imports/parties/parties-form.component.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 client/imports/parties/parties-form.component.html

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
new file mode 100644
index 0000000..b6cf47c
--- /dev/null
+++ b/client/imports/parties/parties-form.component.html
@@ -0,0 +1,12 @@
+<form>
+  <label>Name</label>
+  <input type="text">
+
+  <label>Description</label>
+  <input type="text">
+
+  <label>Location</label>
+  <input type="text">
+  
+  <button>Add</button>
+</form>
-- 
2.7.4


From 0cb2a213190609a0785b21456f95f01da56e8887 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:08:24 +0200
Subject: [PATCH 019/276] Step 4.3: Add PartiesForm component to App template

---
 client/app.component.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.component.html b/client/app.component.html
index fd084c1..370094e 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,4 +1,6 @@
 <div>
+  <parties-form></parties-form>
+  
   <ul>
     <li *ngFor="let party of parties">
       {{party.name}}
-- 
2.7.4


From c0f2a9fffa1742e166eb2c8911bec43e4c98ce5e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:09:44 +0200
Subject: [PATCH 020/276] Step 4.4: Add PartiesForm component as one of
 directives

---
 client/app.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index f071405..1b8a026 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -2,12 +2,14 @@ import { Component } from '@angular/core';
 import { Mongo } from 'meteor/mongo';
 
 import { Parties }   from '../both/collections/parties.collection';
+import { PartiesFormComponent } from './imports/parties/parties-form.component';
 
 import template from './app.component.html';
 
 @Component({
   selector: 'app',
-  template
+  template,
+  directives: [PartiesFormComponent]
 })
 export class AppComponent {
   parties: Mongo.Cursor<any>;
-- 
2.7.4


From dc79839d7da5c2cd7e04c6498b6769dcc39434f8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:36:34 +0200
Subject: [PATCH 021/276] Step 4.5: Form Providers

---
 client/main.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/main.ts b/client/main.ts
index 2dbeb1d..4b905d0 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -1,5 +1,9 @@
 import { bootstrap } from 'angular2-meteor-auto-bootstrap';
+import { disableDeprecatedForms, provideForms } from '@angular/forms';
 
 import { AppComponent } from './app.component';
 
-bootstrap(AppComponent);
+bootstrap(AppComponent, [
+  disableDeprecatedForms(),
+  provideForms()
+]);
-- 
2.7.4


From 47325354c1c2dc67ddfd60a32bcb49cff387a7ab Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:37:11 +0200
Subject: [PATCH 022/276] Step 4.6: Create form

---
 client/imports/parties/parties-form.component.ts | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 189ee8a..c2307bf 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -1,9 +1,23 @@
-import { Component } from '@angular/core';
+import { Component, OnInit } from '@angular/core';
+import { REACTIVE_FORM_DIRECTIVES, FormGroup, FormBuilder } from '@angular/forms';
 
 import template from './parties-form.component.html';
 
 @Component({
   selector: 'parties-form',
-  template
+  template,
+  directives: [REACTIVE_FORM_DIRECTIVES]
 })
-export class PartiesFormComponent { }
+export class PartiesFormComponent implements OnInit {
+  addForm: FormGroup;
+
+  constructor(private formBuilder: FormBuilder) {}
+
+  ngOnInit() {
+    this.addForm = this.formBuilder.group({
+      name: [],
+      description: [],
+      location: []
+    });
+  }
+}
-- 
2.7.4


From a24b9b9b353a63c6e4a43756288d2c3bf6a87366 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 12:37:28 +0200
Subject: [PATCH 023/276] Step 4.7: Implement form directives

---
 client/imports/parties/parties-form.component.html | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index b6cf47c..f26b940 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -1,12 +1,12 @@
-<form>
+<form [formGroup]="addForm">
   <label>Name</label>
-  <input type="text">
+  <input type="text" formControlName="name">
 
   <label>Description</label>
-  <input type="text">
+  <input type="text" formControlName="description">
 
   <label>Location</label>
-  <input type="text">
-  
-  <button>Add</button>
+  <input type="text" formControlName="location">
+
+  <button type="submit">Add</button>
 </form>
-- 
2.7.4


From b3d66f3f33d501e1e02c9bd2e189ae07d6b7078a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 14:28:25 +0200
Subject: [PATCH 024/276] Step 4.8: Add validators

---
 client/imports/parties/parties-form.component.ts | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index c2307bf..37b3dea 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -1,5 +1,5 @@
 import { Component, OnInit } from '@angular/core';
-import { REACTIVE_FORM_DIRECTIVES, FormGroup, FormBuilder } from '@angular/forms';
+import { REACTIVE_FORM_DIRECTIVES, FormGroup, FormBuilder, Validators } from '@angular/forms';
 
 import template from './parties-form.component.html';
 
@@ -15,9 +15,9 @@ export class PartiesFormComponent implements OnInit {
 
   ngOnInit() {
     this.addForm = this.formBuilder.group({
-      name: [],
+      name: ['', Validators.required],
       description: [],
-      location: []
+      location: ['', Validators.required]
     });
   }
 }
-- 
2.7.4


From c52a058d3dd857e5e5f476c1948f48ff2d541e1d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 14:29:21 +0200
Subject: [PATCH 025/276] Step 4.9: Add ngSubmit to the form

---
 client/imports/parties/parties-form.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index f26b940..812767a 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -1,4 +1,4 @@
-<form [formGroup]="addForm">
+<form [formGroup]="addForm" (ngSubmit)="addParty()">
   <label>Name</label>
   <input type="text" formControlName="name">
 
-- 
2.7.4


From 0abf7aebf35e4d6310e6cc8aa5c875e9449dc207 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 14:58:28 +0200
Subject: [PATCH 026/276] Step 4.10: Add addParty method

---
 client/imports/parties/parties-form.component.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 37b3dea..3e7d79e 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -1,6 +1,8 @@
 import { Component, OnInit } from '@angular/core';
 import { REACTIVE_FORM_DIRECTIVES, FormGroup, FormBuilder, Validators } from '@angular/forms';
 
+import { Parties } from '../../../both/collections/parties.collection';
+
 import template from './parties-form.component.html';
 
 @Component({
@@ -20,4 +22,19 @@ export class PartiesFormComponent implements OnInit {
       location: ['', Validators.required]
     });
   }
+
+  resetForm() {
+    this.addForm.controls['name']['updateValue']('');
+    this.addForm.controls['description']['updateValue']('');
+    this.addForm.controls['location']['updateValue']('');
+  }
+
+  addParty() {
+    if (this.addForm.valid) {
+      Parties.insert(this.addForm.value);
+
+      // XXX will be replaced by this.addForm.reset() in RC5+
+      this.resetForm();
+    }
+  }
 }
-- 
2.7.4


From 459654537e5a37e7df4d707f3d68ee060547994c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:01:38 +0200
Subject: [PATCH 027/276] Step 4.11: Add a remove button

---
 client/app.component.html | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/app.component.html b/client/app.component.html
index 370094e..4ef6c49 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,11 +1,12 @@
 <div>
   <parties-form></parties-form>
-  
+
   <ul>
     <li *ngFor="let party of parties">
       {{party.name}}
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
+      <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
 </div>
-- 
2.7.4


From 1e1406810cc4a16e73f51245d5c5887f21b558b5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:02:14 +0200
Subject: [PATCH 028/276] Step 4.12: Implement removeParty method

---
 client/app.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/app.component.ts b/client/app.component.ts
index 1b8a026..5140e84 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -17,4 +17,8 @@ export class AppComponent {
   constructor() {
     this.parties = Parties.find();
   }
+
+  removeParty(party) {
+    Parties.remove(party._id);
+  }
 }
-- 
2.7.4


From dfb6279fdcde90c37c7e22136982ebad8d214e81 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:12:44 +0200
Subject: [PATCH 029/276] Step 5.1: Create PartiesList component

---
 client/imports/parties/parties-list.component.ts | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 client/imports/parties/parties-list.component.ts

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
new file mode 100644
index 0000000..feda43c
--- /dev/null
+++ b/client/imports/parties/parties-list.component.ts
@@ -0,0 +1,24 @@
+import { Component, OnInit } from '@angular/core';
+import { Mongo } from 'meteor/mongo';
+
+import { Parties }   from '../../../both/collections/parties.collection';
+import { PartiesFormComponent } from './parties-form.component';
+
+import template from './parties-list.component.html';
+
+@Component({
+  selector: 'parties-list',
+  template,
+  directives: [PartiesFormComponent]
+})
+export class PartiesListComponent implements OnInit {
+  parties: Mongo.Cursor<any>;
+
+  ngOnInit() {
+    this.parties = Parties.find();
+  }
+
+  removeParty(party) {
+    Parties.remove(party._id);
+  }
+}
-- 
2.7.4


From 67cd053253ba924cd94bd3300e361ec1658b19c9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:13:48 +0200
Subject: [PATCH 030/276] Step 5.2: Copy contents of app.html to PartiesList
 template

---
 client/imports/parties/parties-list.component.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 client/imports/parties/parties-list.component.html

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
new file mode 100644
index 0000000..4ef6c49
--- /dev/null
+++ b/client/imports/parties/parties-list.component.html
@@ -0,0 +1,12 @@
+<div>
+  <parties-form></parties-form>
+
+  <ul>
+    <li *ngFor="let party of parties">
+      {{party.name}}
+      <p>{{party.description}}</p>
+      <p>{{party.location}}</p>
+      <button (click)="removeParty(party)">X</button>
+    </li>
+  </ul>
+</div>
-- 
2.7.4


From a9db5fd7766c8e015903e4139052c7a49fc2257a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:15:09 +0200
Subject: [PATCH 031/276] Step 5.3: Clean up App component

---
 client/app.component.ts | 19 ++-----------------
 1 file changed, 2 insertions(+), 17 deletions(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 5140e84..91e1a06 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,24 +1,9 @@
 import { Component } from '@angular/core';
-import { Mongo } from 'meteor/mongo';
-
-import { Parties }   from '../both/collections/parties.collection';
-import { PartiesFormComponent } from './imports/parties/parties-form.component';
 
 import template from './app.component.html';
 
 @Component({
   selector: 'app',
-  template,
-  directives: [PartiesFormComponent]
+  template
 })
-export class AppComponent {
-  parties: Mongo.Cursor<any>;
-
-  constructor() {
-    this.parties = Parties.find();
-  }
-
-  removeParty(party) {
-    Parties.remove(party._id);
-  }
-}
+export class AppComponent {}
-- 
2.7.4


From 7e5ecb1e9ea40c8af5934ef05fce9147bd7e944b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:15:57 +0200
Subject: [PATCH 032/276] Step 5.4: Clean up App template

---
 client/app.component.html | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/client/app.component.html b/client/app.component.html
index 4ef6c49..d58db9e 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,12 +1,2 @@
 <div>
-  <parties-form></parties-form>
-
-  <ul>
-    <li *ngFor="let party of parties">
-      {{party.name}}
-      <p>{{party.description}}</p>
-      <p>{{party.location}}</p>
-      <button (click)="removeParty(party)">X</button>
-    </li>
-  </ul>
 </div>
-- 
2.7.4


From 444dceed6b4ab50025e4d245f88c37f14abc1d76 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:22:32 +0200
Subject: [PATCH 033/276] Step 5.5: Define routes

---
 client/app.routes.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 client/app.routes.ts

diff --git a/client/app.routes.ts b/client/app.routes.ts
new file mode 100644
index 0000000..e9fca08
--- /dev/null
+++ b/client/app.routes.ts
@@ -0,0 +1,11 @@
+import { RouterConfig, provideRouter } from '@angular/router';
+
+import { PartiesListComponent } from './imports/parties/parties-list.component';
+
+const routes: RouterConfig = [
+  { path: '', component: PartiesListComponent }
+];
+
+export const APP_ROUTER_PROVIDERS = [
+  provideRouter(routes)
+];
-- 
2.7.4


From 38f3a8b41c0b9ac303a208142b1ad64255012b3e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:22:47 +0200
Subject: [PATCH 034/276] Step 5.6: Use routes

---
 client/main.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/main.ts b/client/main.ts
index 4b905d0..7c278c8 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -2,8 +2,10 @@ import { bootstrap } from 'angular2-meteor-auto-bootstrap';
 import { disableDeprecatedForms, provideForms } from '@angular/forms';
 
 import { AppComponent } from './app.component';
+import { APP_ROUTER_PROVIDERS } from './app.routes';
 
 bootstrap(AppComponent, [
   disableDeprecatedForms(),
-  provideForms()
+  provideForms(),
+  APP_ROUTER_PROVIDERS
 ]);
-- 
2.7.4


From 4c15c3acefed15709d4a45d009d7b86869755e87 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:23:19 +0200
Subject: [PATCH 035/276] Step 5.7: Implement routerOutlet

---
 client/app.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.component.html b/client/app.component.html
index d58db9e..6969378 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,2 +1,3 @@
 <div>
+  <router-outlet></router-outlet>
 </div>
-- 
2.7.4


From b03135eb55797371f3335b270a5207d874011197 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:23:41 +0200
Subject: [PATCH 036/276] Step 5.8: Add ROUTER_DIRECTIVES

---
 client/app.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 91e1a06..848e8ac 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,9 +1,11 @@
 import { Component } from '@angular/core';
+import { ROUTER_DIRECTIVES } from '@angular/router';
 
 import template from './app.component.html';
 
 @Component({
   selector: 'app',
-  template
+  template,
+  directives: [ROUTER_DIRECTIVES]
 })
 export class AppComponent {}
-- 
2.7.4


From 939dfe9c2180af3d5540a7d467015c852fbc75a6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:38:27 +0200
Subject: [PATCH 037/276] Step 5.9: Add PartyDetails component

---
 client/imports/parties/party-details.component.ts | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/imports/parties/party-details.component.ts

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
new file mode 100644
index 0000000..67c86ab
--- /dev/null
+++ b/client/imports/parties/party-details.component.ts
@@ -0,0 +1,9 @@
+import { Component } from '@angular/core';
+
+import template from './party-details.component.html';
+
+@Component({
+  selector: 'party-details',
+  template
+})
+export class PartyDetailsComponent {}
-- 
2.7.4


From fd4d995f7ed8154df41cf300303b1d06e7d60ecb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:39:08 +0200
Subject: [PATCH 038/276] Step 5.10: Create template for PartyDetails component

---
 client/imports/parties/party-details.component.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/parties/party-details.component.html

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
new file mode 100644
index 0000000..63fdaea
--- /dev/null
+++ b/client/imports/parties/party-details.component.html
@@ -0,0 +1,5 @@
+<header>
+  <h2>PARTY_NAME</h2>
+
+  <p>PARTY_DESCRIPTION</p>
+</header>
-- 
2.7.4


From ff9dea1eedfe7dc0207517c5632f639103826e1f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:42:50 +0200
Subject: [PATCH 039/276] Step 5.11: Add route for PartyDetails

---
 client/app.routes.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index e9fca08..a8af2ee 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -1,9 +1,11 @@
 import { RouterConfig, provideRouter } from '@angular/router';
 
 import { PartiesListComponent } from './imports/parties/parties-list.component';
+import { PartyDetailsComponent } from './imports/parties/party-details.component';
 
 const routes: RouterConfig = [
-  { path: '', component: PartiesListComponent }
+  { path: '', component: PartiesListComponent },
+  { path: 'party/:partyId', component: PartyDetailsComponent }
 ];
 
 export const APP_ROUTER_PROVIDERS = [
-- 
2.7.4


From eee85ab512a5df2251e15ee311475ddf714cbb2d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:43:19 +0200
Subject: [PATCH 040/276] Step 5.12: Add ROUTER_DIRECTIVES to PartiesList

---
 client/imports/parties/parties-list.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index feda43c..c700e28 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -1,4 +1,5 @@
 import { Component, OnInit } from '@angular/core';
+import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
 
 import { Parties }   from '../../../both/collections/parties.collection';
@@ -9,7 +10,7 @@ import template from './parties-list.component.html';
 @Component({
   selector: 'parties-list',
   template,
-  directives: [PartiesFormComponent]
+  directives: [PartiesFormComponent, ROUTER_DIRECTIVES]
 })
 export class PartiesListComponent implements OnInit {
   parties: Mongo.Cursor<any>;
-- 
2.7.4


From 92ed7cf196037fe27362fe8618a2d6a8fd795d23 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:43:38 +0200
Subject: [PATCH 041/276] Step 5.13: Use RouterLink in PartiesList component

---
 client/imports/parties/parties-list.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 4ef6c49..a4a4f03 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -3,7 +3,7 @@
 
   <ul>
     <li *ngFor="let party of parties">
-      {{party.name}}
+      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
-- 
2.7.4


From 0d1d1300b7b5383fc801590da7870db47b5fea16 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 15:45:16 +0200
Subject: [PATCH 042/276] Step 5.14: Get partyId parameter

---
 client/imports/parties/party-details.component.ts | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 67c86ab..56b28f5 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,4 +1,5 @@
-import { Component } from '@angular/core';
+import { Component, OnInit } from '@angular/core';
+import { ActivatedRoute } from '@angular/router';
 
 import template from './party-details.component.html';
 
@@ -6,4 +7,14 @@ import template from './party-details.component.html';
   selector: 'party-details',
   template
 })
-export class PartyDetailsComponent {}
+export class PartyDetailsComponent implements OnInit {
+  partyId: string;
+
+  constructor(private route: ActivatedRoute) {}
+
+  ngOnInit() {
+    this.route.params
+      .map(params => params['partyId'])
+      .subscribe(partyId => this.partyId = partyId);
+  }
+}
-- 
2.7.4


From 6c6bbb1709099e881b224417b165ecbd97035430 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:18:18 +0200
Subject: [PATCH 043/276] Step 5.15: Load party details

---
 client/imports/parties/party-details.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 56b28f5..f343177 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,6 +1,8 @@
 import { Component, OnInit } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
 
+import { Parties } from '../../../both/collections/parties.collection';
+
 import template from './party-details.component.html';
 
 @Component({
@@ -9,12 +11,17 @@ import template from './party-details.component.html';
 })
 export class PartyDetailsComponent implements OnInit {
   partyId: string;
+  party: any;
 
   constructor(private route: ActivatedRoute) {}
 
   ngOnInit() {
     this.route.params
       .map(params => params['partyId'])
-      .subscribe(partyId => this.partyId = partyId);
+      .subscribe(partyId => {
+        this.partyId = partyId;
+
+        this.party = Parties.findOne(this.partyId);
+      });
   }
 }
-- 
2.7.4


From 0a35bfe2c9a7d134086513c8989dea378b27152b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:18:28 +0200
Subject: [PATCH 044/276] Step 5.16: Move into autorun

---
 client/imports/parties/party-details.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index f343177..f386f57 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,5 +1,6 @@
 import { Component, OnInit } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
+import { Tracker } from 'meteor/tracker';
 
 import { Parties } from '../../../both/collections/parties.collection';
 
@@ -21,7 +22,9 @@ export class PartyDetailsComponent implements OnInit {
       .subscribe(partyId => {
         this.partyId = partyId;
 
-        this.party = Parties.findOne(this.partyId);
+        Tracker.autorun(() => {
+          this.party = Parties.findOne(this.partyId);
+        });
       });
   }
 }
-- 
2.7.4


From 5efe660b2c5ad7db04d72d594637b87801b3cd74 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:19:19 +0200
Subject: [PATCH 045/276] Step 5.17: Run with ngZone

---
 client/imports/parties/party-details.component.ts | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index f386f57..4fcc998 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,4 +1,4 @@
-import { Component, OnInit } from '@angular/core';
+import { Component, NgZone, OnInit } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
 import { Tracker } from 'meteor/tracker';
 
@@ -14,7 +14,7 @@ export class PartyDetailsComponent implements OnInit {
   partyId: string;
   party: any;
 
-  constructor(private route: ActivatedRoute) {}
+  constructor(private route: ActivatedRoute, private ngZone: NgZone) {}
 
   ngOnInit() {
     this.route.params
@@ -23,7 +23,9 @@ export class PartyDetailsComponent implements OnInit {
         this.partyId = partyId;
 
         Tracker.autorun(() => {
-          this.party = Parties.findOne(this.partyId);
+          this.ngZone.run(() => {
+            this.party = Parties.findOne(this.partyId);
+          });
         });
       });
   }
-- 
2.7.4


From 74a2a8403edae3e079f166ebd71fa2843dc81639 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:19:59 +0200
Subject: [PATCH 046/276] Step 5.18: Add party details to the view

---
 client/imports/parties/party-details.component.html | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index 63fdaea..3e50919 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -1,5 +1,7 @@
-<header>
-  <h2>PARTY_NAME</h2>
+<header *ngIf="party">
+  <h2>{{party.name}}</h2>
 
-  <p>PARTY_DESCRIPTION</p>
+  <p>{{party.description}}</p>
+
+  <p>{{party.location}}</p>
 </header>
-- 
2.7.4


From fa31fa9b434d4db831b2f7b7eb56aeb3928f39e3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:37:34 +0200
Subject: [PATCH 047/276] Step 6.1: Add ROUTER_DIRECTIVES to PartyDetails

---
 client/imports/parties/party-details.component.ts | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 4fcc998..f098791 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,5 +1,5 @@
 import { Component, NgZone, OnInit } from '@angular/core';
-import { ActivatedRoute } from '@angular/router';
+import { ActivatedRoute, ROUTER_DIRECTIVES } from '@angular/router';
 import { Tracker } from 'meteor/tracker';
 
 import { Parties } from '../../../both/collections/parties.collection';
@@ -8,7 +8,8 @@ import template from './party-details.component.html';
 
 @Component({
   selector: 'party-details',
-  template
+  template,
+  directives: [ROUTER_DIRECTIVES]
 })
 export class PartyDetailsComponent implements OnInit {
   partyId: string;
-- 
2.7.4


From 6998ad2c80c21f63f71bbe3d5e43a692d8f37796 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:38:10 +0200
Subject: [PATCH 048/276] Step 6.2: Create form inside PartyDetails template

---
 client/imports/parties/party-details.component.html | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index 3e50919..a7c1b9c 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -1,7 +1,13 @@
-<header *ngIf="party">
-  <h2>{{party.name}}</h2>
+<form *ngIf="party" (submit)="saveParty()">
+  <label>Name</label>
+  <input type="text" [(ngModel)]="party.name" name="name">
 
-  <p>{{party.description}}</p>
+  <label>Description</label>
+  <input type="text" [(ngModel)]="party.description" name="description">
 
-  <p>{{party.location}}</p>
-</header>
+  <label>Location</label>
+  <input type="text" [(ngModel)]="party.location" name="location">
+
+  <button type="submit">Save</button>
+  <a [routerLink]="['/']">Cancel</a>
+</form>
-- 
2.7.4


From cdad8c7447e7d5bb375e907b94b6dcdb47f959e3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:42:29 +0200
Subject: [PATCH 049/276] Step 6.3: Add submit event handler

---
 client/imports/parties/party-details.component.ts | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index f098791..3b72393 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -30,4 +30,14 @@ export class PartyDetailsComponent implements OnInit {
         });
       });
   }
+
+  saveParty() {
+    Parties.update(this.party._id, {
+      $set: {
+        name: this.party.name,
+        description: this.party.description,
+        location: this.party.location
+      }
+    });
+  }
 }
-- 
2.7.4


From 4d4ce781ef0e0a323e8b967a087cde035d5746ab Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:48:47 +0200
Subject: [PATCH 050/276] Step 7.1: Define Party interface

---
 both/interfaces/party.interface.ts | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 both/interfaces/party.interface.ts

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
new file mode 100644
index 0000000..a7282a0
--- /dev/null
+++ b/both/interfaces/party.interface.ts
@@ -0,0 +1,6 @@
+export interface Party {
+  _id?: string;
+  name: string;
+  description?: string;
+  location: string;
+}
-- 
2.7.4


From 8450dab48380c09c2366e64d04f9fd9e6721d473 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:49:14 +0200
Subject: [PATCH 051/276] Step 7.2: Add Party interface to Parties collection

---
 both/collections/parties.collection.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/both/collections/parties.collection.ts b/both/collections/parties.collection.ts
index b5a5f11..1ecdeea 100644
--- a/both/collections/parties.collection.ts
+++ b/both/collections/parties.collection.ts
@@ -1,3 +1,5 @@
 import {Mongo} from 'meteor/mongo';
 
-export const Parties = new Mongo.Collection('parties');
+import {Party} from '../interfaces/party.interface';
+
+export const Parties = new Mongo.Collection<Party>('parties');
-- 
2.7.4


From edad95d3bd5692dbf605d97cb9570faffc1a6282 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:50:15 +0200
Subject: [PATCH 052/276] Step 7.3: Add Party interface to PartiesList

---
 client/imports/parties/parties-list.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index c700e28..a609f88 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -3,6 +3,7 @@ import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
 
 import { Parties }   from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/interfaces/party.interface';
 import { PartiesFormComponent } from './parties-form.component';
 
 import template from './parties-list.component.html';
@@ -13,7 +14,7 @@ import template from './parties-list.component.html';
   directives: [PartiesFormComponent, ROUTER_DIRECTIVES]
 })
 export class PartiesListComponent implements OnInit {
-  parties: Mongo.Cursor<any>;
+  parties: Mongo.Cursor<Party>;
 
   ngOnInit() {
     this.parties = Parties.find();
-- 
2.7.4


From be6a7d98fd7c8b20e69dab5f71a6b12d5f414b06 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 16:50:33 +0200
Subject: [PATCH 053/276] Step 7.4: Add Party interface to PartyDetails

---
 client/imports/parties/party-details.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 3b72393..3b9bd6f 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -3,6 +3,7 @@ import { ActivatedRoute, ROUTER_DIRECTIVES } from '@angular/router';
 import { Tracker } from 'meteor/tracker';
 
 import { Parties } from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/interfaces/party.interface';
 
 import template from './party-details.component.html';
 
@@ -13,7 +14,7 @@ import template from './party-details.component.html';
 })
 export class PartyDetailsComponent implements OnInit {
   partyId: string;
-  party: any;
+  party: Party;
 
   constructor(private route: ActivatedRoute, private ngZone: NgZone) {}
 
-- 
2.7.4


From eabd533d0b331a4b7951f38d96f9c16906cf48d7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:06:09 +0200
Subject: [PATCH 054/276] Step 7.5: Add Party interface to Parties fixtures

---
 server/imports/fixtures/parties.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
index 6da0c12..6b0a2da 100644
--- a/server/imports/fixtures/parties.ts
+++ b/server/imports/fixtures/parties.ts
@@ -1,8 +1,9 @@
 import { Parties } from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/interfaces/party.interface';
 
 export function loadParties() {
   if (Parties.find().count() === 0) {
-    const parties = [
+    const parties: Party[] = [
       {
         name: 'Dubstep-Free Zone',
         description: 'Can we please just for an evening not listen to dubstep.',
-- 
2.7.4


From 8d75971c854443be305aec11b1158393b8da8a69 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:02:03 +0200
Subject: [PATCH 055/276] Step 8.1: Install modules

---
 .meteor/packages    |  2 +-
 .meteor/versions    | 11 ++++++++++-
 npm-shrinkwrap.json | 10 ++++++++++
 package.json        |  1 +
 4 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index dabd352..f1b555a 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -17,10 +17,10 @@ es5-shim@4.6.13                # ECMAScript 5 compatibility for older browsers.
 ecmascript@0.5.7              # Enable ECMAScript2015+ syntax in app code
 
 autopublish@1.0.7             # Publish all data to the clients (for prototyping)
-insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
 angular2-compilers
 barbatus:angular2-runtime
 practicalmeteor:mocha
 xolvio:cleaner
 hwillson:stub-collections
 dispatch:mocha-phantomjs
+accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index edab9b9..cc02873 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,3 +1,5 @@
+accounts-base@1.2.9
+accounts-password@1.2.12
 allow-deny@1.0.5
 angular2-compilers@0.6.0
 autopublish@1.0.7
@@ -23,6 +25,7 @@ coffeescript@1.1.4
 ddp@1.2.5
 ddp-client@1.2.9
 ddp-common@1.2.6
+ddp-rate-limiter@1.0.5
 ddp-server@1.2.10
 deps@1.0.12
 diff-sequence@1.0.6
@@ -31,6 +34,7 @@ dispatch:phantomjs-tests@0.0.5
 ecmascript@0.5.7
 ecmascript-runtime@0.3.12
 ejson@1.0.12
+email@1.1.16
 es5-shim@4.6.13
 fastclick@1.0.12
 geojson-utils@1.0.9
@@ -40,10 +44,10 @@ htmljs@1.0.10
 http@1.1.8
 hwillson:stub-collections@1.0.1
 id-map@1.0.8
-insecure@1.0.7
 jquery@1.11.9
 launch-screen@1.0.12
 livedata@1.0.18
+localstorage@1.0.11
 logging@1.1.14
 meteor@1.2.16
 meteor-base@1.0.4
@@ -56,6 +60,7 @@ modules@0.7.5
 modules-runtime@0.7.5
 mongo@1.1.10
 mongo-id@1.0.5
+npm-bcrypt@0.8.7
 npm-mongo@1.5.45
 observe-sequence@1.0.12
 ordered-dict@1.0.8
@@ -66,12 +71,16 @@ practicalmeteor:mocha-core@1.0.1
 practicalmeteor:sinon@1.14.1_2
 promise@0.8.3
 random@1.0.10
+rate-limit@1.0.5
 reactive-var@1.0.10
 reload@1.1.10
 retry@1.0.8
 routepolicy@1.0.11
+service-configuration@1.0.10
+sha@1.0.8
 spacebars@1.0.12
 spacebars-compiler@1.0.12
+srp@1.0.9
 standard-minifier-css@1.1.8
 standard-minifier-js@1.1.8
 templating@1.1.14
diff --git a/npm-shrinkwrap.json b/npm-shrinkwrap.json
index 9fccd54..d239af7 100644
--- a/npm-shrinkwrap.json
+++ b/npm-shrinkwrap.json
@@ -16,6 +16,11 @@
       "from": "@angular/core@2.0.0-rc.4",
       "resolved": "https://registry.npmjs.org/@angular/core/-/core-2.0.0-rc.4.tgz"
     },
+    "@angular/forms": {
+      "version": "0.2.0",
+      "from": "@angular/forms@0.2.0",
+      "resolved": "https://registry.npmjs.org/@angular/forms/-/forms-0.2.0.tgz"
+    },
     "@angular/platform-browser": {
       "version": "2.0.0-rc.4",
       "from": "@angular/platform-browser@2.0.0-rc.4",
@@ -36,6 +41,11 @@
       "from": "angular2-meteor@0.6.2",
       "resolved": "https://registry.npmjs.org/angular2-meteor/-/angular2-meteor-0.6.2.tgz"
     },
+    "angular2-meteor-accounts-ui": {
+      "version": "0.6.1",
+      "from": "angular2-meteor-accounts-ui@latest",
+      "resolved": "https://registry.npmjs.org/angular2-meteor-accounts-ui/-/angular2-meteor-accounts-ui-0.6.1.tgz"
+    },
     "angular2-meteor-auto-bootstrap": {
       "version": "0.6.0",
       "from": "angular2-meteor-auto-bootstrap@0.6.0",
diff --git a/package.json b/package.json
index ebc623c..2597146 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
     "@angular/platform-browser-dynamic": "2.0.0-rc.4",
     "@angular/router": "3.0.0-alpha.8",
     "angular2-meteor": "0.6.2",
+    "angular2-meteor-accounts-ui": "^0.6.1",
     "angular2-meteor-auto-bootstrap": "0.6.0",
     "angular2-meteor-polyfills": "0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
-- 
2.7.4


From 4482e54666dc6f99cc3612bf6005f8aea7c5b21f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:12:51 +0200
Subject: [PATCH 056/276] Step 8.2: Import login-button.scss

---
 client/main.scss | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/main.scss

diff --git a/client/main.scss b/client/main.scss
new file mode 100644
index 0000000..a7ccb1a
--- /dev/null
+++ b/client/main.scss
@@ -0,0 +1 @@
+@import "{}/node_modules/angular2-meteor-accounts-ui/build/login-buttons.scss";
-- 
2.7.4


From e2e83ce15f4cd0266075db684dec01fe4af38801 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:13:35 +0200
Subject: [PATCH 057/276] Step 8.2: Add Accounts UI component to the
 PartiesList template

---
 client/imports/parties/parties-list.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index a4a4f03..4dd57bd 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -1,5 +1,6 @@
 <div>
   <parties-form></parties-form>
+  <login-buttons></login-buttons>
 
   <ul>
     <li *ngFor="let party of parties">
-- 
2.7.4


From 28de7400055f2197ae470a7bf9e1f89fa4ddbadc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:13:53 +0200
Subject: [PATCH 058/276] Step 8.4: Import LoginButtons

---
 client/imports/parties/parties-list.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index a609f88..d5e7c39 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -1,6 +1,7 @@
 import { Component, OnInit } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
+import { LoginButtons } from 'angular2-meteor-accounts-ui';
 
 import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -11,7 +12,7 @@ import template from './parties-list.component.html';
 @Component({
   selector: 'parties-list',
   template,
-  directives: [PartiesFormComponent, ROUTER_DIRECTIVES]
+  directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons]
 })
 export class PartiesListComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
-- 
2.7.4


From ffbb27762d991714d40098a16cdc633097fe9413 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:14:13 +0200
Subject: [PATCH 059/276] Step 8.5: Add Parties collection security

---
 both/collections/parties.collection.ts | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/both/collections/parties.collection.ts b/both/collections/parties.collection.ts
index 1ecdeea..5ee64b8 100644
--- a/both/collections/parties.collection.ts
+++ b/both/collections/parties.collection.ts
@@ -3,3 +3,13 @@ import {Mongo} from 'meteor/mongo';
 import {Party} from '../interfaces/party.interface';
 
 export const Parties = new Mongo.Collection<Party>('parties');
+
+function loggedIn() {
+  return !!Meteor.user();
+}
+
+Parties.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
-- 
2.7.4


From 7036dca0928b533ce128b02383b95e4ab28e83f7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:14:55 +0200
Subject: [PATCH 060/276] Step 8.6: Check access in PartiesForm

---
 client/imports/parties/parties-form.component.ts | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 3e7d79e..42afed9 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -1,5 +1,6 @@
 import { Component, OnInit } from '@angular/core';
 import { REACTIVE_FORM_DIRECTIVES, FormGroup, FormBuilder, Validators } from '@angular/forms';
+import { Meteor } from 'meteor/meteor';
 
 import { Parties } from '../../../both/collections/parties.collection';
 
@@ -31,10 +32,14 @@ export class PartiesFormComponent implements OnInit {
 
   addParty() {
     if (this.addForm.valid) {
-      Parties.insert(this.addForm.value);
-
-      // XXX will be replaced by this.addForm.reset() in RC5+
-      this.resetForm();
+      if (Meteor.userId()) {
+        Parties.insert(this.addForm.value);
+
+        // XXX will be replaced by this.addForm.reset() in RC5+
+        this.resetForm();
+      } else {
+        alert('Please log in to add a party');
+      }
     }
   }
 }
-- 
2.7.4


From 220ddfae5bc98e1b0624dc4bc5d1fad5cf3f4354 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:17:12 +0200
Subject: [PATCH 061/276] Step 8.7: Add owner to the PartiesForm

---
 client/imports/parties/parties-form.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 42afed9..88e6ce6 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -33,7 +33,7 @@ export class PartiesFormComponent implements OnInit {
   addParty() {
     if (this.addForm.valid) {
       if (Meteor.userId()) {
-        Parties.insert(this.addForm.value);
+        Parties.insert(Object.assign({}, this.addForm.value, { owner: Meteor.userId() }));
 
         // XXX will be replaced by this.addForm.reset() in RC5+
         this.resetForm();
-- 
2.7.4


From 6ee789aed9e8ee65d4468ea2a45134d0072fde76 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:33:03 +0200
Subject: [PATCH 062/276] Step 8.8: Add owner property to Party interface

---
 both/interfaces/party.interface.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
index a7282a0..002be07 100644
--- a/both/interfaces/party.interface.ts
+++ b/both/interfaces/party.interface.ts
@@ -3,4 +3,5 @@ export interface Party {
   name: string;
   description?: string;
   location: string;
+  owner?: string;
 }
-- 
2.7.4


From 3d66a85c253780d983098433ac1471d8c72de7c7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 17:17:45 +0200
Subject: [PATCH 063/276] Step 8.8: Check access to update a party

---
 client/imports/parties/party-details.component.ts | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 3b9bd6f..743f208 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,6 +1,7 @@
 import { Component, NgZone, OnInit } from '@angular/core';
 import { ActivatedRoute, ROUTER_DIRECTIVES } from '@angular/router';
 import { Tracker } from 'meteor/tracker';
+import { Meteor } from 'meteor/meteor';
 
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -33,12 +34,16 @@ export class PartyDetailsComponent implements OnInit {
   }
 
   saveParty() {
-    Parties.update(this.party._id, {
-      $set: {
-        name: this.party.name,
-        description: this.party.description,
-        location: this.party.location
-      }
-    });
+    if (Meteor.userId()) {
+      Parties.update(this.party._id, {
+        $set: {
+          name: this.party.name,
+          description: this.party.description,
+          location: this.party.location
+        }
+      });
+    } else {
+      alert('Please log in to change this party');
+    }
   }
 }
-- 
2.7.4


From 3b91671bd020e3365c6929955990da9b29172ef3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:31:43 +0200
Subject: [PATCH 064/276] Step 8.9: Require user to access PartyDetails

---
 client/app.routes.ts | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index a8af2ee..6e818ee 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -1,13 +1,15 @@
 import { RouterConfig, provideRouter } from '@angular/router';
+import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './imports/parties/parties-list.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
 
 const routes: RouterConfig = [
   { path: '', component: PartiesListComponent },
-  { path: 'party/:partyId', component: PartyDetailsComponent }
+  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] }
 ];
 
 export const APP_ROUTER_PROVIDERS = [
-  provideRouter(routes)
+  provideRouter(routes),
+  { provide: 'CanActivateForLoggedIn', useValue: () => !! Meteor.userId() }
 ];
-- 
2.7.4


From b21e1dd3cb578b55b3f2cb8a61e998cd265bce71 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:33:08 +0200
Subject: [PATCH 065/276] Step 9.1: Remove autopublish package

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index f1b555a..81e3ff6 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -16,7 +16,6 @@ standard-minifier-js@1.1.8    # JS minifier run for production mode
 es5-shim@4.6.13                # ECMAScript 5 compatibility for older browsers.
 ecmascript@0.5.7              # Enable ECMAScript2015+ syntax in app code
 
-autopublish@1.0.7             # Publish all data to the clients (for prototyping)
 angular2-compilers
 barbatus:angular2-runtime
 practicalmeteor:mocha
diff --git a/.meteor/versions b/.meteor/versions
index cc02873..6e44bf2 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -2,7 +2,6 @@ accounts-base@1.2.9
 accounts-password@1.2.12
 allow-deny@1.0.5
 angular2-compilers@0.6.0
-autopublish@1.0.7
 autoupdate@1.2.11
 babel-compiler@6.9.0
 babel-runtime@0.1.10
-- 
2.7.4


From 1c5f2e232f4d806a81c54d143b951dbf94477364 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:35:41 +0200
Subject: [PATCH 066/276] Step 9.2: Publish parties collection

---
 server/imports/publications/parties.ts | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 server/imports/publications/parties.ts

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
new file mode 100644
index 0000000..3eb2d08
--- /dev/null
+++ b/server/imports/publications/parties.ts
@@ -0,0 +1,4 @@
+import {Parties} from '../../../both/collections/parties.collection';
+import {Meteor} from 'meteor/meteor';
+
+Meteor.publish('parties', () => Parties.find());
-- 
2.7.4


From 5143f19ff4fc0086447e8c16b8b9f0f92ff3d1f9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:36:10 +0200
Subject: [PATCH 067/276] Step 9.3: Add publications to server-side entry point

---
 server/main.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/server/main.ts b/server/main.ts
index 0cb0fd9..afc6805 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -1,6 +1,8 @@
 import {loadParties} from './imports/fixtures/parties';
 import {Meteor} from 'meteor/meteor';
 
+import './imports/publications/parties';
+
 Meteor.startup(() => {
   // load initial Parties
   loadParties();
-- 
2.7.4


From 878f23510f7f274ace0d1bf7ca88a730cbf02f52 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:41:36 +0200
Subject: [PATCH 068/276] Step 9.4: Extend PartiesList and make use of
 subscribe method

---
 client/imports/parties/parties-list.component.ts | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index d5e7c39..5413109 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -2,6 +2,7 @@ import { Component, OnInit } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
 import { LoginButtons } from 'angular2-meteor-accounts-ui';
+import { MeteorComponent } from 'angular2-meteor';
 
 import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -14,11 +15,19 @@ import template from './parties-list.component.html';
   template,
   directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons]
 })
-export class PartiesListComponent implements OnInit {
+export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
 
+  constructor() {
+    super();
+  }
+
   ngOnInit() {
     this.parties = Parties.find();
+
+    this.subscribe('parties', () => {
+      this.parties = Parties.find();
+    }, true);
   }
 
   removeParty(party) {
-- 
2.7.4


From a574e3377bf17b4634f8b5bae116a17a07be1117 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:45:06 +0200
Subject: [PATCH 069/276] Step 9.5: Add checkbox for public property

---
 client/imports/parties/parties-form.component.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index 812767a..022f88e 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -8,5 +8,8 @@
   <label>Location</label>
   <input type="text" formControlName="location">
 
+  <label>Public</label>
+  <input type="checkbox" formControlName="public">
+
   <button type="submit">Add</button>
 </form>
-- 
2.7.4


From eabd7d801c9ef950424af65d8b953fe573ac2da7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:45:36 +0200
Subject: [PATCH 070/276] Step 9.6: Update Party interface

---
 both/interfaces/party.interface.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
index 002be07..9620170 100644
--- a/both/interfaces/party.interface.ts
+++ b/both/interfaces/party.interface.ts
@@ -4,4 +4,5 @@ export interface Party {
   description?: string;
   location: string;
   owner?: string;
+  public: boolean;
 }
-- 
2.7.4


From 79b656d03e960955083df17f06e7199d68855c9a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:46:33 +0200
Subject: [PATCH 071/276] Step 9.7: Update form in PartiesForm

---
 client/imports/parties/parties-form.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 88e6ce6..c2225cc 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -20,7 +20,8 @@ export class PartiesFormComponent implements OnInit {
     this.addForm = this.formBuilder.group({
       name: ['', Validators.required],
       description: [],
-      location: ['', Validators.required]
+      location: ['', Validators.required],
+      public: [false]
     });
   }
 
@@ -28,6 +29,7 @@ export class PartiesFormComponent implements OnInit {
     this.addForm.controls['name']['updateValue']('');
     this.addForm.controls['description']['updateValue']('');
     this.addForm.controls['location']['updateValue']('');
+    this.addForm.controls['public']['updateValue'](false);
   }
 
   addParty() {
-- 
2.7.4


From d0fe989388faaff24a3994a2943b75fd7e0f09bf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:47:11 +0200
Subject: [PATCH 072/276] Step 9.8: Add public field to the initial parties

---
 server/imports/fixtures/parties.ts | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
index 6b0a2da..c8f00d4 100644
--- a/server/imports/fixtures/parties.ts
+++ b/server/imports/fixtures/parties.ts
@@ -7,17 +7,20 @@ export function loadParties() {
       {
         name: 'Dubstep-Free Zone',
         description: 'Can we please just for an evening not listen to dubstep.',
-        location: 'Palo Alto'
+        location: 'Palo Alto',
+        public: true
       },
       {
         name: 'All dubstep all the time',
         description: 'Get it on!',
-        location: 'Palo Alto'
+        location: 'Palo Alto',
+        public: true
       },
       {
         name: 'Savage lounging',
         description: 'Leisure suit required. And only fiercest manners.',
-        location: 'San Francisco'
+        location: 'San Francisco',
+        public: true
       }
     ];
 
-- 
2.7.4


From 512ca52309e4d025b06b4721196236ed245f6833 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 18:48:04 +0200
Subject: [PATCH 073/276] Step 9.9: Limit data sent to the client

---
 server/imports/publications/parties.ts | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 3eb2d08..23f7fed 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -1,4 +1,18 @@
 import {Parties} from '../../../both/collections/parties.collection';
 import {Meteor} from 'meteor/meteor';
 
-Meteor.publish('parties', () => Parties.find());
+Meteor.publish('parties', function() {
+  const selector = {
+    $or: [
+      { 'public': true },
+      {
+        $and: [
+          { owner: this.userId },
+          { owner: { $exists: true } }
+        ]
+      }
+    ]
+  };
+
+  return Parties.find(selector);
+});
-- 
2.7.4


From 68473f79424fee19d2942bb7fdd79bb893f961f3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 21:29:49 +0200
Subject: [PATCH 074/276] Step 9.10: Add `party`  publication

---
 server/imports/publications/parties.ts | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 23f7fed..0c19a45 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -1,8 +1,8 @@
 import {Parties} from '../../../both/collections/parties.collection';
 import {Meteor} from 'meteor/meteor';
 
-Meteor.publish('parties', function() {
-  const selector = {
+function buildQuery(partyId?: string): Object {
+  const isAvailable = {
     $or: [
       { 'public': true },
       {
@@ -14,5 +14,17 @@ Meteor.publish('parties', function() {
     ]
   };
 
-  return Parties.find(selector);
+  if (partyId) {
+    return { $and: [{ _id: partyId }, isAvailable] };
+  }
+
+  return isAvailable;
+}
+
+Meteor.publish('parties', function() {
+  return Parties.find(buildQuery.call(this));
+});
+
+Meteor.publish('party', function(partyId: string) {
+  return Parties.find(buildQuery.call(this, partyId));
 });
-- 
2.7.4


From efe8ed55b44f8551e1afcd15148e93873a6a7c7a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 21:36:12 +0200
Subject: [PATCH 075/276] Step 9.11: Subscibe to the party publication

---
 client/imports/parties/party-details.component.ts | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 743f208..f0c43c8 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -1,7 +1,8 @@
-import { Component, NgZone, OnInit } from '@angular/core';
+import { Component, OnInit } from '@angular/core';
 import { ActivatedRoute, ROUTER_DIRECTIVES } from '@angular/router';
 import { Tracker } from 'meteor/tracker';
 import { Meteor } from 'meteor/meteor';
+import { MeteorComponent } from 'angular2-meteor';
 
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -13,11 +14,13 @@ import template from './party-details.component.html';
   template,
   directives: [ROUTER_DIRECTIVES]
 })
-export class PartyDetailsComponent implements OnInit {
+export class PartyDetailsComponent extends MeteorComponent implements OnInit {
   partyId: string;
   party: Party;
 
-  constructor(private route: ActivatedRoute, private ngZone: NgZone) {}
+  constructor(private route: ActivatedRoute) {
+    super();
+  }
 
   ngOnInit() {
     this.route.params
@@ -25,11 +28,9 @@ export class PartyDetailsComponent implements OnInit {
       .subscribe(partyId => {
         this.partyId = partyId;
 
-        Tracker.autorun(() => {
-          this.ngZone.run(() => {
-            this.party = Parties.findOne(this.partyId);
-          });
-        });
+        this.subscribe('party', this.partyId, () => {
+          this.party = Parties.findOne(this.partyId);
+        }, true);
       });
   }
 
-- 
2.7.4


From f5344d8306acc6394761ee88666e0259af33aba9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 21:36:43 +0200
Subject: [PATCH 076/276] Step 9.12: Add search input

---
 client/imports/parties/parties-list.component.html | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 4dd57bd..b232475 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -1,5 +1,9 @@
 <div>
-  <parties-form></parties-form>
+  <parties-form style="float: left"></parties-form>
+
+  <input type="text" #searchtext placeholder="Search by Location">
+  <button type="button" (click)="search(searchtext.value)">Search</button>
+  
   <login-buttons></login-buttons>
 
   <ul>
-- 
2.7.4


From 96b509dca791ad74cc576742811b8fc485244cfc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 21:37:54 +0200
Subject: [PATCH 077/276] Step 9.13: Add search method

---
 client/imports/parties/parties-list.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 5413109..23540d7 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -33,4 +33,8 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   removeParty(party) {
     Parties.remove(party._id);
   }
+
+  search(value: string) {
+    this.parties = Parties.find(value ? { location: value } : {});
+  }
 }
-- 
2.7.4


From 1c25b85b3b9a31e949de1ee5ee0ef79d6d10c78e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Jul 2016 21:42:43 +0200
Subject: [PATCH 078/276] Step 12.1: Add options to the parties publication

---
 server/imports/publications/parties.ts | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 0c19a45..0609652 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -21,8 +21,8 @@ function buildQuery(partyId?: string): Object {
   return isAvailable;
 }
 
-Meteor.publish('parties', function() {
-  return Parties.find(buildQuery.call(this));
+Meteor.publish('parties', function(options: any) {
+  return Parties.find(buildQuery.call(this), options);
 });
 
 Meteor.publish('party', function(partyId: string) {
-- 
2.7.4


From 710b926a6ac9c9be135c3dccc1238577371b5184 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:16:56 +0200
Subject: [PATCH 079/276] Step 12.2: Define options and add them to the parties
 subscription

---
 client/imports/parties/parties-list.component.ts | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 23540d7..0c77068 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -17,15 +17,22 @@ import template from './parties-list.component.html';
 })
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
+  pageSize: number = 10;
+  curPage: number = 1;
+  nameOrder: number = 1;
 
   constructor() {
     super();
   }
 
   ngOnInit() {
-    this.parties = Parties.find();
+    const options = {
+      limit: this.pageSize,
+      skip: (this.curPage - 1) * this.pageSize,
+      sort: { name: this.nameOrder }
+    };
 
-    this.subscribe('parties', () => {
+    this.subscribe('parties', options, () => {
       this.parties = Parties.find();
     }, true);
   }
-- 
2.7.4


From 0880c9ac4f1f51c16cf39c925583335a76dcca55 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:17:23 +0200
Subject: [PATCH 080/276] Step 12.3: Add sorting by party name to PartiesList

---
 client/imports/parties/parties-list.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 0c77068..87ced5a 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -33,7 +33,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
     };
 
     this.subscribe('parties', options, () => {
-      this.parties = Parties.find();
+      this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
     }, true);
   }
 
-- 
2.7.4


From 30870b42d9cb3d95086c0066012f1c75e1af001c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:19:14 +0200
Subject: [PATCH 081/276] Step 12.4: Add reactive-var package

---
 .meteor/packages | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.meteor/packages b/.meteor/packages
index 81e3ff6..240f390 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -7,7 +7,7 @@
 meteor-base@1.0.4             # Packages every Meteor app needs to have
 mobile-experience@1.0.4       # Packages for a great mobile UX
 mongo@1.1.10                   # The database Meteor supports right now
-reactive-var@1.0.10            # Reactive variable for tracker
+reactive-var            # Reactive variable for tracker
 jquery@1.11.9                  # Helpful client-side library
 tracker@1.1.0                 # Meteor's client-side reactive programming library
 
-- 
2.7.4


From 92c7767fcdd6c164c3f38494c45ccb098faac2c9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:20:23 +0200
Subject: [PATCH 082/276] Step 12.5: Re-subscribe on current page changes
 reactively

---
 client/imports/parties/parties-list.component.ts | 23 +++++++++++++----------
 1 file changed, 13 insertions(+), 10 deletions(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 87ced5a..6d4c4c2 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -1,6 +1,7 @@
 import { Component, OnInit } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
+import { ReactiveVar } from 'meteor/reactive-var';
 import { LoginButtons } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
 
@@ -18,7 +19,7 @@ import template from './parties-list.component.html';
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
   pageSize: number = 10;
-  curPage: number = 1;
+  curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: number = 1;
 
   constructor() {
@@ -26,15 +27,17 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   }
 
   ngOnInit() {
-    const options = {
-      limit: this.pageSize,
-      skip: (this.curPage - 1) * this.pageSize,
-      sort: { name: this.nameOrder }
-    };
-
-    this.subscribe('parties', options, () => {
-      this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
-    }, true);
+    this.autorun(() => {
+      const options = {
+        limit: this.pageSize,
+        skip: (this.curPage.get() - 1) * this.pageSize,
+        sort: { name: this.nameOrder }
+      };
+
+      this.subscribe('parties', options, () => {
+        this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
+      }, true);
+    });
   }
 
   removeParty(party) {
-- 
2.7.4


From 158f3fc1ac453bccb9775c1ae3d9fd7846778a27 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:21:11 +0200
Subject: [PATCH 083/276] Step 12.6: Install ng2-pagination

---
 npm-shrinkwrap.json | 5 +++++
 package.json        | 1 +
 2 files changed, 6 insertions(+)

diff --git a/npm-shrinkwrap.json b/npm-shrinkwrap.json
index d239af7..2d02203 100644
--- a/npm-shrinkwrap.json
+++ b/npm-shrinkwrap.json
@@ -591,6 +591,11 @@
         }
       }
     },
+    "ng2-pagination": {
+      "version": "0.3.5",
+      "from": "ng2-pagination@latest",
+      "resolved": "https://registry.npmjs.org/ng2-pagination/-/ng2-pagination-0.3.5.tgz"
+    },
     "reflect-metadata": {
       "version": "0.1.3",
       "from": "reflect-metadata@0.1.3",
diff --git a/package.json b/package.json
index 2597146..0affc94 100644
--- a/package.json
+++ b/package.json
@@ -25,6 +25,7 @@
     "angular2-meteor-tests-polyfills": "0.0.2",
     "es6-shim": "0.35.1",
     "meteor-node-stubs": "0.2.3",
+    "ng2-pagination": "^0.3.5",
     "reflect-metadata": "0.1.3",
     "rxjs": "5.0.0-beta.6",
     "zone.js": "0.6.12"
-- 
2.7.4


From 7172a63b9a7ce9687ba5aa668a810c3d9e35c759 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:22:15 +0200
Subject: [PATCH 084/276] Step 12.7: import directives and providers of
 ng2-pagination

---
 client/imports/parties/parties-list.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 6d4c4c2..258200d 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -4,6 +4,7 @@ import { Mongo } from 'meteor/mongo';
 import { ReactiveVar } from 'meteor/reactive-var';
 import { LoginButtons } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
+import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 
 import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -14,7 +15,8 @@ import template from './parties-list.component.html';
 @Component({
   selector: 'parties-list',
   template,
-  directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons]
+  viewProviders: [PaginationService],
+  directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp]
 })
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
-- 
2.7.4


From 516619efd1773723f5b904166c67e44b538eb38b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:24:52 +0200
Subject: [PATCH 085/276] Step 12.8: Register configuration of pagination

---
 client/imports/parties/parties-list.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 258200d..c5674df 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -24,11 +24,18 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: number = 1;
 
-  constructor() {
+  constructor(private paginationService: PaginationService) {
     super();
   }
 
   ngOnInit() {
+    this.paginationService.register({
+      id: this.paginationService.defaultId,
+      itemsPerPage: this.pageSize,
+      currentPage: this.curPage.get(),
+      totalItems: 30,
+    });
+
     this.autorun(() => {
       const options = {
         limit: this.pageSize,
-- 
2.7.4


From a2b53d661ffeab07c3a808f40f53ecefc336aa21 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:27:34 +0200
Subject: [PATCH 086/276] Step 12.9: Update current page on every autorun

---
 client/imports/parties/parties-list.component.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index c5674df..e85a9ee 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -43,6 +43,8 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
         sort: { name: this.nameOrder }
       };
 
+      this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
+
       this.subscribe('parties', options, () => {
         this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
       }, true);
-- 
2.7.4


From 4fc3bca119d809e3af2002e37ff9ba3ddfd44da1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:28:36 +0200
Subject: [PATCH 087/276] Step 12.10: Add loading state

---
 client/imports/parties/parties-list.component.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index e85a9ee..0dac30c 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -23,6 +23,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   pageSize: number = 10;
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: number = 1;
+  loading: boolean = false;
 
   constructor(private paginationService: PaginationService) {
     super();
@@ -43,10 +44,12 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
         sort: { name: this.nameOrder }
       };
 
+      this.loading = true;
       this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
 
       this.subscribe('parties', options, () => {
         this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
+        this.loading = false;
       }, true);
     });
   }
-- 
2.7.4


From e107681e6fb90ef7f6e7f6453bb774dc60f2cde7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:30:01 +0200
Subject: [PATCH 088/276] Step 12.11: Add pagination and loading state to the
 list

---
 client/imports/parties/parties-list.component.html | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index b232475..948e01c 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -3,10 +3,10 @@
 
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
-  
+
   <login-buttons></login-buttons>
 
-  <ul>
+  <ul *ngIf="!loading">
     <li *ngFor="let party of parties">
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
@@ -14,4 +14,6 @@
       <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
+
+  <pagination-controls></pagination-controls>
 </div>
-- 
2.7.4


From e4af479e40446f6322750bcf0d76d9255192cc79 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:30:53 +0200
Subject: [PATCH 089/276] Step 12.12: Add pageChange event binding

---
 client/imports/parties/parties-list.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 948e01c..3a89497 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -15,5 +15,5 @@
     </li>
   </ul>
 
-  <pagination-controls></pagination-controls>
+  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
 </div>
-- 
2.7.4


From 44eee49146936ede7e89917b9bae78df790b2e06 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:31:45 +0200
Subject: [PATCH 090/276] Step 12.13: Add event handler for pageChange

---
 client/imports/parties/parties-list.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 0dac30c..42c74e4 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -61,4 +61,8 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   search(value: string) {
     this.parties = Parties.find(value ? { location: value } : {});
   }
+
+  onPageChanged(page: number) {
+    this.curPage.set(page);
+  }
 }
-- 
2.7.4


From d47fb47f92554d05067e50d6a810a3125fe18629 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:33:55 +0200
Subject: [PATCH 091/276] Step 12.14: Add tmeasday:publish-counts

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 240f390..5822dd0 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -23,3 +23,4 @@ xolvio:cleaner
 hwillson:stub-collections
 dispatch:mocha-phantomjs
 accounts-password
+tmeasday:publish-counts
diff --git a/.meteor/versions b/.meteor/versions
index 6e44bf2..b46c34d 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -84,6 +84,7 @@ standard-minifier-css@1.1.8
 standard-minifier-js@1.1.8
 templating@1.1.14
 templating-tools@1.0.4
+tmeasday:publish-counts@0.7.3
 tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.0
 ui@1.0.11
-- 
2.7.4


From 88dfca869ba03858226329296a01cf070d597f71 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:35:03 +0200
Subject: [PATCH 092/276] Step 12.15: Add typigns for counts package

---
 typings/publish-counts.d.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 typings/publish-counts.d.ts

diff --git a/typings/publish-counts.d.ts b/typings/publish-counts.d.ts
new file mode 100644
index 0000000..2f1dd9a
--- /dev/null
+++ b/typings/publish-counts.d.ts
@@ -0,0 +1,8 @@
+interface CountsObject {
+  get(publicationName: string): number;
+  publish(context: any, publicationName: string, cursor: Mongo.Cursor, options: any): number;
+}
+
+declare module "meteor/tmeasday:publish-counts" {
+  export let Counts: CountsObject;
+}
-- 
2.7.4


From c59aea63f921caefcc5310be90e67838ca3b5100 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:36:06 +0200
Subject: [PATCH 093/276] Step 12.16: Publish total number of parties

---
 server/imports/publications/parties.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 0609652..9bda95f 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -1,5 +1,6 @@
 import {Parties} from '../../../both/collections/parties.collection';
 import {Meteor} from 'meteor/meteor';
+import {Counts} from 'meteor/tmeasday:publish-counts';
 
 function buildQuery(partyId?: string): Object {
   const isAvailable = {
@@ -22,6 +23,8 @@ function buildQuery(partyId?: string): Object {
 }
 
 Meteor.publish('parties', function(options: any) {
+  Counts.publish(this, 'numberOfParties', Parties.find(buildQuery.call(this)), { noReady: true });
+
   return Parties.find(buildQuery.call(this), options);
 });
 
-- 
2.7.4


From 3d69e0fd02dcc0c116cd6e01ffc4845302517c18 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:37:36 +0200
Subject: [PATCH 094/276] Step 12.17: Handle reactive updates of the parties
 total number

---
 client/imports/parties/parties-list.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 42c74e4..5d097db 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -2,6 +2,7 @@ import { Component, OnInit } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
 import { ReactiveVar } from 'meteor/reactive-var';
+import { Counts } from 'meteor/tmeasday:publish-counts';
 import { LoginButtons } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
@@ -20,6 +21,7 @@ import template from './parties-list.component.html';
 })
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
+  partiesSize: number = 0;
   pageSize: number = 10;
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: number = 1;
@@ -34,7 +36,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
       id: this.paginationService.defaultId,
       itemsPerPage: this.pageSize,
       currentPage: this.curPage.get(),
-      totalItems: 30,
+      totalItems: this.partiesSize,
     });
 
     this.autorun(() => {
@@ -52,6 +54,11 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
         this.loading = false;
       }, true);
     });
+
+    this.autorun(() => {
+      this.partiesSize = Counts.get('numberOfParties');
+      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
+    });
   }
 
   removeParty(party) {
-- 
2.7.4


From be7c6ee4b324032fbe520e214e0e9c36f0a6d042 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:50:34 +0200
Subject: [PATCH 095/276] Step 12.18: Add a sort order dropdown

---
 client/imports/parties/parties-list.component.html | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 3a89497..d67fed1 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -6,6 +6,15 @@
 
   <login-buttons></login-buttons>
 
+  <h1>Parties:</h1>
+
+  <div>
+    <select #sort (change)="changeSortOrder(sort.value)">
+      <option value="1" selected>Ascending</option>
+      <option value="-1">Descending</option>
+    </select>
+  </div>
+
   <ul *ngIf="!loading">
     <li *ngFor="let party of parties">
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-- 
2.7.4


From 20264ad82ad6ec4341d9e4d560d4f7c8aaaa7218 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:51:01 +0200
Subject: [PATCH 096/276] Step 12.19: Re-subscribe reactively when sort order
 changes

---
 client/imports/parties/parties-list.component.ts | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 5d097db..594e587 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -24,7 +24,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   partiesSize: number = 0;
   pageSize: number = 10;
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
-  nameOrder: number = 1;
+  nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
   loading: boolean = false;
 
   constructor(private paginationService: PaginationService) {
@@ -43,14 +43,14 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
       const options = {
         limit: this.pageSize,
         skip: (this.curPage.get() - 1) * this.pageSize,
-        sort: { name: this.nameOrder }
+        sort: { name: this.nameOrder.get() }
       };
 
       this.loading = true;
       this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
 
       this.subscribe('parties', options, () => {
-        this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
+        this.parties = Parties.find({}, {sort: { name: this.nameOrder.get() }});
         this.loading = false;
       }, true);
     });
@@ -69,6 +69,10 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
     this.parties = Parties.find(value ? { location: value } : {});
   }
 
+  changeSortOrder(nameOrder: string) {
+    this.nameOrder.set(parseInt(nameOrder));
+  }
+
   onPageChanged(page: number) {
     this.curPage.set(page);
   }
-- 
2.7.4


From 0f9e9f932d2b3610d796b6e3f5376c4a6cfe6a6d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:55:56 +0200
Subject: [PATCH 097/276] Step 12.20: Add search by the party location using
 regex

---
 server/imports/publications/parties.ts | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 9bda95f..7aab446 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -2,7 +2,7 @@ import {Parties} from '../../../both/collections/parties.collection';
 import {Meteor} from 'meteor/meteor';
 import {Counts} from 'meteor/tmeasday:publish-counts';
 
-function buildQuery(partyId?: string): Object {
+function buildQuery(partyId?: string, location?: string): Object {
   const isAvailable = {
     $or: [
       { 'public': true },
@@ -15,17 +15,22 @@ function buildQuery(partyId?: string): Object {
     ]
   };
 
+
   if (partyId) {
     return { $and: [{ _id: partyId }, isAvailable] };
   }
 
-  return isAvailable;
+  const searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };
+
+  return { $and: [{ location: searchRegEx }, isAvailable] };
 }
 
-Meteor.publish('parties', function(options: any) {
-  Counts.publish(this, 'numberOfParties', Parties.find(buildQuery.call(this)), { noReady: true });
+Meteor.publish('parties', function(options: any, location?: string) {
+  const selector = buildQuery.call(this, null, location);
+
+  Counts.publish(this, 'numberOfParties', Parties.find(selector), { noReady: true });
 
-  return Parties.find(buildQuery.call(this), options);
+  return Parties.find(selector, options);
 });
 
 Meteor.publish('party', function(partyId: string) {
-- 
2.7.4


From 2c0c0adb4f5bd6067627c9bbe0c9ac1731cebc04 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 17:58:36 +0200
Subject: [PATCH 098/276] Step 12.21: Add reactive search by location

---
 client/imports/parties/parties-list.component.ts | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 594e587..13150d9 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -25,6 +25,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   pageSize: number = 10;
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
+  location: ReactiveVar<string> = new ReactiveVar<string>(null);
   loading: boolean = false;
 
   constructor(private paginationService: PaginationService) {
@@ -49,7 +50,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
       this.loading = true;
       this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
 
-      this.subscribe('parties', options, () => {
+      this.subscribe('parties', options, this.location.get(), () => {
         this.parties = Parties.find({}, {sort: { name: this.nameOrder.get() }});
         this.loading = false;
       }, true);
@@ -66,7 +67,8 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   }
 
   search(value: string) {
-    this.parties = Parties.find(value ? { location: value } : {});
+    this.curPage.set(1);
+    this.location.set(value);
   }
 
   changeSortOrder(nameOrder: string) {
-- 
2.7.4


From 3b063350f226ded019884f8fbf82f4f1073e461d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:02:15 +0200
Subject: [PATCH 099/276] Step 13.1: Add uninvited users publication

---
 server/imports/publications/users.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 server/imports/publications/users.ts

diff --git a/server/imports/publications/users.ts b/server/imports/publications/users.ts
new file mode 100644
index 0000000..77b0363
--- /dev/null
+++ b/server/imports/publications/users.ts
@@ -0,0 +1,17 @@
+import { Meteor } from 'meteor/meteor';
+
+import {Parties} from '../../both/collections/parties.collection';
+
+Meteor.publish('uninvited', function (partyId: string) {
+  let party = Parties.findOne(partyId);
+
+  if (!party)
+    throw new Meteor.Error('404', 'No such party!');
+
+  return Meteor.users.find({
+    _id: {
+      $nin: party.invited || [],
+      $ne: this.userId
+    }
+  });
+});
-- 
2.7.4


From 53ca26de38ce9b24877e4d3f02439856cab967a6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:02:40 +0200
Subject: [PATCH 100/276] Step 13.2: Add users publication to the server

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index afc6805..c83d2d9 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -2,6 +2,7 @@ import {loadParties} from './imports/fixtures/parties';
 import {Meteor} from 'meteor/meteor';
 
 import './imports/publications/parties';
+import './imports/publications/users';
 
 Meteor.startup(() => {
   // load initial Parties
-- 
2.7.4


From b53b0a87973f812a10ea964d031014fadf8b9e11 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:04:00 +0200
Subject: [PATCH 101/276] Step 13.3: Load uninvited users

---
 client/imports/parties/party-details.component.ts | 6 ++++++
 server/imports/publications/users.ts              | 2 +-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index f0c43c8..a93ad96 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -2,6 +2,7 @@ import { Component, OnInit } from '@angular/core';
 import { ActivatedRoute, ROUTER_DIRECTIVES } from '@angular/router';
 import { Tracker } from 'meteor/tracker';
 import { Meteor } from 'meteor/meteor';
+import { Mongo } from 'meteor/mongo';
 import { MeteorComponent } from 'angular2-meteor';
 
 import { Parties } from '../../../both/collections/parties.collection';
@@ -17,6 +18,7 @@ import template from './party-details.component.html';
 export class PartyDetailsComponent extends MeteorComponent implements OnInit {
   partyId: string;
   party: Party;
+  users: Mongo.Cursor<any>;
 
   constructor(private route: ActivatedRoute) {
     super();
@@ -31,6 +33,10 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
         this.subscribe('party', this.partyId, () => {
           this.party = Parties.findOne(this.partyId);
         }, true);
+
+        this.subscribe('uninvited', this.partyId, () => {
+        this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
+      }, true);
       });
   }
 
diff --git a/server/imports/publications/users.ts b/server/imports/publications/users.ts
index 77b0363..5a50530 100644
--- a/server/imports/publications/users.ts
+++ b/server/imports/publications/users.ts
@@ -1,6 +1,6 @@
 import { Meteor } from 'meteor/meteor';
 
-import {Parties} from '../../both/collections/parties.collection';
+import {Parties} from '../../../both/collections/parties.collection';
 
 Meteor.publish('uninvited', function (partyId: string) {
   let party = Parties.findOne(partyId);
-- 
2.7.4


From df47d72fc07781b94c2445c8f7e2240869f59b8e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:04:32 +0200
Subject: [PATCH 102/276] Step 13.4: Render uninvited users

---
 client/imports/parties/party-details.component.html | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index a7c1b9c..17a7cc3 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -11,3 +11,10 @@
   <button type="submit">Save</button>
   <a [routerLink]="['/']">Cancel</a>
 </form>
+
+<ul>
+  Users to invite:
+  <li *ngFor="let user of users">
+    <div>{{ user.emails[0].address }}</div>
+  </li>
+</ul>
-- 
2.7.4


From 256930e7dbc9ac2d7bfd128f9c45511f6a908541 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:12:32 +0200
Subject: [PATCH 103/276] Step 13.5: Add invited to Party interface

---
 both/interfaces/party.interface.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
index 9620170..a6f8951 100644
--- a/both/interfaces/party.interface.ts
+++ b/both/interfaces/party.interface.ts
@@ -5,4 +5,5 @@ export interface Party {
   location: string;
   owner?: string;
   public: boolean;
+  invited?: string[];
 }
-- 
2.7.4


From eaa0b7a9749f46c6b16e541f080feea2affb0562 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:15:13 +0200
Subject: [PATCH 104/276] Step 13.6: Create DisplayNamePipe

---
 client/imports/shared/display-name.pipe.ts | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)
 create mode 100644 client/imports/shared/display-name.pipe.ts

diff --git a/client/imports/shared/display-name.pipe.ts b/client/imports/shared/display-name.pipe.ts
new file mode 100644
index 0000000..9d5f6b7
--- /dev/null
+++ b/client/imports/shared/display-name.pipe.ts
@@ -0,0 +1,23 @@
+import { Pipe } from '@angular/core';
+import { Meteor } from 'meteor/meteor';
+
+@Pipe({
+  name: 'displayName'
+})
+export class DisplayNamePipe {
+  transform(user: Meteor.User): string {
+    if (!user) {
+      return '';
+    }
+
+    if (user.username) {
+      return user.username;
+    }
+
+    if (user.emails) {
+      return user.emails[0].address;
+    }
+
+    return '';
+  }
+}
-- 
2.7.4


From e6e07bf513b9016e6910322b56862bef276d3ee6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:16:14 +0200
Subject: [PATCH 105/276] Step 13.7: Import DisplayNamePipe

---
 client/imports/parties/party-details.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index a93ad96..06817bb 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -7,13 +7,15 @@ import { MeteorComponent } from 'angular2-meteor';
 
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
+import { DisplayNamePipe } from '../shared/display-name.pipe';
 
 import template from './party-details.component.html';
 
 @Component({
   selector: 'party-details',
   template,
-  directives: [ROUTER_DIRECTIVES]
+  directives: [ROUTER_DIRECTIVES],
+  pipes: [DisplayNamePipe]
 })
 export class PartyDetailsComponent extends MeteorComponent implements OnInit {
   partyId: string;
-- 
2.7.4


From 3dfdd89d984f3208fc49c11485bdfee6db6c467b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:16:47 +0200
Subject: [PATCH 106/276] Step 13.8: Use DisplayNamePipe inside list of
 uninvited users

---
 client/imports/parties/party-details.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index 17a7cc3..8ce8a8e 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -15,6 +15,6 @@
 <ul>
   Users to invite:
   <li *ngFor="let user of users">
-    <div>{{ user.emails[0].address }}</div>
+    <div>{{ user | displayName }}</div>
   </li>
 </ul>
-- 
2.7.4


From fb4a05e3ba12ca7708a584dd9fd7c8ff4e2073dc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:21:36 +0200
Subject: [PATCH 107/276] Step 14.1: Add a party invitation method

---
 both/methods/parties.methods.ts | 47 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 47 insertions(+)
 create mode 100644 both/methods/parties.methods.ts

diff --git a/both/methods/parties.methods.ts b/both/methods/parties.methods.ts
new file mode 100644
index 0000000..8a7dc56
--- /dev/null
+++ b/both/methods/parties.methods.ts
@@ -0,0 +1,47 @@
+import {Parties} from '../collections/parties.collection';
+import {Email} from 'meteor/email';
+import {check} from 'meteor/check';
+import {Meteor} from 'meteor/meteor';
+
+function getContactEmail(user:Meteor.User):string {
+  if (user.emails && user.emails.length)
+    return user.emails[0].address;
+
+  return null;
+}
+
+Meteor.methods({
+  invite: function (partyId:string, userId:string) {
+    check(partyId, String);
+    check(userId, String);
+
+    let party = Parties.findOne(partyId);
+
+    if (!party)
+      throw new Meteor.Error('404', 'No such party!');
+
+    if (party.public)
+      throw new Meteor.Error('400', 'That party is public. No need to invite people.');
+
+    if (party.owner !== this.userId)
+      throw new Meteor.Error('403', 'No permissions!');
+
+    if (userId !== party.owner && (party.invited || []).indexOf(userId) == -1) {
+      Parties.update(partyId, {$addToSet: {invited: userId}});
+
+      let from = getContactEmail(Meteor.users.findOne(this.userId));
+      let to = getContactEmail(Meteor.users.findOne(userId));
+
+      if (Meteor.isServer && to) {
+        Email.send({
+          from: 'noreply@socially.com',
+          to: to,
+          replyTo: from || undefined,
+          subject: 'PARTY: ' + party.name,
+          text: `Hi, I just invited you to ${party.name} on Socially.
+                        \n\nCome check it out: ${Meteor.absoluteUrl()}\n`
+        });
+      }
+    }
+  }
+});
-- 
2.7.4


From 7b5b4c78b6e335d17a0914bf497b97dd1f1a669a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:21:56 +0200
Subject: [PATCH 108/276] Step 14.2: Import methods on the server side

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index c83d2d9..a318b73 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -3,6 +3,7 @@ import {Meteor} from 'meteor/meteor';
 
 import './imports/publications/parties';
 import './imports/publications/users';
+import '../both/methods/parties.methods';
 
 Meteor.startup(() => {
   // load initial Parties
-- 
2.7.4


From 260e81ef101d1b7c8393fc19b6fe089d7a63bddc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:23:01 +0200
Subject: [PATCH 109/276] Step 14.3: Add check and email packages

---
 .meteor/packages | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 5822dd0..fe9d783 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -24,3 +24,5 @@ hwillson:stub-collections
 dispatch:mocha-phantomjs
 accounts-password
 tmeasday:publish-counts
+check
+email
-- 
2.7.4


From c59eebd0d8713ac4a2be7016cead82d27599983c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:23:37 +0200
Subject: [PATCH 110/276] Step 14.4: Add invite method

---
 client/imports/parties/party-details.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index 8ce8a8e..ca18560 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -16,5 +16,6 @@
   Users to invite:
   <li *ngFor="let user of users">
     <div>{{ user | displayName }}</div>
+    <button (click)="invite(user)">Invite</button>
   </li>
 </ul>
-- 
2.7.4


From 87ae360ef5a4f4f49f950915bd6fc5841d715ece Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:25:14 +0200
Subject: [PATCH 111/276] Step 14.5: Add the click handler:

---
 client/imports/parties/party-details.component.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 06817bb..00083c2 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -55,4 +55,15 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
       alert('Please log in to change this party');
     }
   }
+
+  invite(user: Meteor.User) {
+    this.call('invite', this.party._id, user._id, (error) => {
+      if (error) {
+        alert(`Failed to invite due to ${error}`);
+        return;
+      }
+
+      alert('User successfully invited.');
+    });
+  }
 }
-- 
2.7.4


From 14d2eb6049230575ccbc8dbce2b721769d9975c4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:27:29 +0200
Subject: [PATCH 112/276] Step 14.6: Get the party reactively

---
 client/imports/parties/party-details.component.ts | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 00083c2..c521861 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -33,12 +33,14 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
         this.partyId = partyId;
 
         this.subscribe('party', this.partyId, () => {
-          this.party = Parties.findOne(this.partyId);
+          this.autorun(() => {
+            this.party = Parties.findOne(this.partyId);
+          }, true);
         }, true);
 
         this.subscribe('uninvited', this.partyId, () => {
-        this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
-      }, true);
+          this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
+        }, true);
       });
   }
 
-- 
2.7.4


From 5860d5539bec556653c4523e6d230c8820715482 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:28:49 +0200
Subject: [PATCH 113/276] Step 14.7: Update the users list reactively

---
 client/imports/parties/party-details.component.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index c521861..e820986 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -35,11 +35,12 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
         this.subscribe('party', this.partyId, () => {
           this.autorun(() => {
             this.party = Parties.findOne(this.partyId);
+            this.getUsers(this.party);
           }, true);
         }, true);
 
         this.subscribe('uninvited', this.partyId, () => {
-          this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
+          this.getUsers(this.party);
         }, true);
       });
   }
@@ -68,4 +69,15 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
       alert('User successfully invited.');
     });
   }
+
+  getUsers(party: Party) {
+    if (party) {
+      this.users = Meteor.users.find({
+        _id: {
+          $nin: party.invited || [],
+          $ne: Meteor.userId()
+        }
+      });
+    }
+  }
 }
-- 
2.7.4


From e0296c363cd2f7cf4d4b93168b02b6b944689f99 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:29:39 +0200
Subject: [PATCH 114/276] Step 14.8: Show private parties to the invited and
 owners only

---
 server/imports/publications/parties.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 7aab446..60aef83 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -11,6 +11,11 @@ function buildQuery(partyId?: string, location?: string): Object {
           { owner: this.userId },
           { owner: { $exists: true } }
         ]
+      }, {
+        $and: [
+          { invited: this.userId },
+          { invited: { $exists: true } }
+        ]
       }
     ]
   };
-- 
2.7.4


From 96a1c28cefe8daf4330991b80782a3eb8ec46f8f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 18:30:26 +0200
Subject: [PATCH 115/276] Step 14.9: Add a reply method

---
 both/methods/parties.methods.ts | 45 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/both/methods/parties.methods.ts b/both/methods/parties.methods.ts
index 8a7dc56..9e9181d 100644
--- a/both/methods/parties.methods.ts
+++ b/both/methods/parties.methods.ts
@@ -43,5 +43,50 @@ Meteor.methods({
         });
       }
     }
+  },
+  reply: function(partyId: string, rsvp: string) {
+    check(partyId, String);
+    check(rsvp, String);
+
+    if (!this.userId)
+      throw new Meteor.Error('403', 'You must be logged-in to reply');
+
+    if (['yes', 'no', 'maybe'].indexOf(rsvp) === -1)
+      throw new Meteor.Error('400', 'Invalid RSVP');
+
+    let party = Parties.findOne({ _id: partyId });
+
+    if (!party)
+      throw new Meteor.Error('404', 'No such party');
+
+    if (party.owner === this.userId)
+      throw new Meteor.Error('500', 'You are the owner!');
+
+    if (!party.public && (!party.invited || party.invited.indexOf(this.userId) == -1))
+      throw new Meteor.Error('403', 'No such party'); // its private, but let's not tell this to the user
+
+    let rsvpIndex = party.rsvps ? party.rsvps.findIndex((rsvp) => rsvp.userId === this.userId) : -1;
+
+    if (rsvpIndex !== -1) {
+      // update existing rsvp entry
+      if (Meteor.isServer) {
+        // update the appropriate rsvp entry with $
+        Parties.update(
+          { _id: partyId, 'rsvps.userId': this.userId },
+          { $set: { 'rsvps.$.response': rsvp } });
+      } else {
+        // minimongo doesn't yet support $ in modifier. as a temporary
+        // workaround, make a modifier that uses an index. this is
+        // safe on the client since there's only one thread.
+        let modifier = { $set: {} };
+        modifier.$set['rsvps.' + rsvpIndex + '.response'] = rsvp;
+
+        Parties.update(partyId, modifier);
+      }
+    } else {
+      // add new rsvp entry
+      Parties.update(partyId,
+        { $push: { rsvps: { userId: this.userId, response: rsvp } } });
+    }
   }
 });
-- 
2.7.4


From c4c976432601a0c419f24ae549b0183fb3340b3d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:12:56 +0200
Subject: [PATCH 116/276] Step 14.10: Add RSVP interface

---
 both/interfaces/party.interface.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
index a6f8951..39e3d84 100644
--- a/both/interfaces/party.interface.ts
+++ b/both/interfaces/party.interface.ts
@@ -6,4 +6,10 @@ export interface Party {
   owner?: string;
   public: boolean;
   invited?: string[];
+  rsvps?: RSVP[];
+}
+
+interface RSVP {
+  userId: string;
+  response: string;
 }
-- 
2.7.4


From 4c9366f58a90c21b54aeb7e555aae8388a2771f8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:52:24 +0200
Subject: [PATCH 117/276] Step 14.11: Add reponse buttons

---
 client/imports/parties/party-details.component.html | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index ca18560..3af29cf 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -19,3 +19,10 @@
     <button (click)="invite(user)">Invite</button>
   </li>
 </ul>
+
+<div>
+  <h2>Reply to the invitation</h2>
+  <input type="button" value="I'm going!" (click)="reply('yes')">
+  <input type="button" value="Maybe" (click)="reply('maybe')">
+  <input type="button" value="No" (click)="reply('no')">
+</div>
-- 
2.7.4


From 4f631145f16b20bd4da6b9125608bdee0b8bc19d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:53:07 +0200
Subject: [PATCH 118/276] Step 14.12: Add reply method to PartyDetails

---
 client/imports/parties/party-details.component.ts | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index e820986..d1275aa 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -70,6 +70,16 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
     });
   }
 
+  reply(rsvp: string) {
+    this.call('reply', this.party._id, rsvp, (error) => {
+      if (error) {
+        alert(`Failed to reply due to ${error}`);
+      } else {
+        alert('You successfully replied.');
+      }
+    });
+  }
+
   getUsers(party: Party) {
     if (party) {
       this.users = Meteor.users.find({
-- 
2.7.4


From 7616c1e378708821dae938afa8759067265ee5e9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:57:04 +0200
Subject: [PATCH 119/276] Step 14.13: Add a new response counting pipe

---
 client/imports/shared/rsvp.pipe.ts | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)
 create mode 100644 client/imports/shared/rsvp.pipe.ts

diff --git a/client/imports/shared/rsvp.pipe.ts b/client/imports/shared/rsvp.pipe.ts
new file mode 100644
index 0000000..273c9c9
--- /dev/null
+++ b/client/imports/shared/rsvp.pipe.ts
@@ -0,0 +1,33 @@
+import { Pipe } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+
+import { Parties } from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/interfaces/party.interface';
+
+@Pipe({
+  name: 'rsvp',
+  pure: false
+})
+export class RsvpPipe extends MeteorComponent {
+  init: boolean = false;
+  total: number = 0;
+
+  transform(party: Party, type: string): number {
+    if (!type) {
+      return 0;
+    }
+
+    if (!this.init) {
+      this.autorun(() => {
+        const found = Parties.findOne(party._id);
+        if (found) {
+          this.total = found.rsvps ?
+            found.rsvps.filter(rsvp => rsvp.response === type).length : 0;
+        }
+      }, true);
+      this.init = true;
+    }
+
+    return this.total;
+  }
+}
-- 
2.7.4


From c836190b0b99f362ef7b0808ceb284fc272d8c55 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:58:05 +0200
Subject: [PATCH 120/276] Step 14.14: Display response statistics on the list

---
 client/imports/parties/parties-list.component.html | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index d67fed1..1c3531c 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -21,6 +21,12 @@
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
+      <div>
+        Who is coming:
+        Yes - {{party | rsvp:'yes'}}
+        Maybe - {{party | rsvp:'maybe'}}
+        No - {{party | rsvp:'no'}}
+      </div>
     </li>
   </ul>
 
-- 
2.7.4


From ab9f1e3462fab550a54cf52c04c41e907518bf59 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 22:59:34 +0200
Subject: [PATCH 121/276] Step 14.15: Import RsvpPipe

---
 client/imports/parties/parties-list.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 13150d9..a18a9d6 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -10,6 +10,7 @@ import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
 import { PartiesFormComponent } from './parties-form.component';
+import { RsvpPipe } from '../shared/rsvp.pipe';
 
 import template from './parties-list.component.html';
 
@@ -17,7 +18,8 @@ import template from './parties-list.component.html';
   selector: 'parties-list',
   template,
   viewProviders: [PaginationService],
-  directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp]
+  directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp],
+  pipes: [RsvpPipe]
 })
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
-- 
2.7.4


From cc0d2dc98b14f949ecdbdc2035a486c79fbfd03b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:12:13 +0200
Subject: [PATCH 122/276] Step 15.1: Inject Meteor User and add isOwner method

---
 client/imports/parties/parties-list.component.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index a18a9d6..7ab0cff 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -3,7 +3,7 @@ import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
 import { ReactiveVar } from 'meteor/reactive-var';
 import { Counts } from 'meteor/tmeasday:publish-counts';
-import { LoginButtons } from 'angular2-meteor-accounts-ui';
+import { LoginButtons, InjectUser } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 
@@ -21,6 +21,7 @@ import template from './parties-list.component.html';
   directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp],
   pipes: [RsvpPipe]
 })
+@InjectUser('user')
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
   partiesSize: number = 0;
@@ -29,6 +30,7 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
   location: ReactiveVar<string> = new ReactiveVar<string>(null);
   loading: boolean = false;
+  user: Meteor.User;
 
   constructor(private paginationService: PaginationService) {
     super();
@@ -80,4 +82,8 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
   onPageChanged(page: number) {
     this.curPage.set(page);
   }
+
+  isOwner(party: Party): boolean {
+    return this.user && this.user._id === party.owner;
+  }
 }
-- 
2.7.4


From c75e98c3a40ca4d8329c80890762a3319a22112c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:21:06 +0200
Subject: [PATCH 123/276] Step 15.2: Use the hidden attribute in the
 PartiestList

---
 client/imports/parties/parties-list.component.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 1c3531c..373b109 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -1,5 +1,5 @@
 <div>
-  <parties-form style="float: left"></parties-form>
+  <parties-form [hidden]="!user" style="float: left"></parties-form>
 
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
@@ -20,7 +20,7 @@
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
-      <button (click)="removeParty(party)">X</button>
+      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
       <div>
         Who is coming:
         Yes - {{party | rsvp:'yes'}}
-- 
2.7.4


From 116cda926892c917de3f6ba7e167249d5a33bb62 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:23:18 +0200
Subject: [PATCH 124/276] Step 15.3: Add isOwner property

---
 client/imports/parties/party-details.component.ts | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index d1275aa..93d5c88 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -4,6 +4,7 @@ import { Tracker } from 'meteor/tracker';
 import { Meteor } from 'meteor/meteor';
 import { Mongo } from 'meteor/mongo';
 import { MeteorComponent } from 'angular2-meteor';
+import { InjectUser } from 'angular2-meteor-accounts-ui';
 
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -17,10 +18,12 @@ import template from './party-details.component.html';
   directives: [ROUTER_DIRECTIVES],
   pipes: [DisplayNamePipe]
 })
+@InjectUser('user')
 export class PartyDetailsComponent extends MeteorComponent implements OnInit {
   partyId: string;
   party: Party;
   users: Mongo.Cursor<any>;
+  user: Meteor.User;
 
   constructor(private route: ActivatedRoute) {
     super();
@@ -90,4 +93,8 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
       });
     }
   }
+
+  get isOwner(): boolean {
+    return this.party && this.user && this.user._id === this.party.owner;
+  }
 }
-- 
2.7.4


From 0f5717d8ac02715be374a3122d5ee8a857c67031 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:24:07 +0200
Subject: [PATCH 125/276] Step 15.4: Add disabled attribute bindings

---
 client/imports/parties/party-details.component.html | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index 3af29cf..d3c87ed 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -1,14 +1,14 @@
 <form *ngIf="party" (submit)="saveParty()">
   <label>Name</label>
-  <input type="text" [(ngModel)]="party.name" name="name">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name">
 
   <label>Description</label>
-  <input type="text" [(ngModel)]="party.description" name="description">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
 
   <label>Location</label>
-  <input type="text" [(ngModel)]="party.location" name="location">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location" name="location">
 
-  <button type="submit">Save</button>
+  <button [disabled]="!isOwner" type="submit">Save</button>
   <a [routerLink]="['/']">Cancel</a>
 </form>
 
-- 
2.7.4


From 3026cc9b70a1d58e591ade1724479cf70cc0a812 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:25:12 +0200
Subject: [PATCH 126/276] Step 15.5: Add isPublic and isInvited properties

---
 client/imports/parties/party-details.component.ts | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 93d5c88..a8c7771 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -97,4 +97,17 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
   get isOwner(): boolean {
     return this.party && this.user && this.user._id === this.party.owner;
   }
+
+  get isPublic(): boolean {
+    return this.party && this.party.public;
+  }
+
+  get isInvited(): boolean {
+    if (this.party && this.user) {
+      const invited = this.party.invited || [];
+      return invited.indexOf(this.user._id) !== -1;
+    }
+
+    return false;
+  }
 }
-- 
2.7.4


From 4801272d6dd8350f31f85f95207e2aa296d624bd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:25:57 +0200
Subject: [PATCH 127/276] Step 15.6: Make use of properties in the template

---
 client/imports/parties/party-details.component.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index d3c87ed..36f25ff 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -12,7 +12,7 @@
   <a [routerLink]="['/']">Cancel</a>
 </form>
 
-<ul>
+<ul *ngIf="isOwner || isPublic">
   Users to invite:
   <li *ngFor="let user of users">
     <div>{{ user | displayName }}</div>
@@ -20,7 +20,7 @@
   </li>
 </ul>
 
-<div>
+<div *ngIf="isInvited">
   <h2>Reply to the invitation</h2>
   <input type="button" value="I'm going!" (click)="reply('yes')">
   <input type="button" value="Maybe" (click)="reply('maybe')">
-- 
2.7.4


From ed4e07818ec4ec3e4e68ab277067ccc633bd3d0c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:28:03 +0200
Subject: [PATCH 128/276] Step 16.1: Extend party location with coords

---
 both/interfaces/party.interface.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
index 39e3d84..3a59a2a 100644
--- a/both/interfaces/party.interface.ts
+++ b/both/interfaces/party.interface.ts
@@ -2,7 +2,7 @@ export interface Party {
   _id?: string;
   name: string;
   description?: string;
-  location: string;
+  location: Location;
   owner?: string;
   public: boolean;
   invited?: string[];
@@ -13,3 +13,9 @@ interface RSVP {
   userId: string;
   response: string;
 }
+
+interface Location {
+  name: string;
+  lat?: number;
+  lng?: number;
+}
-- 
2.7.4


From cb6917fb28173515a9bf154460b34674551e6291 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:28:48 +0200
Subject: [PATCH 129/276] Step 16.2: Change initial parties accordingly

---
 server/imports/fixtures/parties.ts | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
index c8f00d4..61a59ea 100644
--- a/server/imports/fixtures/parties.ts
+++ b/server/imports/fixtures/parties.ts
@@ -7,19 +7,25 @@ export function loadParties() {
       {
         name: 'Dubstep-Free Zone',
         description: 'Can we please just for an evening not listen to dubstep.',
-        location: 'Palo Alto',
+        location: {
+          name: 'Palo Alto'
+        },
         public: true
       },
       {
         name: 'All dubstep all the time',
         description: 'Get it on!',
-        location: 'Palo Alto',
+        location: {
+          name: 'Palo Alto'
+        },
         public: true
       },
       {
         name: 'Savage lounging',
         description: 'Leisure suit required. And only fiercest manners.',
-        location: 'San Francisco',
+        location: {
+          name: 'Palo Alto'
+        },
         public: true
       }
     ];
-- 
2.7.4


From fa2d3227664f1901dc845eb03662eb5e36a124df Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:31:06 +0200
Subject: [PATCH 130/276] Step 16.3: Change party creation component

---
 client/imports/parties/parties-form.component.ts | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index c2225cc..4e3c1f6 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -35,7 +35,15 @@ export class PartiesFormComponent implements OnInit {
   addParty() {
     if (this.addForm.valid) {
       if (Meteor.userId()) {
-        Parties.insert(Object.assign({}, this.addForm.value, { owner: Meteor.userId() }));
+        Parties.insert({
+          name: this.addForm.value.name,
+          description: this.addForm.value.description,
+          location: {
+            name: this.addForm.value.location
+          },
+          public: this.addForm.value.public,
+          owner: Meteor.userId()
+        });
 
         // XXX will be replaced by this.addForm.reset() in RC5+
         this.resetForm();
-- 
2.7.4


From 249cf509abf5f0ef5307c1c22c545cc62d628bd4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 27 Jul 2016 23:32:09 +0200
Subject: [PATCH 131/276] Step 16.4: Reflect type changes in the parties search

---
 server/imports/publications/parties.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 60aef83..b18d483 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -27,7 +27,7 @@ function buildQuery(partyId?: string, location?: string): Object {
 
   const searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };
 
-  return { $and: [{ location: searchRegEx }, isAvailable] };
+  return { $and: [{ 'location.name': searchRegEx }, isAvailable] };
 }
 
 Meteor.publish('parties', function(options: any, location?: string) {
-- 
2.7.4


From 0414b6f3e3c541b0678489f499c03cc265011f8b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 11:59:54 +0200
Subject: [PATCH 132/276] Step 16.5: Install angular2-google-maps

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 0affc94..36a91d4 100644
--- a/package.json
+++ b/package.json
@@ -18,6 +18,7 @@
     "@angular/platform-browser": "2.0.0-rc.4",
     "@angular/platform-browser-dynamic": "2.0.0-rc.4",
     "@angular/router": "3.0.0-alpha.8",
+    "angular2-google-maps": "^0.12.0",
     "angular2-meteor": "0.6.2",
     "angular2-meteor-accounts-ui": "^0.6.1",
     "angular2-meteor-auto-bootstrap": "0.6.0",
-- 
2.7.4


From 98a02f368fc53860bd9cad546f62373324ead9eb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:04:18 +0200
Subject: [PATCH 133/276] Step 16.6: Import google maps providers

---
 client/main.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/main.ts b/client/main.ts
index 7c278c8..ccdd1b8 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -1,5 +1,6 @@
 import { bootstrap } from 'angular2-meteor-auto-bootstrap';
 import { disableDeprecatedForms, provideForms } from '@angular/forms';
+import { GOOGLE_MAPS_PROVIDERS } from 'angular2-google-maps/core';
 
 import { AppComponent } from './app.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
@@ -7,5 +8,6 @@ import { APP_ROUTER_PROVIDERS } from './app.routes';
 bootstrap(AppComponent, [
   disableDeprecatedForms(),
   provideForms(),
-  APP_ROUTER_PROVIDERS
+  APP_ROUTER_PROVIDERS,
+  GOOGLE_MAPS_PROVIDERS
 ]);
-- 
2.7.4


From b47743a811acdfd11286eebb12baa3921e8e4ff2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:05:02 +0200
Subject: [PATCH 134/276] Step 16.7: Change ngModel to location.name

---
 client/imports/parties/party-details.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index 36f25ff..fa05329 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -6,7 +6,7 @@
   <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
 
   <label>Location</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location" name="location">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location">
 
   <button [disabled]="!isOwner" type="submit">Save</button>
   <a [routerLink]="['/']">Cancel</a>
-- 
2.7.4


From a3e3d818f64f3f779a500d2b6a886fe36243ed97 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:05:56 +0200
Subject: [PATCH 135/276] Step 16.8: Use in a template

---
 client/imports/parties/party-details.component.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index fa05329..c75c022 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -26,3 +26,15 @@
   <input type="button" value="Maybe" (click)="reply('maybe')">
   <input type="button" value="No" (click)="reply('no')">
 </div>
+
+<sebm-google-map
+  [latitude]="lat || centerLat"
+  [longitude]="lng || centerLng"
+  [zoom]="8"
+  (mapClick)="mapClicked($event)">
+  <sebm-google-map-marker
+    *ngIf="lat && lng"
+    [latitude]="lat"
+    [longitude]="lng">
+  </sebm-google-map-marker>
+</sebm-google-map>
-- 
2.7.4


From bc94ec31b6435d58d2b7c42260732125a6215d98 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:35:14 +0200
Subject: [PATCH 136/276] Step 16.9: Add maps logic to the component

---
 client/imports/parties/party-details.component.ts | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index a8c7771..4750d6b 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -5,6 +5,7 @@ import { Meteor } from 'meteor/meteor';
 import { Mongo } from 'meteor/mongo';
 import { MeteorComponent } from 'angular2-meteor';
 import { InjectUser } from 'angular2-meteor-accounts-ui';
+import { GOOGLE_MAPS_DIRECTIVES, MouseEvent } from 'angular2-google-maps/core';
 
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -15,7 +16,7 @@ import template from './party-details.component.html';
 @Component({
   selector: 'party-details',
   template,
-  directives: [ROUTER_DIRECTIVES],
+  directives: [ROUTER_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES],
   pipes: [DisplayNamePipe]
 })
 @InjectUser('user')
@@ -24,6 +25,9 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
   party: Party;
   users: Mongo.Cursor<any>;
   user: Meteor.User;
+  // Default center Palo Alto coordinates.
+  centerLat: number = 37.4292;
+  centerLng: number = -122.1381;
 
   constructor(private route: ActivatedRoute) {
     super();
@@ -110,4 +114,17 @@ export class PartyDetailsComponent extends MeteorComponent implements OnInit {
 
     return false;
   }
+
+  get lat(): number {
+    return this.party && this.party.location.lat;
+  }
+
+  get lng(): number {
+    return this.party && this.party.location.lng;
+  }
+
+  mapClicked($event: MouseEvent) {
+    this.party.location.lat = $event.coords.lat;
+    this.party.location.lng = $event.coords.lng;
+  }
 }
-- 
2.7.4


From 96d02380635a145d88b23527481689cb2c8770f9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:35:50 +0200
Subject: [PATCH 137/276] Step 16.10: Add maps styles

---
 client/main.scss | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/main.scss b/client/main.scss
index a7ccb1a..d21d6a7 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1 +1,6 @@
 @import "{}/node_modules/angular2-meteor-accounts-ui/build/login-buttons.scss";
+
+.sebm-google-map-container {
+  width: 400px;
+  height: 400px;
+}
-- 
2.7.4


From cf06ebe2c06e6c097aa5131c0ac9275f262c17b9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:37:07 +0200
Subject: [PATCH 138/276] Step 16.11: Add all parties locations on the map

---
 client/imports/parties/parties-list.component.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 373b109..1dbfa11 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -19,7 +19,7 @@
     <li *ngFor="let party of parties">
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
-      <p>{{party.location}}</p>
+      <p>{{party.location.name}}</p>
       <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
       <div>
         Who is coming:
@@ -30,5 +30,18 @@
     </li>
   </ul>
 
+  <sebm-google-map
+    [latitude]="0"
+    [longitude]="0"
+    [zoom]="1">
+    <div *ngFor="let party of parties">
+      <sebm-google-map-marker
+        *ngIf="party.location.lat"
+        [latitude]="party.location.lat"
+        [longitude]="party.location.lng">
+      </sebm-google-map-marker>
+    </div>
+  </sebm-google-map>
+
   <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
 </div>
-- 
2.7.4


From 3c9a17ee87d4fba57df0a20db371d67af65104aa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:38:00 +0200
Subject: [PATCH 139/276] Step 16.12: Import maps directives

---
 client/imports/parties/parties-list.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 7ab0cff..f3c8aa5 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -6,6 +6,7 @@ import { Counts } from 'meteor/tmeasday:publish-counts';
 import { LoginButtons, InjectUser } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
+import { GOOGLE_MAPS_DIRECTIVES } from 'angular2-google-maps/core';
 
 import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -18,7 +19,7 @@ import template from './parties-list.component.html';
   selector: 'parties-list',
   template,
   viewProviders: [PaginationService],
-  directives: [PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp],
+  directives: [GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp],
   pipes: [RsvpPipe]
 })
 @InjectUser('user')
-- 
2.7.4


From 558c4ceb6d070f8f113a87e2aa248803c5e66f1f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:43:40 +0200
Subject: [PATCH 140/276] Step 17.1: Install bootstrap

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 36a91d4..af4bf4b 100644
--- a/package.json
+++ b/package.json
@@ -24,6 +24,7 @@
     "angular2-meteor-auto-bootstrap": "0.6.0",
     "angular2-meteor-polyfills": "0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
+    "bootstrap": "^4.0.0-alpha.3",
     "es6-shim": "0.35.1",
     "meteor-node-stubs": "0.2.3",
     "ng2-pagination": "^0.3.5",
-- 
2.7.4


From 15acc3021fb77ec82f4dc8700715ce7faf972053 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:44:19 +0200
Subject: [PATCH 141/276] Step 17.2: Import bootstrap style into the main style
 file

---
 client/main.scss | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/main.scss b/client/main.scss
index d21d6a7..7f71284 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,4 +1,5 @@
 @import "{}/node_modules/angular2-meteor-accounts-ui/build/login-buttons.scss";
+@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
 
 .sebm-google-map-container {
   width: 400px;
-- 
2.7.4


From bbba8235ed0257e1a5929f84b1d2d50e58528244 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:44:54 +0200
Subject: [PATCH 142/276] Step 17.3: Add bootstrap navbar

---
 client/app.component.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/app.component.html b/client/app.component.html
index 6969378..3627ea3 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,3 +1,6 @@
-<div>
+<nav class="navbar navbar-light bg-faded">
+  <a class="navbar-brand" href="#">Socially</a>
+</nav>
+<div class="container-fluid">
   <router-outlet></router-outlet>
 </div>
-- 
2.7.4


From a188245988fc70e9c5c2d56ea850f1fbee964691 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:46:09 +0200
Subject: [PATCH 143/276] Step 17.4: Remove LoginButtons from a template

---
 client/imports/parties/parties-list.component.html | 2 --
 1 file changed, 2 deletions(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 1dbfa11..a9b6162 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -4,8 +4,6 @@
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
 
-  <login-buttons></login-buttons>
-
   <h1>Parties:</h1>
 
   <div>
-- 
2.7.4


From bd6e45f75771e778f65eb7d9076cbe38d2742a2e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:46:49 +0200
Subject: [PATCH 144/276] Step 17.5: Remove LoginButtons from the component

---
 client/imports/parties/parties-list.component.ts | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index f3c8aa5..950b329 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -3,7 +3,7 @@ import { ROUTER_DIRECTIVES } from '@angular/router';
 import { Mongo } from 'meteor/mongo';
 import { ReactiveVar } from 'meteor/reactive-var';
 import { Counts } from 'meteor/tmeasday:publish-counts';
-import { LoginButtons, InjectUser } from 'angular2-meteor-accounts-ui';
+import { InjectUser } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 import { GOOGLE_MAPS_DIRECTIVES } from 'angular2-google-maps/core';
@@ -19,7 +19,7 @@ import template from './parties-list.component.html';
   selector: 'parties-list',
   template,
   viewProviders: [PaginationService],
-  directives: [GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, LoginButtons, PaginationControlsCmp],
+  directives: [GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
   pipes: [RsvpPipe]
 })
 @InjectUser('user')
-- 
2.7.4


From 8d9a3acaef7fce736d21c1b2d1d82d1736c5c643 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:47:36 +0200
Subject: [PATCH 145/276] Step 17.6: Add login buttons to the navigation bar

---
 client/app.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.component.html b/client/app.component.html
index 3627ea3..e5d0c82 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,5 +1,6 @@
 <nav class="navbar navbar-light bg-faded">
   <a class="navbar-brand" href="#">Socially</a>
+  <login-buttons class="pull-right"></login-buttons>
 </nav>
 <div class="container-fluid">
   <router-outlet></router-outlet>
-- 
2.7.4


From 193fb69390c9e05763b9efe0080e1c0405812403 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:48:11 +0200
Subject: [PATCH 146/276] Step 17.7: Import LoginButtons

---
 client/app.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 848e8ac..4f67667 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,11 +1,12 @@
 import { Component } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
+import { LoginButtons } from 'angular2-meteor-accounts-ui';
 
 import template from './app.component.html';
 
 @Component({
   selector: 'app',
   template,
-  directives: [ROUTER_DIRECTIVES]
+  directives: [ROUTER_DIRECTIVES, LoginButtons]
 })
 export class AppComponent {}
-- 
2.7.4


From 9b3c13efabd027382a05ea810c96b585b661ef28 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:49:11 +0200
Subject: [PATCH 147/276] Step 17.8: Add fonts and FontAwesome

---
 client/index.html | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/index.html b/client/index.html
index d3675e5..86f1d55 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,5 +1,10 @@
 <head>
+    <meta name="viewport" content="width=device-width, initial-scale=1">
+
     <base href="/">
+
+    <link href='http://fonts.googleapis.com/css?family=Muli:400,300' rel='stylesheet' type='text/css'>
+    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
 </head>
 <body>
   <app>Loading...</app>
-- 
2.7.4


From f7bdc81a0dcd0bde637ae0f4a5dd4b7c2b18ae0f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:51:58 +0200
Subject: [PATCH 148/276] Step 17.9: Update the new party form

---
 client/imports/parties/parties-form.component.html | 26 +++++++++++++---------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index 022f88e..7611cfa 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -1,15 +1,21 @@
-<form [formGroup]="addForm" (ngSubmit)="addParty()">
-  <label>Name</label>
-  <input type="text" formControlName="name">
+<form [formGroup]="addForm" (ngSubmit)="addParty()" class="form-inline">
+  <fieldset class="form-group">
+    <label for="partyName">Party name</label>
+    <input id="partyName" class="form-control" type="text" formControlName="name" placeholder="Party name" />
 
-  <label>Description</label>
-  <input type="text" formControlName="description">
+    <label for="description">Description</label>
+    <input id="description" class="form-control" type="text" formControlName="description" placeholder="Description">
 
-  <label>Location</label>
-  <input type="text" formControlName="location">
+    <label for="location_name">Location</label>
+    <input id="location_name" class="form-control" type="text" formControlName="location" placeholder="Location name">
 
-  <label>Public</label>
-  <input type="checkbox" formControlName="public">
+    <div class="checkbox">
+      <label>
+        <input type="checkbox" formControlName="public">
+        Public
+      </label>
+    </div>
 
-  <button type="submit">Add</button>
+    <button type="submit">Add</button>
+  </fieldset>
 </form>
-- 
2.7.4


From 5f24486ad4013c3ea3eb9a9ffd4393b586a60dec Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:54:35 +0200
Subject: [PATCH 149/276] Step 17.10: Update parties list layout

---
 client/imports/parties/parties-list.component.html | 135 +++++++++++++++------
 1 file changed, 95 insertions(+), 40 deletions(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index a9b6162..316f1c1 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -1,45 +1,100 @@
-<div>
-  <parties-form [hidden]="!user" style="float: left"></parties-form>
-
-  <input type="text" #searchtext placeholder="Search by Location">
-  <button type="button" (click)="search(searchtext.value)">Search</button>
-
-  <h1>Parties:</h1>
-
-  <div>
-    <select #sort (change)="changeSortOrder(sort.value)">
+<div class="row">
+  <div class="col-md-12">
+    <div class="jumbotron">
+      <h3>Create a new party!</h3>
+      <parties-form [hidden]="!user"></parties-form>
+      <div [hidden]="user">You need to login to create new parties!</div>
+    </div>
+  </div>
+</div>
+<div class="row ma-filters">
+  <div class="col-md-6">
+    <h3>All Parties:</h3>
+    <form class="form-inline">
+      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
+      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
+      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
       <option value="1" selected>Ascending</option>
       <option value="-1">Descending</option>
     </select>
+    </form>
+  </div>
+</div>
+<div class="row">
+  <div class="col-md-6">
+    <ul class="list-group">
+      <li class="list-group-item">
+        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+      </li>
+      <li *ngFor="let party of parties"
+          class="list-group-item ma-party-item">
+        <div class="row">
+          <div class="col-sm-8">
+            <h2 class="ma-party-name">
+              <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+            </h2>
+            @ {{party.location.name}}
+            <p class="ma-party-description">
+              {{party.description}}
+            </p>
+          </div>
+          <div class="col-sm-4">
+            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
+                    class="fa fa-times"></i></button>
+          </div>
+        </div>
+        <div class="row ma-party-item-bottom">
+          <div class="col-sm-4">
+            <div class="ma-rsvp-sum">
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'yes'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  YES
+                </div>
+              </div>
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'maybe'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  MAYBE
+                </div>
+              </div>
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'no'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  NO
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
+      </li>
+      <li class="list-group-item">
+        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+      </li>
+    </ul>
+  </div>
+  <div class="col-md-6">
+    <ul class="list-group">
+      <li class="list-group-item">
+        <sebm-google-map
+          [latitude]="0"
+          [longitude]="0"
+          [zoom]="1">
+          <div *ngFor="let party of parties">
+            <sebm-google-map-marker
+              *ngIf="party.location.lat"
+              [latitude]="party.location.lat"
+              [longitude]="party.location.lng">
+            </sebm-google-map-marker>
+          </div>
+        </sebm-google-map>
+      </li>
+    </ul>
   </div>
-
-  <ul *ngIf="!loading">
-    <li *ngFor="let party of parties">
-      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-      <p>{{party.description}}</p>
-      <p>{{party.location.name}}</p>
-      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
-      <div>
-        Who is coming:
-        Yes - {{party | rsvp:'yes'}}
-        Maybe - {{party | rsvp:'maybe'}}
-        No - {{party | rsvp:'no'}}
-      </div>
-    </li>
-  </ul>
-
-  <sebm-google-map
-    [latitude]="0"
-    [longitude]="0"
-    [zoom]="1">
-    <div *ngFor="let party of parties">
-      <sebm-google-map-marker
-        *ngIf="party.location.lat"
-        [latitude]="party.location.lat"
-        [longitude]="party.location.lng">
-      </sebm-google-map-marker>
-    </div>
-  </sebm-google-map>
-
-  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
 </div>
-- 
2.7.4


From 5e31adc205f5adad928d1d7dead98a1e89e8c1c1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:55:29 +0200
Subject: [PATCH 150/276] Step 17.11: Add styles for PartiesList

---
 client/imports/parties/parties-list.component.scss | 125 +++++++++++++++++++++
 1 file changed, 125 insertions(+)
 create mode 100644 client/imports/parties/parties-list.component.scss

diff --git a/client/imports/parties/parties-list.component.scss b/client/imports/parties/parties-list.component.scss
new file mode 100644
index 0000000..3393841
--- /dev/null
+++ b/client/imports/parties/parties-list.component.scss
@@ -0,0 +1,125 @@
+.ma-add-button-container {
+  button.btn {
+    background: $color3;
+    float: right;
+    margin-right: 5px;
+    outline: none;
+    i {
+      color: $color5;
+    }
+  }
+}
+
+.ma-parties-col {
+  padding-top: 20px;
+}
+
+.ma-filters {
+  margin-bottom: 10px;
+}
+
+.ma-party-item {
+  .ma-party-name {
+    margin-bottom: 20px;
+    a {
+      color: $color6;
+      text-decoration: none !important;
+      font-weight: 400;
+    }
+  }
+  .ma-party-description {
+    color: $color6;
+    font-weight: 300;
+    padding-left: 18px;
+    font-size: 14px;
+  }
+
+  .ma-remove {
+    color: lighten($color7, 20%);
+    position: absolute;
+    right: 20px;
+    top: 20px;
+    &:hover {
+      color: $color7;
+    }
+  }
+
+  .ma-party-item-bottom {
+    padding-top: 10px;
+    .ma-posted-by-col {
+      .ma-posted-by {
+        color: darken($color4, 30%);
+        font-size: 12px;
+      }
+      .ma-everyone-invited {
+        @media (max-width: 400px) {
+          display: block;
+          i {
+            margin-left: 0px !important;
+          }
+        }
+        font-size: 12px;
+        color: darken($color4, 10%);
+        i {
+          color: darken($color4, 10%);
+          margin-left: 5px;
+        }
+      }
+    }
+
+    .ma-rsvp-buttons {
+      input.btn {
+        color: darken($color3, 20%);
+        background: transparent !important;
+        outline: none;
+        padding-left: 0;
+        &:active {
+          box-shadow: none;
+        }
+        &:hover {
+          color: darken($color3, 30%);
+        }
+        &.btn-primary {
+          color: lighten($color3, 10%);
+          border: 0;
+          background: transparent !important;
+        }
+      }
+    }
+
+    .ma-rsvp-sum {
+      width: 160px;
+      @media (min-width: 400px) {
+        float: right;
+      }
+      @media (max-width: 400px) {
+        margin: 0 auto;
+      }
+    }
+    .ma-rsvp-amount {
+      display: inline-block;
+      text-align: center;
+      width: 50px;
+      .ma-amount {
+        font-weight: bold;
+        font-size: 20px;
+      }
+      .ma-rsvp-title {
+        font-size: 11px;
+        color: #aaa;
+        text-transform: uppercase;
+      }
+    }
+  }
+}
+
+.ma-angular-map-col {
+  .angular-google-map-container, .angular-google-map {
+    height: 100%;
+    width: 100%;
+  }
+}
+
+.search-form {
+  margin-bottom: 1em;
+}
-- 
2.7.4


From 0fe6fc64e266f240175fde81a5d22b83b689872b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:56:12 +0200
Subject: [PATCH 151/276] Step 17.12: Add styles for the party details page

---
 .../imports/parties/party-details.component.scss   | 32 ++++++++++++++++++++++
 1 file changed, 32 insertions(+)
 create mode 100644 client/imports/parties/party-details.component.scss

diff --git a/client/imports/parties/party-details.component.scss b/client/imports/parties/party-details.component.scss
new file mode 100644
index 0000000..f237bb0
--- /dev/null
+++ b/client/imports/parties/party-details.component.scss
@@ -0,0 +1,32 @@
+.ma-party-details-container {
+  padding: 20px;
+
+  .angular-google-map-container {
+    width: 100%;
+    height: 100%;
+  }
+
+  .angular-google-map {
+    width: 100%;
+    height: 400px;
+  }
+
+  .ma-map-title {
+    font-size: 16px;
+    font-weight: bolder;
+  }
+
+  .ma-invite-list {
+    margin-top: 20px;
+    margin-bottom: 20px;
+
+    h3 {
+      font-size: 16px;
+      font-weight: bolder;
+    }
+
+    ul {
+      padding: 0;
+    }
+  }
+}
-- 
2.7.4


From 0d11359a1b7b9c7e67ff1e4d419d722ab2873c80 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 12:57:52 +0200
Subject: [PATCH 152/276] Step 17.13: Add components styles in main style entry
 point

---
 client/main.scss | 41 +++++++++++++++++++++++++++++++++++++++--
 1 file changed, 39 insertions(+), 2 deletions(-)

diff --git a/client/main.scss b/client/main.scss
index 7f71284..80aa956 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,7 +1,44 @@
 @import "{}/node_modules/angular2-meteor-accounts-ui/build/login-buttons.scss";
 @import "{}/node_modules/bootstrap/scss/bootstrap.scss";
 
+$color1 : #2F2933;
+$color2 : #01A2A6;
+$color3 : #29D9C2;
+$color4 : #BDF271;
+$color5 : #FFFFA6;
+$color6 : #2F2933;
+$color7 : #FF6F69;
+
+html, body {
+  height: 100%;
+}
+
+body {
+  background-color: #f8f8f8;
+  font-family: 'Muli', sans-serif;
+}
+
 .sebm-google-map-container {
-  width: 400px;
-  height: 400px;
+  width: 450px;
+  height: 450px;
 }
+
+.navbar {
+  background-color: #ffffff;
+  border-bottom: #eee 1px solid;
+  color: $color3;
+  font-family: 'Muli', sans-serif;
+  a {
+    color: $color3;
+    text-decoration: none !important;
+  }
+
+  .navbar-right-container {
+    position: absolute;
+    top: 17px;
+    right: 17px;
+  }
+}
+
+@import "./imports/parties/parties-list.component";
+@import "./imports/parties/party-details.component";
-- 
2.7.4


From 17ede42306714f7315b88749cec830feb0054618 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 13:14:00 +0200
Subject: [PATCH 153/276] Step 17.14: Update the layout of the party details
 page

---
 .../imports/parties/party-details.component.html   | 89 +++++++++++++---------
 1 file changed, 55 insertions(+), 34 deletions(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index c75c022..ae77363 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -1,40 +1,61 @@
-<form *ngIf="party" (submit)="saveParty()">
-  <label>Name</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name">
+<div class="row ma-party-details-container">
+  <div class="col-sm-6 col-sm-offset-3">
+    <legend>View and Edit Your Party Details:</legend>
+    <form class="form-horizontal" *ngIf="party" (submit)="saveParty()">
+      <div class="form-group">
+        <label>Party Name</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name" class="form-control">
+      </div>
 
-  <label>Description</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
+      <div class="form-group">
+        <label>Description</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description" class="form-control">
+      </div>
 
-  <label>Location</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location">
+      <div class="form-group">
+        <label>Location name</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location" class="form-control">
+      </div>
 
-  <button [disabled]="!isOwner" type="submit">Save</button>
-  <a [routerLink]="['/']">Cancel</a>
-</form>
+      <div class="form-group">
+        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
+        <a [routerLink]="['/']" class="btn">Back</a>
+      </div>
+    </form>
 
-<ul *ngIf="isOwner || isPublic">
-  Users to invite:
-  <li *ngFor="let user of users">
-    <div>{{ user | displayName }}</div>
-    <button (click)="invite(user)">Invite</button>
-  </li>
-</ul>
+    <ul class="ma-invite-list" *ngIf="isOwner || isPublic">
+      <h3>
+        Users to invite:
+      </h3>
+      <li *ngFor="let user of users">
+        <div>{{ user | displayName }}</div>
+        <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
+      </li>
+    </ul>
 
-<div *ngIf="isInvited">
-  <h2>Reply to the invitation</h2>
-  <input type="button" value="I'm going!" (click)="reply('yes')">
-  <input type="button" value="Maybe" (click)="reply('maybe')">
-  <input type="button" value="No" (click)="reply('no')">
-</div>
+    <div *ngIf="isInvited">
+      <h2>Reply to the invitation</h2>
+      <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
+      <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
+      <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
+    </div>
+
+    <h3 class="ma-map-title">
+      Click the map to set the party location
+    </h3>
 
-<sebm-google-map
-  [latitude]="lat || centerLat"
-  [longitude]="lng || centerLng"
-  [zoom]="8"
-  (mapClick)="mapClicked($event)">
-  <sebm-google-map-marker
-    *ngIf="lat && lng"
-    [latitude]="lat"
-    [longitude]="lng">
-  </sebm-google-map-marker>
-</sebm-google-map>
+    <div class="angular-google-map-container">
+      <sebm-google-map
+        [latitude]="lat || centerLat"
+        [longitude]="lng || centerLng"
+        [zoom]="8"
+        (mapClick)="mapClicked($event)">
+        <sebm-google-map-marker
+          *ngIf="lat && lng"
+          [latitude]="lat"
+          [longitude]="lng">
+        </sebm-google-map-marker>
+      </sebm-google-map>
+    </div>
+  </div>
+</div>
-- 
2.7.4


From c72c2baf2fadebc0dff7470ef7fcfeacf4dd108b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 13:51:22 +0200
Subject: [PATCH 154/276] Step 18.1: Uninstall bootstrap

---
 package.json | 1 -
 1 file changed, 1 deletion(-)

diff --git a/package.json b/package.json
index af4bf4b..36a91d4 100644
--- a/package.json
+++ b/package.json
@@ -24,7 +24,6 @@
     "angular2-meteor-auto-bootstrap": "0.6.0",
     "angular2-meteor-polyfills": "0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
-    "bootstrap": "^4.0.0-alpha.3",
     "es6-shim": "0.35.1",
     "meteor-node-stubs": "0.2.3",
     "ng2-pagination": "^0.3.5",
-- 
2.7.4


From 3c2437491324df2ed2f0cdf6f93816fa5f958266 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 13:51:46 +0200
Subject: [PATCH 155/276] Step 18.2: Remove bootstrap scss

---
 client/main.scss | 1 -
 1 file changed, 1 deletion(-)

diff --git a/client/main.scss b/client/main.scss
index 80aa956..eb36513 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,5 +1,4 @@
 @import "{}/node_modules/angular2-meteor-accounts-ui/build/login-buttons.scss";
-@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
 
 $color1 : #2F2933;
 $color2 : #01A2A6;
-- 
2.7.4


From ba26e1823f62aa5f6543f96b119178190b8a8b9c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 13:56:09 +0200
Subject: [PATCH 156/276] Step 18.3: Install @angular-material2 packages

---
 package.json | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/package.json b/package.json
index 36a91d4..e3d8f4e 100644
--- a/package.json
+++ b/package.json
@@ -18,6 +18,12 @@
     "@angular/platform-browser": "2.0.0-rc.4",
     "@angular/platform-browser-dynamic": "2.0.0-rc.4",
     "@angular/router": "3.0.0-alpha.8",
+    "@angular2-material/button": "^2.0.0-alpha.6",
+    "@angular2-material/checkbox": "^2.0.0-alpha.6",
+    "@angular2-material/card": "^2.0.0-alpha.6",
+    "@angular2-material/core": "^2.0.0-alpha.6",
+    "@angular2-material/input": "^2.0.0-alpha.6",
+    "@angular2-material/toolbar": "^2.0.0-alpha.6",
     "angular2-google-maps": "^0.12.0",
     "angular2-meteor": "0.6.2",
     "angular2-meteor-accounts-ui": "^0.6.1",
-- 
2.7.4


From 9b1c3cd816e6f9fb311c2df094aff6ed7634b145 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 13:57:14 +0200
Subject: [PATCH 157/276] Step 18.4: Import toolbar in the App

---
 client/app.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index 4f67667..c4fa7db 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,12 +1,13 @@
 import { Component } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
 import { LoginButtons } from 'angular2-meteor-accounts-ui';
+import { MdToolbar } from '@angular2-material/toolbar';
 
 import template from './app.component.html';
 
 @Component({
   selector: 'app',
   template,
-  directives: [ROUTER_DIRECTIVES, LoginButtons]
+  directives: [ROUTER_DIRECTIVES, LoginButtons, MdToolbar]
 })
 export class AppComponent {}
-- 
2.7.4


From 329c9f2bceb286cc0757da84927b7ac69c5b12c9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 14:01:39 +0200
Subject: [PATCH 158/276] Step 18.5: Change the nav bar and the layout

---
 client/app.component.html | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/client/app.component.html b/client/app.component.html
index e5d0c82..219417c 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -1,7 +1,10 @@
-<nav class="navbar navbar-light bg-faded">
-  <a class="navbar-brand" href="#">Socially</a>
-  <login-buttons class="pull-right"></login-buttons>
-</nav>
-<div class="container-fluid">
-  <router-outlet></router-outlet>
-</div>
+<md-toolbar>
+  <h2>
+    <a ui-sref="parties"><span class="md-title">Socially</span></a>
+  </h2>
+  <span flex></span>
+  <div class="navbar-right navbar-text">
+    <login-buttons></login-buttons>
+  </div>
+</md-toolbar>
+<router-outlet flex-gt-sm layout-gt-sm="row"></router-outlet>
-- 
2.7.4


From 1baf58426fde0932e64568c93ab7dfdf94d2790d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 14:15:16 +0200
Subject: [PATCH 159/276] Step 18.6: Update the view of the parties form

---
 client/imports/parties/parties-form.component.html | 20 ++++++--------------
 1 file changed, 6 insertions(+), 14 deletions(-)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index 7611cfa..27baba4 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -1,21 +1,13 @@
-<form [formGroup]="addForm" (ngSubmit)="addParty()" class="form-inline">
+<form [formGroup]="addForm" (ngSubmit)="addParty()">
   <fieldset class="form-group">
-    <label for="partyName">Party name</label>
-    <input id="partyName" class="form-control" type="text" formControlName="name" placeholder="Party name" />
-
-    <label for="description">Description</label>
-    <input id="description" class="form-control" type="text" formControlName="description" placeholder="Description">
-
-    <label for="location_name">Location</label>
-    <input id="location_name" class="form-control" type="text" formControlName="location" placeholder="Location name">
+    <md-input formControlName="name" placeholder="Party name"></md-input>
+    <md-input formControlName="description" placeholder="Description"></md-input>
+    <md-input formControlName="location" placeholder="Location name"></md-input>
 
     <div class="checkbox">
-      <label>
-        <input type="checkbox" formControlName="public">
-        Public
-      </label>
+      <md-checkbox formControlName="public">Public</md-checkbox>
     </div>
 
-    <button type="submit">Add</button>
+    <button md-raised-button type="submit">Add</button>
   </fieldset>
 </form>
-- 
2.7.4


From 90379d0b90ea5b34ef9e808ff48d4eb7cbf1f2a8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 14:15:59 +0200
Subject: [PATCH 160/276] Step 18.7: Import the components into the parties
 form

---
 client/imports/parties/parties-form.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 4e3c1f6..1d0f965 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -1,6 +1,9 @@
 import { Component, OnInit } from '@angular/core';
 import { REACTIVE_FORM_DIRECTIVES, FormGroup, FormBuilder, Validators } from '@angular/forms';
 import { Meteor } from 'meteor/meteor';
+import { MdCheckbox } from '@angular2-material/checkbox';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
 
 import { Parties } from '../../../both/collections/parties.collection';
 
@@ -9,7 +12,7 @@ import template from './parties-form.component.html';
 @Component({
   selector: 'parties-form',
   template,
-  directives: [REACTIVE_FORM_DIRECTIVES]
+  directives: [REACTIVE_FORM_DIRECTIVES, MdCheckbox, MD_INPUT_DIRECTIVES, MD_BUTTON_DIRECTIVES]
 })
 export class PartiesFormComponent implements OnInit {
   addForm: FormGroup;
-- 
2.7.4


From aaab8ca5411ee938c54f425d3c7cdc880109a97e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 14:38:05 +0200
Subject: [PATCH 161/276] Step 18.7: Change the layout of the parties list

---
 client/imports/parties/parties-list.component.html | 145 +++++++++------------
 1 file changed, 61 insertions(+), 84 deletions(-)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 316f1c1..0559fc9 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -1,88 +1,65 @@
-<div class="row">
-  <div class="col-md-12">
-    <div class="jumbotron">
-      <h3>Create a new party!</h3>
-      <parties-form [hidden]="!user"></parties-form>
-      <div [hidden]="user">You need to login to create new parties!</div>
-    </div>
-  </div>
-</div>
-<div class="row ma-filters">
-  <div class="col-md-6">
-    <h3>All Parties:</h3>
-    <form class="form-inline">
-      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
-      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
-      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
-      <option value="1" selected>Ascending</option>
-      <option value="-1">Descending</option>
-    </select>
-    </form>
-  </div>
-</div>
-<div class="row">
-  <div class="col-md-6">
-    <ul class="list-group">
-      <li class="list-group-item">
-        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
-      </li>
-      <li *ngFor="let party of parties"
-          class="list-group-item ma-party-item">
-        <div class="row">
-          <div class="col-sm-8">
-            <h2 class="ma-party-name">
-              <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-            </h2>
-            @ {{party.location.name}}
-            <p class="ma-party-description">
-              {{party.description}}
-            </p>
-          </div>
-          <div class="col-sm-4">
-            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
-                    class="fa fa-times"></i></button>
-          </div>
+<md-content flex layout="row" class="ma-parties-list">
+  <div layout="row" flex>
+    <div flex="50">
+      <div>
+        <md-content class="new-party-form-container">
+          <md-toolbar>
+            <div class="md-toolbar-tools">
+              <h3>Create a new party!</h3>
+            </div>
+          </md-toolbar>
+          <parties-form [hidden]="!user"></parties-form>
+          <div [hidden]="user">You need to login to create new parties!</div>
+        </md-content>
+        <div layout-padding layout="row">
+          <md-input #searchtext placeholder="Search by Location"></md-input>
         </div>
-        <div class="row ma-party-item-bottom">
-          <div class="col-sm-4">
-            <div class="ma-rsvp-sum">
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'yes'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  YES
-                </div>
-              </div>
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'maybe'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  MAYBE
-                </div>
-              </div>
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'no'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  NO
+        <div layout-padding layout="row">
+          Sort by name:
+          <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
+            <option value="1" selected>Ascending</option>
+            <option value="-1">Descending</option>
+          </select>
+        </div>
+
+        <md-content class="md-padding" style="padding-top:0;">
+          <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+          <div *ngFor="let party of parties">
+            <md-card>
+              <md-card-content>
+                <h2 class="md-title ma-name">
+                  <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+                </h2>
+                <p class="ma-description" style="padding:0 10px;margin-bottom:35px;margin-top: 6px;">
+                  {{party.description}}
+                </p>
+                <div layout="row">
+                  <div layout="row" layout-align="end end">
+                    <div>
+                      <div class="rsvps-sum">
+                        <div class="rsvps-amount">{{party | rsvp:'yes'}}</div>
+                        <div class="rsvps-title">Yes</div>
+                      </div>
+                      <div class="rsvps-sum">
+                        <div class="rsvps-amount">{{party | rsvp:'maybe'}}</div>
+                        <div class="rsvps-title">Maybe</div>
+                      </div>
+                      <div class="rsvps-sum">
+                        <div class="rsvps-amount">{{party | rsvp:'no'}}</div>
+                        <div class="rsvps-title">No</div>
+                      </div>
+                    </div>
+                  </div>
                 </div>
-              </div>
-            </div>
+              </md-card-content>
+            </md-card>
           </div>
-        </div>
-      </li>
-      <li class="list-group-item">
-        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
-      </li>
-    </ul>
-  </div>
-  <div class="col-md-6">
-    <ul class="list-group">
-      <li class="list-group-item">
+        </md-content>
+      </div>
+      <div flex="50" layout="row" style="min-height:300px;">
         <sebm-google-map
+          style="width: 100%; min-height:300px;"
+          flex layout="row"
           [latitude]="0"
           [longitude]="0"
           [zoom]="1">
@@ -94,7 +71,7 @@
             </sebm-google-map-marker>
           </div>
         </sebm-google-map>
-      </li>
-    </ul>
+      </div>
+    </div>
   </div>
-</div>
+</md-content>
-- 
2.7.4


From 0511ab301e80bae1944fc42ac5d66bcd57cf85de Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 14:54:33 +0200
Subject: [PATCH 162/276] Step 18.8: Import angular material directives

---
 client/imports/parties/parties-list.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 950b329..1862fe1 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -7,6 +7,9 @@ import { InjectUser } from 'angular2-meteor-accounts-ui';
 import { MeteorComponent } from 'angular2-meteor';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 import { GOOGLE_MAPS_DIRECTIVES } from 'angular2-google-maps/core';
+import { MD_CARD_DIRECTIVES } from '@angular2-material/card';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
 
 import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -19,7 +22,7 @@ import template from './parties-list.component.html';
   selector: 'parties-list',
   template,
   viewProviders: [PaginationService],
-  directives: [GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
+  directives: [MD_CARD_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_INPUT_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
   pipes: [RsvpPipe]
 })
 @InjectUser('user')
-- 
2.7.4


From 7ab7bff12b4506788baa6147549357c295337de2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 15:11:31 +0200
Subject: [PATCH 163/276] Step 18.9: Add some style

---
 client/imports/parties/parties-list.component.scss | 148 ++++++---------------
 1 file changed, 42 insertions(+), 106 deletions(-)

diff --git a/client/imports/parties/parties-list.component.scss b/client/imports/parties/parties-list.component.scss
index 3393841..fde37e4 100644
--- a/client/imports/parties/parties-list.component.scss
+++ b/client/imports/parties/parties-list.component.scss
@@ -1,125 +1,61 @@
-.ma-add-button-container {
-  button.btn {
-    background: $color3;
-    float: right;
-    margin-right: 5px;
-    outline: none;
-    i {
-      color: $color5;
-    }
-  }
-}
-
-.ma-parties-col {
-  padding-top: 20px;
-}
-
-.ma-filters {
-  margin-bottom: 10px;
+.new-party-form-container {
+  margin: 20px;
+  border: 1px gainsboro solid;
 }
-
-.ma-party-item {
-  .ma-party-name {
-    margin-bottom: 20px;
-    a {
-      color: $color6;
-      text-decoration: none !important;
-      font-weight: 400;
-    }
+.ma-parties-list {
+  .sebm-google-map {
+    box-sizing: border-box;
+    -webkit-flex: 1;
+    -ms-flex: 1;
+    flex: 1;
+    -webkit-flex-direction: row;
+    -ms-flex-direction: row;
+    flex-direction: row;
+    box-sizing: border-box;
+    display: -webkit-flex;
+    display: -ms-flexbox;
+    display: flex;
   }
-  .ma-party-description {
-    color: $color6;
-    font-weight: 300;
-    padding-left: 18px;
-    font-size: 14px;
+
+  .angular-google-map-container {
+    box-sizing: border-box;
+    -webkit-flex: 1;
+    -ms-flex: 1;
+    flex: 1;
   }
 
-  .ma-remove {
-    color: lighten($color7, 20%);
-    position: absolute;
-    right: 20px;
-    top: 20px;
-    &:hover {
-      color: $color7;
+  .rsvps-sum {
+    display: inline-block;
+    width: 50px;
+    text-align: center;
+    .rsvps-amount {
+      font-size: 24px;
+    }
+    .rsvps-title {
+      font-size: 13px;
+      color: #aaa;
     }
   }
 
-  .ma-party-item-bottom {
-    padding-top: 10px;
-    .ma-posted-by-col {
-      .ma-posted-by {
-        color: darken($color4, 30%);
-        font-size: 12px;
-      }
-      .ma-everyone-invited {
-        @media (max-width: 400px) {
-          display: block;
-          i {
-            margin-left: 0px !important;
-          }
-        }
-        font-size: 12px;
-        color: darken($color4, 10%);
-        i {
-          color: darken($color4, 10%);
-          margin-left: 5px;
-        }
-      }
+  .ma-party {
+    .party-image {
+      background-size: cover;
+      width: 100%;
+      height: 200px;
     }
 
-    .ma-rsvp-buttons {
-      input.btn {
-        color: darken($color3, 20%);
-        background: transparent !important;
-        outline: none;
-        padding-left: 0;
-        &:active {
-          box-shadow: none;
-        }
-        &:hover {
-          color: darken($color3, 30%);
-        }
-        &.btn-primary {
-          color: lighten($color3, 10%);
-          border: 0;
-          background: transparent !important;
-        }
+    .ma-name {
+      a {
+        text-decoration: none;
+        color: #333;
       }
     }
+    .ma-description {
 
-    .ma-rsvp-sum {
-      width: 160px;
-      @media (min-width: 400px) {
-        float: right;
-      }
-      @media (max-width: 400px) {
-        margin: 0 auto;
-      }
-    }
-    .ma-rsvp-amount {
-      display: inline-block;
-      text-align: center;
-      width: 50px;
-      .ma-amount {
-        font-weight: bold;
-        font-size: 20px;
-      }
-      .ma-rsvp-title {
-        font-size: 11px;
-        color: #aaa;
-        text-transform: uppercase;
-      }
     }
   }
 }
 
-.ma-angular-map-col {
-  .angular-google-map-container, .angular-google-map {
-    height: 100%;
-    width: 100%;
-  }
-}
-
 .search-form {
   margin-bottom: 1em;
 }
-- 
2.7.4


From 36960150735ce13bc1545d1ebcd858839004540d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 15:41:00 +0200
Subject: [PATCH 164/276] Step 18.10: Update the layout of the party details

---
 .../imports/parties/party-details.component.html   | 107 ++++++++++-----------
 1 file changed, 51 insertions(+), 56 deletions(-)

diff --git a/client/imports/parties/party-details.component.html b/client/imports/parties/party-details.component.html
index ae77363..06bce76 100644
--- a/client/imports/parties/party-details.component.html
+++ b/client/imports/parties/party-details.component.html
@@ -1,61 +1,56 @@
-<div class="row ma-party-details-container">
-  <div class="col-sm-6 col-sm-offset-3">
-    <legend>View and Edit Your Party Details:</legend>
-    <form class="form-horizontal" *ngIf="party" (submit)="saveParty()">
-      <div class="form-group">
-        <label>Party Name</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name" class="form-control">
-      </div>
+<div layout="row" flex class="ma-party-details">
+  <div flex="33" offset="33">
+    <md-content class="new-party-form-container">
+      <md-toolbar>
+        <div class="md-toolbar-tools">
+          <h3>Your party details:</h3>
+        </div>
+      </md-toolbar>
+      <form layout="column" *ngIf="party" (submit)="saveParty()">
+        <md-input-container>
+          <label>Party Name: </label>
+          <md-input [disabled]="!isOwner" [(ngModel)]="party.name" name="name"></md-input>
+        </md-input-container>
+        <md-input-container>
+          <label>Party Description</label>
+          <md-input [disabled]="!isOwner" [(ngModel)]="party.description" name="description"></md-input>
+        </md-input-container>
+        <md-input-container>
+          <label>Location name</label>
+          <md-input [disabled]="!isOwner" [(ngModel)]="party.location.name" name="location"></md-input>
+        </md-input-container>
+        <md-checkbox [(checked)]="party.public" name="public" aria-label="Public">
+          Is public
+        </md-checkbox>
 
-      <div class="form-group">
-        <label>Description</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description" class="form-control">
-      </div>
+        <div layout="row" layout-align="left">
+          <button [disabled]="!isOwner" type="submit" md-raised-button class="md-raised md-primary">Save</button>
+          <a [routerLink]="['/']" md-raised-button class="md-raised">Back</a>
+        </div>
 
-      <div class="form-group">
-        <label>Location name</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location" class="form-control">
-      </div>
+        <md-list>
+          <md-subheader class="md-no-sticky">Users to invite:</md-subheader>
+          <md-list-item *ngFor="let user of users">
+            <div>{{ user | displayName }}</div>
+            <button (click)="invite(user)" md-raised-button class="md-raised">Invite</button>
+          </md-list-item>
+        </md-list>
 
-      <div class="form-group">
-        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
-        <a [routerLink]="['/']" class="btn">Back</a>
-      </div>
-    </form>
-
-    <ul class="ma-invite-list" *ngIf="isOwner || isPublic">
-      <h3>
-        Users to invite:
-      </h3>
-      <li *ngFor="let user of users">
-        <div>{{ user | displayName }}</div>
-        <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
-      </li>
-    </ul>
-
-    <div *ngIf="isInvited">
-      <h2>Reply to the invitation</h2>
-      <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
-      <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
-      <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
-    </div>
-
-    <h3 class="ma-map-title">
-      Click the map to set the party location
-    </h3>
-
-    <div class="angular-google-map-container">
-      <sebm-google-map
-        [latitude]="lat || centerLat"
-        [longitude]="lng || centerLng"
-        [zoom]="8"
-        (mapClick)="mapClicked($event)">
-        <sebm-google-map-marker
-          *ngIf="lat && lng"
-          [latitude]="lat"
-          [longitude]="lng">
-        </sebm-google-map-marker>
-      </sebm-google-map>
-    </div>
+        <div class="angular-google-map-container">
+          <sebm-google-map
+            style="height: 300px;"
+            [latitude]="lat || centerLat"
+            [longitude]="lng || centerLng"
+            [zoom]="8"
+            (mapClick)="mapClicked($event)">
+            <sebm-google-map-marker
+              *ngIf="lat && lng"
+              [latitude]="lat"
+              [longitude]="lng">
+            </sebm-google-map-marker>
+          </sebm-google-map>
+        </div>
+      </form>
+    </md-content>
   </div>
 </div>
-- 
2.7.4


From 1f66d53406961845eebbdac9b976b0a12a22ea1f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 15:43:20 +0200
Subject: [PATCH 165/276] Step 18.11: Import material directives

---
 client/imports/parties/party-details.component.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/party-details.component.ts b/client/imports/parties/party-details.component.ts
index 4750d6b..0ee23e1 100644
--- a/client/imports/parties/party-details.component.ts
+++ b/client/imports/parties/party-details.component.ts
@@ -6,6 +6,10 @@ import { Mongo } from 'meteor/mongo';
 import { MeteorComponent } from 'angular2-meteor';
 import { InjectUser } from 'angular2-meteor-accounts-ui';
 import { GOOGLE_MAPS_DIRECTIVES, MouseEvent } from 'angular2-google-maps/core';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_CHECKBOX_DIRECTIVES } from '@angular2-material/checkbox';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
 
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -16,7 +20,7 @@ import template from './party-details.component.html';
 @Component({
   selector: 'party-details',
   template,
-  directives: [ROUTER_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES],
+  directives: [ROUTER_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_CHECKBOX_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES],
   pipes: [DisplayNamePipe]
 })
 @InjectUser('user')
-- 
2.7.4


From a670bcd24e32fb5718910b163cc7cd01c3d3201b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 16:00:27 +0200
Subject: [PATCH 166/276] Step 18.12: Replace login buttons with custom buttons

---
 client/app.component.html | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/app.component.html b/client/app.component.html
index 219417c..b6cf4ee 100644
--- a/client/app.component.html
+++ b/client/app.component.html
@@ -4,7 +4,14 @@
   </h2>
   <span flex></span>
   <div class="navbar-right navbar-text">
-    <login-buttons></login-buttons>
+    <div [hidden]="user">
+      <a md-button [routerLink]="['/login']" >Login</a>
+      <a md-button [routerLink]="['/signup']">Sign up</a>
+    </div>
+    <div [hidden]="!user">
+      <span>{{ user | displayName }}</span>
+      <button md-button (click)="logout()">Logout</button>
+    </div>
   </div>
 </md-toolbar>
 <router-outlet flex-gt-sm layout-gt-sm="row"></router-outlet>
-- 
2.7.4


From 676db99bcd9e00a003b0037dc7027968112eac27 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 16:07:26 +0200
Subject: [PATCH 167/276] Step 18.13: Add some logic to the App component

---
 client/app.component.ts | 22 +++++++++++++++++++---
 1 file changed, 19 insertions(+), 3 deletions(-)

diff --git a/client/app.component.ts b/client/app.component.ts
index c4fa7db..1bd7a62 100644
--- a/client/app.component.ts
+++ b/client/app.component.ts
@@ -1,13 +1,29 @@
 import { Component } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
-import { LoginButtons } from 'angular2-meteor-accounts-ui';
+import { LoginButtons, InjectUser } from 'angular2-meteor-accounts-ui';
+import { MeteorComponent } from 'angular2-meteor';
 import { MdToolbar } from '@angular2-material/toolbar';
+import { Meteor } from 'meteor/meteor';
+
+import { DisplayNamePipe } from './imports/shared/display-name.pipe';
 
 import template from './app.component.html';
 
 @Component({
   selector: 'app',
   template,
-  directives: [ROUTER_DIRECTIVES, LoginButtons, MdToolbar]
+  directives: [ROUTER_DIRECTIVES, LoginButtons, MdToolbar],
+  pipes: [DisplayNamePipe]
 })
-export class AppComponent {}
+@InjectUser('user')
+export class AppComponent extends MeteorComponent {
+  user: Meteor.User;
+
+  constructor() {
+    super();
+  }
+
+  logout() {
+    Meteor.logout();
+  }
+}
-- 
2.7.4


From 95be1ca821d8ed0c656c3a620817e770974d2722 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 16:13:24 +0200
Subject: [PATCH 168/276] Step 18.14: Create LoginComponent

---
 client/imports/auth/login.component.ts | 48 ++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)
 create mode 100644 client/imports/auth/login.component.ts

diff --git a/client/imports/auth/login.component.ts b/client/imports/auth/login.component.ts
new file mode 100644
index 0000000..b35594c
--- /dev/null
+++ b/client/imports/auth/login.component.ts
@@ -0,0 +1,48 @@
+import { Component, OnInit } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+import { FormBuilder, FormGroup, Validators, REACTIVE_FORM_DIRECTIVES } from '@angular/forms';
+import { Router , ROUTER_DIRECTIVES} from '@angular/router';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
+import { Meteor } from 'meteor/meteor';
+
+import template from './login.component.html';
+
+@Component({
+  selector: 'login',
+  template,
+  directives: [ROUTER_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES, REACTIVE_FORM_DIRECTIVES],
+})
+export class LoginComponent extends MeteorComponent implements OnInit {
+  loginForm: FormGroup;
+  error: string;
+
+  constructor(
+    private router: Router,
+    private formBuilder: FormBuilder
+  ) {
+    super();
+  }
+
+  ngOnInit() {
+    this.loginForm = this.formBuilder.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  login(credentials) {
+    if (this.loginForm.valid) {
+      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
-- 
2.7.4


From 06cdea3c3a883a0a3989d44eaa72d13e24feeb9c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 16:18:05 +0200
Subject: [PATCH 169/276] Step 18.15: Create a template for LoginComponent

---
 client/imports/auth/login.component.html | 37 ++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)
 create mode 100644 client/imports/auth/login.component.html

diff --git a/client/imports/auth/login.component.html b/client/imports/auth/login.component.html
new file mode 100644
index 0000000..d395578
--- /dev/null
+++ b/client/imports/auth/login.component.html
@@ -0,0 +1,37 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign in
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Sign in with your email</p>
+      </div>
+
+      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
+        layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <a md-button [routerLink]="['/recover']">Forgot password?</a>
+          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/signup']">Need an account?</a>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From da51a4ff2f20f2d84016542cc4d1924b9ed91945 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 16:55:18 +0200
Subject: [PATCH 170/276] Step 18.16: Add the login route

---
 client/app.routes.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index 6e818ee..fceb923 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -3,10 +3,12 @@ import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './imports/parties/parties-list.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
+import { LoginComponent } from './imports/auth/login.component';
 
 const routes: RouterConfig = [
   { path: '', component: PartiesListComponent },
-  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] }
+  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] },
+  { path: 'login', component: LoginComponent },
 ];
 
 export const APP_ROUTER_PROVIDERS = [
-- 
2.7.4


From 8fb8f14ccb138e96b7fcfdb5f75dcfe3d7edcc87 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 16:59:44 +0200
Subject: [PATCH 171/276] Step 18.17: Create SignupComponent

---
 client/imports/auth/signup.component.ts | 51 +++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)
 create mode 100644 client/imports/auth/signup.component.ts

diff --git a/client/imports/auth/signup.component.ts b/client/imports/auth/signup.component.ts
new file mode 100644
index 0000000..e2cbbfb
--- /dev/null
+++ b/client/imports/auth/signup.component.ts
@@ -0,0 +1,51 @@
+import { Component, OnInit } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+import { FormBuilder, FormGroup, Validators, REACTIVE_FORM_DIRECTIVES } from '@angular/forms';
+import { Router , ROUTER_DIRECTIVES} from '@angular/router';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './signup.component.html';
+
+@Component({
+  selector: 'signup',
+  template,
+  directives: [ROUTER_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES, REACTIVE_FORM_DIRECTIVES],
+})
+export class SignupComponent extends MeteorComponent implements OnInit {
+  signupForm: FormGroup;
+  error: string;
+
+  constructor(
+    private router: Router,
+    private formBuilder: FormBuilder
+  ) {
+    super();
+  }
+
+  ngOnInit() {
+    this.signupForm = this.formBuilder.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  signup() {
+    if (this.signupForm.valid) {
+      Accounts.createUser({
+        email: this.signupForm.value.email,
+        password: this.signupForm.value.password
+      }, (err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
-- 
2.7.4


From 3742fc9334fed622b22c87545cfd9ade330479d6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 17:01:31 +0200
Subject: [PATCH 172/276] Step 18.18: A view for SignupComponent

---
 client/imports/auth/signup.component.html | 32 +++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)
 create mode 100644 client/imports/auth/signup.component.html

diff --git a/client/imports/auth/signup.component.html b/client/imports/auth/signup.component.html
new file mode 100644
index 0000000..185a1b1
--- /dev/null
+++ b/client/imports/auth/signup.component.html
@@ -0,0 +1,32 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign up
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <form [formGroup]="signupForm" #f="ngForm" (ngSubmit)="signup()"
+        layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign Up</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/login']">Already a user?</a>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From c55cb34073c9760f742932a801797513f6cb6a3c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 17:02:27 +0200
Subject: [PATCH 173/276] Step 18.19: Add the signup route

---
 client/app.routes.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index fceb923..87db5a4 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -4,11 +4,13 @@ import { Meteor } from 'meteor/meteor';
 import { PartiesListComponent } from './imports/parties/parties-list.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
 import { LoginComponent } from './imports/auth/login.component';
+import { SignupComponent } from './imports/auth/signup.component';
 
 const routes: RouterConfig = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] },
   { path: 'login', component: LoginComponent },
+  { path: 'signup', component: SignupComponent },
 ];
 
 export const APP_ROUTER_PROVIDERS = [
-- 
2.7.4


From 4821a0f34d2a24b7fe97f75642a39a650ec6ad21 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 17:33:20 +0200
Subject: [PATCH 174/276] Step 18.20: Create RecoverComponent

---
 client/imports/auth/recover.component.ts | 49 ++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)
 create mode 100644 client/imports/auth/recover.component.ts

diff --git a/client/imports/auth/recover.component.ts b/client/imports/auth/recover.component.ts
new file mode 100644
index 0000000..92bdcfe
--- /dev/null
+++ b/client/imports/auth/recover.component.ts
@@ -0,0 +1,49 @@
+import { Component, OnInit } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+import { FormBuilder, FormGroup, Validators, REACTIVE_FORM_DIRECTIVES } from '@angular/forms';
+import { Router , ROUTER_DIRECTIVES} from '@angular/router';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './recover.component.html';
+
+@Component({
+  selector: 'recover',
+  template,
+  directives: [ROUTER_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES, REACTIVE_FORM_DIRECTIVES],
+})
+export class RecoverComponent extends MeteorComponent implements OnInit {
+  recoverForm: FormGroup;
+  error: string;
+
+  constructor(
+    private router: Router,
+    private formBuilder: FormBuilder
+  ) {
+    super();
+  }
+
+  ngOnInit() {
+    this.recoverForm = this.formBuilder.group({
+      email: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  recover() {
+    if (this.recoverForm.valid) {
+      Accounts.forgotPassword({
+        email: this.recoverForm.value.email
+      }, (err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
-- 
2.7.4


From 7d0f9ff266d15b0d2fff3e05c72f4b75f9a585ee Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 17:35:49 +0200
Subject: [PATCH 175/276] Step 18.21: Create a view for the RecoverComponent

---
 client/imports/auth/recover.component.html | 31 ++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)
 create mode 100644 client/imports/auth/recover.component.html

diff --git a/client/imports/auth/recover.component.html b/client/imports/auth/recover.component.html
new file mode 100644
index 0000000..de719c6
--- /dev/null
+++ b/client/imports/auth/recover.component.html
@@ -0,0 +1,31 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Recover Your Password
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <form [formGroup]="recoverForm" #f="ngForm" (ngSubmit)="recover()"
+        layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="Recover">Recover</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/login']">Remember your password?</a>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From bf48466bfd06bf16640f7ac8be26ee02327c9821 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 17:36:38 +0200
Subject: [PATCH 176/276] Step 18.22: Define the reset route

---
 client/app.routes.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index 87db5a4..7e86b13 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -5,12 +5,14 @@ import { PartiesListComponent } from './imports/parties/parties-list.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
 import { LoginComponent } from './imports/auth/login.component';
 import { SignupComponent } from './imports/auth/signup.component';
+import { RecoverComponent } from './imports/auth/recover.component';
 
 const routes: RouterConfig = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] },
   { path: 'login', component: LoginComponent },
   { path: 'signup', component: SignupComponent },
+  { path: 'recover', component: RecoverComponent },
 ];
 
 export const APP_ROUTER_PROVIDERS = [
-- 
2.7.4


From 2f7c26875c8de15604b8cbf7d2b4575a17838ea2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:07:29 +0200
Subject: [PATCH 177/276] Step 20.1: Add jalik:ufs

---
 .meteor/packages | 1 +
 .meteor/versions | 2 ++
 2 files changed, 3 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index fe9d783..321019e 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -26,3 +26,4 @@ accounts-password
 tmeasday:publish-counts
 check
 email
+jalik:ufs
diff --git a/.meteor/versions b/.meteor/versions
index b46c34d..8786a32 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -43,11 +43,13 @@ htmljs@1.0.10
 http@1.1.8
 hwillson:stub-collections@1.0.1
 id-map@1.0.8
+jalik:ufs@0.6.2
 jquery@1.11.9
 launch-screen@1.0.12
 livedata@1.0.18
 localstorage@1.0.11
 logging@1.1.14
+matb33:collection-hooks@0.7.15
 meteor@1.2.16
 meteor-base@1.0.4
 minifier-css@1.2.13
-- 
2.7.4


From ca0406e373fe7bd2654c885e8c61c146bb6c7624 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:09:27 +0200
Subject: [PATCH 178/276] Step 20.2: Add jalik:ufs-gridfs

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 321019e..0eaa572 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -27,3 +27,4 @@ tmeasday:publish-counts
 check
 email
 jalik:ufs
+jalik:ufs-gridfs
diff --git a/.meteor/versions b/.meteor/versions
index 8786a32..b7fd879 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -44,6 +44,7 @@ http@1.1.8
 hwillson:stub-collections@1.0.1
 id-map@1.0.8
 jalik:ufs@0.6.2
+jalik:ufs-gridfs@0.1.1
 jquery@1.11.9
 launch-screen@1.0.12
 livedata@1.0.18
-- 
2.7.4


From 4a50d1e93a56175da15cff97348a40b32e0a5846 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:10:43 +0200
Subject: [PATCH 179/276] Step 20.3: Create Images and Thumbs collections

---
 both/collections/images.collection.ts | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 both/collections/images.collection.ts

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
new file mode 100644
index 0000000..a522111
--- /dev/null
+++ b/both/collections/images.collection.ts
@@ -0,0 +1,21 @@
+import { Meteor } from 'meteor/meteor';
+import { Mongo } from 'meteor/mongo';
+
+export const Images = new Mongo.Collection('images');
+export const Thumbs = new Mongo.Collection('thumbs');
+
+function loggedIn(userId) {
+  return !!userId;
+}
+
+Thumbs.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
+
+Images.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
-- 
2.7.4


From 5d3e29792f7c80b5a242b2dda497052bdc3be2f1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:11:29 +0200
Subject: [PATCH 180/276] Step 20.4: Define Image interface

---
 both/interfaces/image.interface.ts | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 both/interfaces/image.interface.ts

diff --git a/both/interfaces/image.interface.ts b/both/interfaces/image.interface.ts
new file mode 100644
index 0000000..00b6aa2
--- /dev/null
+++ b/both/interfaces/image.interface.ts
@@ -0,0 +1,15 @@
+export interface Image {
+  _id?: string;
+  complete: boolean;
+  extension: string;
+  name: string;
+  progress: number;
+  size: number;
+  store: string;
+  token: string;
+  type: string;
+  uploadedAt: Date;
+  uploading: boolean;
+  url: string;
+  userId?: string;
+}
-- 
2.7.4


From db7b96fbfd1c5603e6c88549588ebd5273f0a8ea Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:12:39 +0200
Subject: [PATCH 181/276] Step 20.5: Define Thumbs interface

---
 both/interfaces/image.interface.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/both/interfaces/image.interface.ts b/both/interfaces/image.interface.ts
index 00b6aa2..0813b6f 100644
--- a/both/interfaces/image.interface.ts
+++ b/both/interfaces/image.interface.ts
@@ -13,3 +13,8 @@ export interface Image {
   url: string;
   userId?: string;
 }
+
+export interface Thumb extends Image  {
+  originalStore?: string;
+  originalId?: string;
+}
-- 
2.7.4


From 751aa1522934144ac4025d513e23408e8bb2661f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:13:32 +0200
Subject: [PATCH 182/276] Step 20.6: Add interfaces to Mongo Collections

---
 both/collections/images.collection.ts | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
index a522111..af98e71 100644
--- a/both/collections/images.collection.ts
+++ b/both/collections/images.collection.ts
@@ -1,8 +1,10 @@
 import { Meteor } from 'meteor/meteor';
 import { Mongo } from 'meteor/mongo';
 
-export const Images = new Mongo.Collection('images');
-export const Thumbs = new Mongo.Collection('thumbs');
+import { Image, Thumb } from '../interfaces/image.interface';
+
+export const Images = new Mongo.Collection<Image>('images');
+export const Thumbs = new Mongo.Collection<Thumb>('thumbs');
 
 function loggedIn(userId) {
   return !!userId;
-- 
2.7.4


From 1d9584f1745aed7b8b8958763e27ab090bfa5b02 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:21:19 +0200
Subject: [PATCH 183/276] Step 20.5: Create stores for Images and Thumbs

---
 both/collections/images.collection.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
index af98e71..d5e1aaf 100644
--- a/both/collections/images.collection.ts
+++ b/both/collections/images.collection.ts
@@ -1,11 +1,28 @@
 import { Meteor } from 'meteor/meteor';
 import { Mongo } from 'meteor/mongo';
+import { UploadFS } from 'meteor/jalik:ufs';
 
 import { Image, Thumb } from '../interfaces/image.interface';
 
 export const Images = new Mongo.Collection<Image>('images');
 export const Thumbs = new Mongo.Collection<Thumb>('thumbs');
 
+export const ThumbsStore = new UploadFS.store.GridFS({
+  collection: Thumbs,
+  name: 'thumbs'
+});
+
+export const ImagesStore = new UploadFS.store.GridFS({
+  collection: Images,
+  name: 'images',
+  filter: new UploadFS.Filter({
+    contentTypes: ['image/*']
+  }),
+  copyTo: [
+    ThumbsStore
+  ]
+});
+
 function loggedIn(userId) {
   return !!userId;
 }
-- 
2.7.4


From 2d195dda544af8fc5bbb1fab18fbafdf75ebfc1e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:22:49 +0200
Subject: [PATCH 184/276] Step 20.6: Resize images

---
 both/collections/images.collection.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
index d5e1aaf..0f173f8 100644
--- a/both/collections/images.collection.ts
+++ b/both/collections/images.collection.ts
@@ -9,7 +9,19 @@ export const Thumbs = new Mongo.Collection<Thumb>('thumbs');
 
 export const ThumbsStore = new UploadFS.store.GridFS({
   collection: Thumbs,
-  name: 'thumbs'
+  name: 'thumbs',
+  transformWrite(from, to, fileId, file) {
+    // Resize to 32x32
+    const gm = require('gm');
+
+    gm(from, file.name)
+      .resize(32, 32)
+      .gravity('Center')
+      .extent(32, 32)
+      .quality(75)
+      .stream()
+      .pipe(to);
+  }
 });
 
 export const ImagesStore = new UploadFS.store.GridFS({
-- 
2.7.4


From 530d0c267a912f90a84194ac63f0c1089a0db8a0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:23:47 +0200
Subject: [PATCH 185/276] Step 20.7: Install gm

---
 package.json | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/package.json b/package.json
index e3d8f4e..b628942 100644
--- a/package.json
+++ b/package.json
@@ -19,8 +19,8 @@
     "@angular/platform-browser-dynamic": "2.0.0-rc.4",
     "@angular/router": "3.0.0-alpha.8",
     "@angular2-material/button": "^2.0.0-alpha.6",
-    "@angular2-material/checkbox": "^2.0.0-alpha.6",
     "@angular2-material/card": "^2.0.0-alpha.6",
+    "@angular2-material/checkbox": "^2.0.0-alpha.6",
     "@angular2-material/core": "^2.0.0-alpha.6",
     "@angular2-material/input": "^2.0.0-alpha.6",
     "@angular2-material/toolbar": "^2.0.0-alpha.6",
@@ -31,6 +31,7 @@
     "angular2-meteor-polyfills": "0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
     "es6-shim": "0.35.1",
+    "gm": "^1.22.0",
     "meteor-node-stubs": "0.2.3",
     "ng2-pagination": "^0.3.5",
     "reflect-metadata": "0.1.3",
-- 
2.7.4


From aecc3e77e7c684c34ce1708f7a3eda71772be6a0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:24:18 +0200
Subject: [PATCH 186/276] Step 20.8: Install angular2-file-drop

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index b628942..5a66852 100644
--- a/package.json
+++ b/package.json
@@ -24,6 +24,7 @@
     "@angular2-material/core": "^2.0.0-alpha.6",
     "@angular2-material/input": "^2.0.0-alpha.6",
     "@angular2-material/toolbar": "^2.0.0-alpha.6",
+    "angular2-file-drop": "0.0.3",
     "angular2-google-maps": "^0.12.0",
     "angular2-meteor": "0.6.2",
     "angular2-meteor-accounts-ui": "^0.6.1",
-- 
2.7.4


From 8768cbe6a1ebf349bdce63a28072b37f19885210 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:26:12 +0200
Subject: [PATCH 187/276] Step 20.9: Create a view for an upload

---
 client/imports/parties/parties-upload.component.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/parties/parties-upload.component.html

diff --git a/client/imports/parties/parties-upload.component.html b/client/imports/parties/parties-upload.component.html
new file mode 100644
index 0000000..2a5ca95
--- /dev/null
+++ b/client/imports/parties/parties-upload.component.html
@@ -0,0 +1,5 @@
+<div layout="column">
+  <div>
+    <div>Drop an image to here</div>
+  </div>
+</div>
-- 
2.7.4


From dc0468939c91d41dadc81b8f41a26280d74ca6b2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:26:44 +0200
Subject: [PATCH 188/276] Step 20.10: Create a PartiesUpload component

---
 client/imports/parties/parties-upload.component.ts | 13 +++++++++++++
 1 file changed, 13 insertions(+)
 create mode 100644 client/imports/parties/parties-upload.component.ts

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
new file mode 100644
index 0000000..8513d0f
--- /dev/null
+++ b/client/imports/parties/parties-upload.component.ts
@@ -0,0 +1,13 @@
+import { Component } from '@angular/core';
+import { FileDropDirective } from 'angular2-file-drop';
+
+import template from './parties-upload.component.html';
+
+@Component({
+  selector: 'parties-upload',
+  template,
+  directives: [ FileDropDirective ]
+})
+export class PartiesUpload {
+  constructor() {}
+}
-- 
2.7.4


From 8a4a6f78eb7719df2a7801b514b0055f562cd3ed Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:28:11 +0200
Subject: [PATCH 189/276] Step 20.11: Import PartiesForm in PartiesForm

---
 client/imports/parties/parties-form.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index 1d0f965..c11ee1d 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -6,13 +6,14 @@ import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
 import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
 
 import { Parties } from '../../../both/collections/parties.collection';
+import { PartiesUpload } from './parties-upload.component';
 
 import template from './parties-form.component.html';
 
 @Component({
   selector: 'parties-form',
   template,
-  directives: [REACTIVE_FORM_DIRECTIVES, MdCheckbox, MD_INPUT_DIRECTIVES, MD_BUTTON_DIRECTIVES]
+  directives: [REACTIVE_FORM_DIRECTIVES, MdCheckbox, MD_INPUT_DIRECTIVES, MD_BUTTON_DIRECTIVES, PartiesUpload]
 })
 export class PartiesFormComponent implements OnInit {
   addForm: FormGroup;
-- 
2.7.4


From 8828a36bcaae6ea945f2db57797bb9e54b661c87 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:30:35 +0200
Subject: [PATCH 190/276] Step 20.12: Use it inside the view

---
 client/imports/parties/parties-form.component.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index 27baba4..7c38b04 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -8,6 +8,8 @@
       <md-checkbox formControlName="public">Public</md-checkbox>
     </div>
 
+    <parties-upload></parties-upload>
+
     <button md-raised-button type="submit">Add</button>
   </fieldset>
 </form>
-- 
2.7.4


From 0097ea9161b8641f4ead44057b32330a8772a06d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:31:20 +0200
Subject: [PATCH 191/276] Step 20.13: Add bindings to FileDrop

---
 client/imports/parties/parties-upload.component.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.html b/client/imports/parties/parties-upload.component.html
index 2a5ca95..63090cb 100644
--- a/client/imports/parties/parties-upload.component.html
+++ b/client/imports/parties/parties-upload.component.html
@@ -1,5 +1,8 @@
 <div layout="column">
-  <div>
+  <div fileDrop
+    [ngClass]="{'file-is-over': fileIsOver}"
+    (fileOver)="fileOver($event)"
+    (onFileDrop)="onFileDrop($event)">
     <div>Drop an image to here</div>
   </div>
 </div>
-- 
2.7.4


From 1d21fbbea527a5480021e2d69fe89e658f4bd3ae Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:32:26 +0200
Subject: [PATCH 192/276] Step 20.14: Handle fileIsOver

---
 client/imports/parties/parties-upload.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 8513d0f..c9508c8 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -9,5 +9,11 @@ import template from './parties-upload.component.html';
   directives: [ FileDropDirective ]
 })
 export class PartiesUpload {
+  fileIsOver: boolean = false;
+
   constructor() {}
+
+  fileOver(fileIsOver: boolean): void {
+    this.fileIsOver = fileIsOver;
+  }
 }
-- 
2.7.4


From 9deba9bedcbf53e80bb1ff3270074e11d19b9102 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:32:51 +0200
Subject: [PATCH 193/276] Step 20.15: Implement onFileDrop method

---
 client/imports/parties/parties-upload.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index c9508c8..ed3affe 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -16,4 +16,8 @@ export class PartiesUpload {
   fileOver(fileIsOver: boolean): void {
     this.fileIsOver = fileIsOver;
   }
+
+  onFileDrop(file: File): void {
+    console.log('Got file');
+  }
 }
-- 
2.7.4


From 0536e32898ef7156429a47a1b9e6679d43662a09 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:34:43 +0200
Subject: [PATCH 194/276] Step 20.16: Implement the upload method

---
 both/methods/images.methods.ts | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)
 create mode 100644 both/methods/images.methods.ts

diff --git a/both/methods/images.methods.ts b/both/methods/images.methods.ts
new file mode 100644
index 0000000..9c0db91
--- /dev/null
+++ b/both/methods/images.methods.ts
@@ -0,0 +1,22 @@
+import { UploadFS } from 'meteor/jalik:ufs';
+import { ImagesStore } from '../collections/images.collection';
+
+export function upload(data: File): Promise<any> {
+  return new Promise((resolve, reject) => {
+    // pick from an object only: name, type and size
+    const file = {
+      name: data.name,
+      type: data.type,
+      size: data.size,
+    };
+
+    const upload = new UploadFS.Uploader({
+      data,
+      file,
+      store: ImagesStore,
+      onError: reject,
+      onComplete: resolve
+    });
+    upload.start();
+  });
+}
-- 
2.7.4


From 708b311f610f52aafd9c7ed11aa725b1373c2585 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:37:10 +0200
Subject: [PATCH 195/276] Step 20.17: Use the upload function

---
 client/imports/parties/parties-upload.component.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index ed3affe..cd43b07 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -1,6 +1,8 @@
 import { Component } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
 
+import { upload } from '../../../both/methods/images.methods';
+
 import template from './parties-upload.component.html';
 
 @Component({
@@ -10,6 +12,7 @@ import template from './parties-upload.component.html';
 })
 export class PartiesUpload {
   fileIsOver: boolean = false;
+  uploading: boolean = false;
 
   constructor() {}
 
@@ -18,6 +21,15 @@ export class PartiesUpload {
   }
 
   onFileDrop(file: File): void {
-    console.log('Got file');
+    this.uploading = true;
+
+    upload(file)
+      .then(() => {
+        this.uploading = false;
+      })
+      .catch((error) => {
+        this.uploading = false;
+        console.log(`Something went wrong!`, error);
+      });
   }
 }
-- 
2.7.4


From 18e048fb7fbf17b6996fcb0322ea402649e0c62a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 10:42:14 +0200
Subject: [PATCH 196/276] Step 20.18: Declare meteor/jalik:ufs module

---
 typings/jalik-ufs.d.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 typings/jalik-ufs.d.ts

diff --git a/typings/jalik-ufs.d.ts b/typings/jalik-ufs.d.ts
new file mode 100644
index 0000000..df89a45
--- /dev/null
+++ b/typings/jalik-ufs.d.ts
@@ -0,0 +1,11 @@
+declare module "meteor/jalik:ufs" {
+  interface Uploader {
+    start: () => void;
+  }
+
+  interface UploadFS {
+    Uploader: (options: any) => Uploader;
+  }
+
+  export var UploadFS;
+}
-- 
2.7.4


From 0218bb686da1b068e3d104e60396d99b0d4c9f38 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 10:42:54 +0200
Subject: [PATCH 197/276] Step 20.19: Install definitions of NodeJS

---
 typings.json                      |    3 +-
 typings/globals/node/index.d.ts   | 2475 +++++++++++++++++++++++++++++++++++++
 typings/globals/node/typings.json |   14 +
 typings/index.d.ts                |    1 +
 4 files changed, 2492 insertions(+), 1 deletion(-)
 create mode 100644 typings/globals/node/index.d.ts
 create mode 100644 typings/globals/node/typings.json

diff --git a/typings.json b/typings.json
index 2bfa50d..8056b23 100644
--- a/typings.json
+++ b/typings.json
@@ -8,6 +8,7 @@
     "chai": "registry:dt/chai#3.4.0+20160601211834",
     "es6-shim": "registry:dt/es6-shim#0.31.2+20160602141504",
     "meteor": "github:meteor-typings/meteor/1.3#955b89a4e2af892d1736bc570b490a97e860d5b7",
-    "mocha": "registry:dt/mocha#2.2.5+20160619032855"
+    "mocha": "registry:dt/mocha#2.2.5+20160619032855",
+    "node": "registry:env/node#6.0.0+20160723033700"
   }
 }
diff --git a/typings/globals/node/index.d.ts b/typings/globals/node/index.d.ts
new file mode 100644
index 0000000..2939792
--- /dev/null
+++ b/typings/globals/node/index.d.ts
@@ -0,0 +1,2475 @@
+// Generated by typings
+// Source: https://raw.githubusercontent.com/types/env-node/252791c3e37ad437365f1b4b27237c2028b2187d/6/node.d.ts
+interface Error {
+  /**
+   * Returns a string describing the point in the code at which the Error was instantiated.
+   *
+   * For example:
+   *
+   * ```
+   * Error: Things keep happening!
+   *    at /home/gbusey/file.js:525:2
+   *    at Frobnicator.refrobulate (/home/gbusey/business-logic.js:424:21)
+   *    at Actor.<anonymous> (/home/gbusey/actors.js:400:8)
+   *    at increaseSynergy (/home/gbusey/actors.js:701:6)
+   * ```
+   *
+   * The first line is formatted as <error class name>: <error message>, and is followed by a series of stack frames (each line beginning with "at "). Each frame describes a call site within the code that lead to the error being generated. V8 attempts to display a name for each function (by variable name, function name, or object method name), but occasionally it will not be able to find a suitable name. If V8 cannot determine a name for the function, only location information will be displayed for that frame. Otherwise, the determined function name will be displayed with location information appended in parentheses.
+   */
+  stack?: string;
+
+  /**
+   * Returns the string description of error as set by calling new Error(message). The message passed to the constructor will also appear in the first line of the stack trace of the Error, however changing this property after the Error object is created may not change the first line of the stack trace.
+   *
+   * ```
+   * const err = new Error('The message');
+   * console.log(err.message);
+   * // Prints: The message
+   * ```
+   */
+  // message: string;
+}
+
+interface ErrorConstructor {
+  /**
+   * Creates a `.stack` property on `targetObject`, which when accessed returns a string representing the location in the code at which `Error.captureStackTrace()`` was called.
+   *
+   * ```js
+   * const myObject = {};
+   * Error.captureStackTrace(myObject);
+   * myObject.stack  // similar to `new Error().stack`
+   * ```
+   *
+   * The first line of the trace, instead of being prefixed with `ErrorType : message`, will be the result of calling `targetObject.toString()``.
+   *
+   * The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.
+   *
+   * The constructorOpt argument is useful for hiding implementation details of error generation from an end user. For instance:
+   *
+   * ```js
+   * function MyError() {
+   *   Error.captureStackTrace(this, MyError);
+   * }
+   *
+   * // Without passing MyError to captureStackTrace, the MyError
+   * // frame would should up in the .stack property. by passing
+   * // the constructor, we omit that frame and all frames above it.
+   * new MyError().stack
+   * ```
+   */
+  captureStackTrace<T extends {stack?: string}>(targetObject: T, constructorOpt?: new () => T): void;
+
+  /**
+   * The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by `new Error().stack` or `Error.captureStackTrace(obj))``.
+   *
+   * The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed.
+   *
+   * If set to a non-number value, or set to a negative number, stack traces will not capture any frames.
+   */
+  stackTraceLimit(limit: number): void;
+}
+
+// compat for TypeScript 1.8
+// if you use with --target es3 or --target es5 and use below definitions,
+// use the lib.es6.d.ts that is bundled with TypeScript 1.8.
+interface MapConstructor { }
+interface WeakMapConstructor { }
+interface SetConstructor { }
+interface WeakSetConstructor { }
+
+/************************************************
+*                                               *
+*                   GLOBAL                      *
+*                                               *
+************************************************/
+declare var process: NodeJS.Process;
+declare var global: NodeJS.Global;
+
+declare var __filename: string;
+declare var __dirname: string;
+
+declare function setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timer;
+declare function clearTimeout(timeoutId: NodeJS.Timer): void;
+declare function setInterval(callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timer;
+declare function clearInterval(intervalId: NodeJS.Timer): void;
+declare function setImmediate(callback: (...args: any[]) => void, ...args: any[]): any;
+declare function clearImmediate(immediateId: any): void;
+
+interface NodeRequireFunction {
+    (id: string): any;
+}
+
+interface NodeRequire extends NodeRequireFunction {
+    resolve(id: string): string;
+    cache: any;
+    extensions: any;
+    main: any;
+}
+
+declare var require: NodeRequire;
+
+interface NodeModule {
+    exports: any;
+    require: NodeRequireFunction;
+    id: string;
+    filename: string;
+    loaded: boolean;
+    parent: any;
+    children: any[];
+}
+
+declare var module: NodeModule;
+
+// Same as module.exports
+declare var exports: any;
+declare var SlowBuffer: {
+    new (str: string, encoding?: string): Buffer;
+    new (size: number): Buffer;
+    new (size: Uint8Array): Buffer;
+    new (array: any[]): Buffer;
+    prototype: Buffer;
+    isBuffer(obj: any): boolean;
+    byteLength(string: string, encoding?: string): number;
+    concat(list: Buffer[], totalLength?: number): Buffer;
+};
+
+// Console class (compatible with TypeScript `lib.d.ts`).
+declare interface Console {
+  log (msg: any, ...params: any[]): void;
+  info (msg: any, ...params: any[]): void;
+  warn (msg: any, ...params: any[]): void;
+  error (msg: any, ...params: any[]): void;
+  dir (value: any, ...params: any[]): void;
+  time (timerName?: string): void;
+  timeEnd (timerName?: string): void;
+  trace (msg: any, ...params: any[]): void;
+  assert (test?: boolean, msg?: string, ...params: any[]): void;
+
+  Console: new (stdout: NodeJS.WritableStream) => Console;
+}
+
+declare var console: Console;
+
+// Buffer class
+type BufferEncoding = "ascii" | "utf8" | "utf16le" | "ucs2" | "binary" | "hex";
+interface Buffer extends NodeBuffer { }
+
+/**
+ * Raw data is stored in instances of the Buffer class.
+ * A Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.
+ * Valid string encodings: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'
+ */
+declare var Buffer: {
+    /**
+     * Allocates a new buffer containing the given {str}.
+     *
+     * @param str String to store in buffer.
+     * @param encoding encoding to use, optional.  Default is 'utf8'
+     */
+    new (str: string, encoding?: string): Buffer;
+    /**
+     * Allocates a new buffer of {size} octets.
+     *
+     * @param size count of octets to allocate.
+     */
+    new (size: number): Buffer;
+    /**
+     * Allocates a new buffer containing the given {array} of octets.
+     *
+     * @param array The octets to store.
+     */
+    new (array: Uint8Array): Buffer;
+    /**
+     * Produces a Buffer backed by the same allocated memory as
+     * the given {ArrayBuffer}.
+     *
+     *
+     * @param arrayBuffer The ArrayBuffer with which to share memory.
+     */
+    new (arrayBuffer: ArrayBuffer): Buffer;
+    /**
+     * Allocates a new buffer containing the given {array} of octets.
+     *
+     * @param array The octets to store.
+     */
+    new (array: any[]): Buffer;
+    /**
+     * Copies the passed {buffer} data onto a new {Buffer} instance.
+     *
+     * @param buffer The buffer to copy.
+     */
+    new (buffer: Buffer): Buffer;
+    prototype: Buffer;
+    /**
+     * Allocates a new Buffer using an {array} of octets.
+     *
+     * @param array
+     */
+    from(array: any[]): Buffer;
+    /**
+     * When passed a reference to the .buffer property of a TypedArray instance,
+     * the newly created Buffer will share the same allocated memory as the TypedArray.
+     * The optional {byteOffset} and {length} arguments specify a memory range
+     * within the {arrayBuffer} that will be shared by the Buffer.
+     *
+     * @param arrayBuffer The .buffer property of a TypedArray or a new ArrayBuffer()
+     * @param byteOffset
+     * @param length
+     */
+    from(arrayBuffer: ArrayBuffer, byteOffset?: number, length?: number): Buffer;
+    /**
+     * Copies the passed {buffer} data onto a new Buffer instance.
+     *
+     * @param buffer
+     */
+    from(buffer: Buffer): Buffer;
+    /**
+     * Creates a new Buffer containing the given JavaScript string {str}.
+     * If provided, the {encoding} parameter identifies the character encoding.
+     * If not provided, {encoding} defaults to 'utf8'.
+     *
+     * @param str
+     */
+    from(str: string, encoding?: string): Buffer;
+    /**
+     * Returns true if {obj} is a Buffer
+     *
+     * @param obj object to test.
+     */
+    isBuffer(obj: any): obj is Buffer;
+    /**
+     * Returns true if {encoding} is a valid encoding argument.
+     * Valid string encodings in Node 0.12: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'
+     *
+     * @param encoding string to test.
+     */
+    isEncoding(encoding: string): boolean;
+    /**
+     * Gives the actual byte length of a string. encoding defaults to 'utf8'.
+     * This is not the same as String.prototype.length since that returns the number of characters in a string.
+     *
+     * @param string string to test.
+     * @param encoding encoding used to evaluate (defaults to 'utf8')
+     */
+    byteLength(string: string, encoding?: string): number;
+    /**
+     * Returns a buffer which is the result of concatenating all the buffers in the list together.
+     *
+     * If the list has no items, or if the totalLength is 0, then it returns a zero-length buffer.
+     * If the list has exactly one item, then the first item of the list is returned.
+     * If the list has more than one item, then a new Buffer is created.
+     *
+     * @param list An array of Buffer objects to concatenate
+     * @param totalLength Total length of the buffers when concatenated.
+     *   If totalLength is not provided, it is read from the buffers in the list. However, this adds an additional loop to the function, so it is faster to provide the length explicitly.
+     */
+    concat(list: Buffer[], totalLength?: number): Buffer;
+    /**
+     * The same as buf1.compare(buf2).
+     */
+    compare(buf1: Buffer, buf2: Buffer): number;
+};
+
+/************************************************
+*                                               *
+*               GLOBAL INTERFACES               *
+*                                               *
+************************************************/
+declare namespace NodeJS {
+    export interface ErrnoException extends Error {
+        errno?: number;
+        code?: string;
+        path?: string;
+        syscall?: string;
+        stack?: string;
+    }
+
+    export interface EventEmitter {
+        addListener(event: string, listener: Function): this;
+        on(event: string, listener: Function): this;
+        once(event: string, listener: Function): this;
+        removeListener(event: string, listener: Function): this;
+        removeAllListeners(event?: string): this;
+        setMaxListeners(n: number): this;
+        getMaxListeners(): number;
+        listeners(event: string): Function[];
+        emit(event: string, ...args: any[]): boolean;
+        listenerCount(type: string): number;
+    }
+
+    export interface ReadableStream extends EventEmitter {
+        readable: boolean;
+        read(size?: number): string | Buffer;
+        setEncoding(encoding: string): void;
+        isPaused(): boolean;
+        pause(): void;
+        resume(): void;
+        pipe<T extends WritableStream>(destination: T, options?: { end?: boolean; }): T;
+        unpipe<T extends WritableStream>(destination?: T): void;
+        unshift(chunk: string): void;
+        unshift(chunk: Buffer): void;
+        wrap(oldStream: ReadableStream): ReadableStream;
+    }
+
+    export interface WritableStream extends EventEmitter {
+        writable: boolean;
+        write(buffer: Buffer | string, cb?: Function): boolean;
+        write(str: string, encoding?: string, cb?: Function): boolean;
+        end(): void;
+        end(buffer: Buffer, cb?: Function): void;
+        end(str: string, cb?: Function): void;
+        end(str: string, encoding?: string, cb?: Function): void;
+    }
+
+    export interface ReadWriteStream extends ReadableStream, WritableStream { }
+
+    export interface Events extends EventEmitter { }
+
+    export interface Domain extends Events {
+        run(fn: Function): void;
+        add(emitter: Events): void;
+        remove(emitter: Events): void;
+        bind(cb: (err: Error, data: any) => any): any;
+        intercept(cb: (data: any) => any): any;
+        dispose(): void;
+
+        addListener(event: string, listener: Function): this;
+        on(event: string, listener: Function): this;
+        once(event: string, listener: Function): this;
+        removeListener(event: string, listener: Function): this;
+        removeAllListeners(event?: string): this;
+    }
+
+    export interface MemoryUsage {
+        rss: number;
+        heapTotal: number;
+        heapUsed: number;
+    }
+
+    export interface Process extends EventEmitter {
+        stdout: WritableStream;
+        stderr: WritableStream;
+        stdin: ReadableStream;
+        argv: string[];
+        execArgv: string[];
+        execPath: string;
+        abort(): void;
+        chdir(directory: string): void;
+        cwd(): string;
+        env: any;
+        exit(code?: number): void;
+        getgid(): number;
+        setgid(id: number): void;
+        setgid(id: string): void;
+        getuid(): number;
+        setuid(id: number): void;
+        setuid(id: string): void;
+        version: string;
+        versions: {
+            http_parser: string;
+            node: string;
+            v8: string;
+            ares: string;
+            uv: string;
+            zlib: string;
+            openssl: string;
+        };
+        config: {
+            target_defaults: {
+                cflags: any[];
+                default_configuration: string;
+                defines: string[];
+                include_dirs: string[];
+                libraries: string[];
+            };
+            variables: {
+                clang: number;
+                host_arch: string;
+                node_install_npm: boolean;
+                node_install_waf: boolean;
+                node_prefix: string;
+                node_shared_openssl: boolean;
+                node_shared_v8: boolean;
+                node_shared_zlib: boolean;
+                node_use_dtrace: boolean;
+                node_use_etw: boolean;
+                node_use_openssl: boolean;
+                target_arch: string;
+                v8_no_strict_aliasing: number;
+                v8_use_snapshot: boolean;
+                visibility: string;
+            };
+        };
+        kill(pid: number, signal?: string | number): void;
+        pid: number;
+        title: string;
+        arch: string;
+        platform: string;
+        memoryUsage(): MemoryUsage;
+        nextTick(callback: Function): void;
+        umask(mask?: number): number;
+        uptime(): number;
+        hrtime(time?: number[]): number[];
+        domain: Domain;
+
+        // Worker
+        send?(message: any, sendHandle?: any): void;
+        disconnect(): void;
+        connected: boolean;
+    }
+
+    export interface Global {
+        Array: typeof Array;
+        ArrayBuffer: typeof ArrayBuffer;
+        Boolean: typeof Boolean;
+        Buffer: typeof Buffer;
+        DataView: typeof DataView;
+        Date: typeof Date;
+        Error: typeof Error;
+        EvalError: typeof EvalError;
+        Float32Array: typeof Float32Array;
+        Float64Array: typeof Float64Array;
+        Function: typeof Function;
+        GLOBAL: Global;
+        Infinity: typeof Infinity;
+        Int16Array: typeof Int16Array;
+        Int32Array: typeof Int32Array;
+        Int8Array: typeof Int8Array;
+        Intl: typeof Intl;
+        JSON: typeof JSON;
+        Map: MapConstructor;
+        Math: typeof Math;
+        NaN: typeof NaN;
+        Number: typeof Number;
+        Object: typeof Object;
+        Promise: Function;
+        RangeError: typeof RangeError;
+        ReferenceError: typeof ReferenceError;
+        RegExp: typeof RegExp;
+        Set: SetConstructor;
+        String: typeof String;
+        Symbol: Function;
+        SyntaxError: typeof SyntaxError;
+        TypeError: typeof TypeError;
+        URIError: typeof URIError;
+        Uint16Array: typeof Uint16Array;
+        Uint32Array: typeof Uint32Array;
+        Uint8Array: typeof Uint8Array;
+        Uint8ClampedArray: Function;
+        WeakMap: WeakMapConstructor;
+        WeakSet: WeakSetConstructor;
+        clearImmediate: (immediateId: any) => void;
+        clearInterval: (intervalId: NodeJS.Timer) => void;
+        clearTimeout: (timeoutId: NodeJS.Timer) => void;
+        console: typeof console;
+        decodeURI: typeof decodeURI;
+        decodeURIComponent: typeof decodeURIComponent;
+        encodeURI: typeof encodeURI;
+        encodeURIComponent: typeof encodeURIComponent;
+        escape: (str: string) => string;
+        eval: typeof eval;
+        global: Global;
+        isFinite: typeof isFinite;
+        isNaN: typeof isNaN;
+        parseFloat: typeof parseFloat;
+        parseInt: typeof parseInt;
+        process: Process;
+        root: Global;
+        setImmediate: (callback: (...args: any[]) => void, ...args: any[]) => any;
+        setInterval: (callback: (...args: any[]) => void, ms: number, ...args: any[]) => NodeJS.Timer;
+        setTimeout: (callback: (...args: any[]) => void, ms: number, ...args: any[]) => NodeJS.Timer;
+        undefined: typeof undefined;
+        unescape: (str: string) => string;
+        gc: () => void;
+        v8debug?: any;
+    }
+
+    export interface Timer {
+        ref(): void;
+        unref(): void;
+    }
+}
+
+/**
+ * @deprecated
+ */
+interface NodeBuffer extends Uint8Array {
+    write(string: string, offset?: number, length?: number, encoding?: string): number;
+    toString(encoding?: string, start?: number, end?: number): string;
+    toJSON(): any;
+    equals(otherBuffer: Buffer): boolean;
+    compare(otherBuffer: Buffer): number;
+    copy(targetBuffer: Buffer, targetStart?: number, sourceStart?: number, sourceEnd?: number): number;
+    slice(start?: number, end?: number): Buffer;
+    writeUIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    writeUIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    writeIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    writeIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    readUIntLE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readUIntBE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readIntLE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readIntBE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readUInt8(offset: number, noAssert?: boolean): number;
+    readUInt16LE(offset: number, noAssert?: boolean): number;
+    readUInt16BE(offset: number, noAssert?: boolean): number;
+    readUInt32LE(offset: number, noAssert?: boolean): number;
+    readUInt32BE(offset: number, noAssert?: boolean): number;
+    readInt8(offset: number, noAssert?: boolean): number;
+    readInt16LE(offset: number, noAssert?: boolean): number;
+    readInt16BE(offset: number, noAssert?: boolean): number;
+    readInt32LE(offset: number, noAssert?: boolean): number;
+    readInt32BE(offset: number, noAssert?: boolean): number;
+    readFloatLE(offset: number, noAssert?: boolean): number;
+    readFloatBE(offset: number, noAssert?: boolean): number;
+    readDoubleLE(offset: number, noAssert?: boolean): number;
+    readDoubleBE(offset: number, noAssert?: boolean): number;
+    writeUInt8(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt16LE(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt16BE(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt32LE(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt32BE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt8(value: number, offset: number, noAssert?: boolean): number;
+    writeInt16LE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt16BE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt32LE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt32BE(value: number, offset: number, noAssert?: boolean): number;
+    writeFloatLE(value: number, offset: number, noAssert?: boolean): number;
+    writeFloatBE(value: number, offset: number, noAssert?: boolean): number;
+    writeDoubleLE(value: number, offset: number, noAssert?: boolean): number;
+    writeDoubleBE(value: number, offset: number, noAssert?: boolean): number;
+    fill(value: any, offset?: number, end?: number): this;
+    // TODO: encoding param
+    indexOf(value: string | number | Buffer, byteOffset?: number): number;
+    // TODO: entries
+    // TODO: includes
+    // TODO: keys
+    // TODO: values
+}
+
+/************************************************
+*                                               *
+*                   MODULES                     *
+*                                               *
+************************************************/
+declare module "buffer" {
+    export var INSPECT_MAX_BYTES: number;
+    var BuffType: typeof Buffer;
+    var SlowBuffType: typeof SlowBuffer;
+    export { BuffType as Buffer, SlowBuffType as SlowBuffer };
+}
+
+declare module "querystring" {
+    export interface StringifyOptions {
+        encodeURIComponent?: Function;
+    }
+
+    export interface ParseOptions {
+        maxKeys?: number;
+        decodeURIComponent?: Function;
+    }
+
+    export function stringify<T>(obj: T, sep?: string, eq?: string, options?: StringifyOptions): string;
+    export function parse(str: string, sep?: string, eq?: string, options?: ParseOptions): any;
+    export function parse<T extends {}>(str: string, sep?: string, eq?: string, options?: ParseOptions): T;
+    export function escape(str: string): string;
+    export function unescape(str: string): string;
+}
+
+declare module "events" {
+    export class EventEmitter implements NodeJS.EventEmitter {
+        static EventEmitter: EventEmitter;
+        static listenerCount(emitter: EventEmitter, event: string): number; // deprecated
+        static defaultMaxListeners: number;
+
+        addListener(event: string, listener: Function): this;
+        on(event: string, listener: Function): this;
+        once(event: string, listener: Function): this;
+        removeListener(event: string, listener: Function): this;
+        removeAllListeners(event?: string): this;
+        setMaxListeners(n: number): this;
+        getMaxListeners(): number;
+        listeners(event: string): Function[];
+        emit(event: string, ...args: any[]): boolean;
+        listenerCount(type: string): number;
+    }
+}
+
+declare module "http" {
+    import * as events from "events";
+    import * as net from "net";
+    import * as stream from "stream";
+
+    export interface RequestOptions {
+        protocol?: string;
+        host?: string;
+        hostname?: string;
+        family?: number;
+        port?: number | string;
+        localAddress?: string;
+        socketPath?: string;
+        method?: string;
+        path?: string;
+        headers?: { [key: string]: any };
+        auth?: string;
+        agent?: Agent | boolean;
+    }
+
+    export interface Server extends events.EventEmitter, net.Server {
+        setTimeout(msecs: number, callback: Function): void;
+        maxHeadersCount: number;
+        timeout: number;
+    }
+    /**
+     * @deprecated Use IncomingMessage
+     */
+    export interface ServerRequest extends IncomingMessage {
+        connection: net.Socket;
+    }
+    export interface ServerResponse extends events.EventEmitter, stream.Writable {
+        // Extended base methods
+        write(buffer: Buffer): boolean;
+        write(buffer: Buffer, cb?: Function): boolean;
+        write(str: string, cb?: Function): boolean;
+        write(str: string, encoding?: string, cb?: Function): boolean;
+        write(str: string, encoding?: string, fd?: string): boolean;
+
+        writeContinue(): void;
+        writeHead(statusCode: number, reasonPhrase?: string, headers?: any): void;
+        writeHead(statusCode: number, headers?: any): void;
+        statusCode: number;
+        statusMessage: string;
+        headersSent: boolean;
+        setHeader(name: string, value: string | string[]): void;
+        sendDate: boolean;
+        getHeader(name: string): string;
+        removeHeader(name: string): void;
+        write(chunk: any, encoding?: string): any;
+        addTrailers(headers: any): void;
+
+        // Extended base methods
+        end(): void;
+        end(buffer: Buffer, cb?: Function): void;
+        end(str: string, cb?: Function): void;
+        end(str: string, encoding?: string, cb?: Function): void;
+    }
+    export interface ClientRequest extends events.EventEmitter, stream.Writable {
+        // Extended base methods
+        write(buffer: Buffer): boolean;
+        write(buffer: Buffer, cb?: Function): boolean;
+        write(str: string, cb?: Function): boolean;
+        write(str: string, encoding?: string, cb?: Function): boolean;
+        write(str: string, encoding?: string, fd?: string): boolean;
+
+        write(chunk: any, encoding?: string): void;
+        abort(): void;
+        setTimeout(timeout: number, callback?: Function): void;
+        setNoDelay(noDelay?: boolean): void;
+        setSocketKeepAlive(enable?: boolean, initialDelay?: number): void;
+
+        setHeader(name: string, value: string | string[]): void;
+        getHeader(name: string): string;
+        removeHeader(name: string): void;
+        addTrailers(headers: any): void;
+
+        // Extended base methods
+        end(): void;
+        end(buffer: Buffer, cb?: Function): void;
+        end(str: string, cb?: Function): void;
+        end(str: string, encoding?: string, cb?: Function): void;
+        end(data?: any, encoding?: string): void;
+    }
+    export interface IncomingMessage extends events.EventEmitter, stream.Readable {
+        httpVersion: string;
+        headers: any;
+        rawHeaders: string[];
+        trailers: any;
+        rawTrailers: any;
+        setTimeout(msecs: number, callback: Function): NodeJS.Timer;
+        /**
+         * Only valid for request obtained from http.Server.
+         */
+        method?: string;
+        /**
+         * Only valid for request obtained from http.Server.
+         */
+        url?: string;
+        /**
+         * Only valid for response obtained from http.ClientRequest.
+         */
+        statusCode?: number;
+        /**
+         * Only valid for response obtained from http.ClientRequest.
+         */
+        statusMessage?: string;
+        socket: net.Socket;
+    }
+    /**
+     * @deprecated Use IncomingMessage
+     */
+    export interface ClientResponse extends IncomingMessage { }
+
+    export interface AgentOptions {
+        /**
+         * Keep sockets around in a pool to be used by other requests in the future. Default = false
+         */
+        keepAlive?: boolean;
+        /**
+         * When using HTTP KeepAlive, how often to send TCP KeepAlive packets over sockets being kept alive. Default = 1000.
+         * Only relevant if keepAlive is set to true.
+         */
+        keepAliveMsecs?: number;
+        /**
+         * Maximum number of sockets to allow per host. Default for Node 0.10 is 5, default for Node 0.12 is Infinity
+         */
+        maxSockets?: number;
+        /**
+         * Maximum number of sockets to leave open in a free state. Only relevant if keepAlive is set to true. Default = 256.
+         */
+        maxFreeSockets?: number;
+    }
+
+    export class Agent {
+        maxSockets: number;
+        sockets: any;
+        requests: any;
+
+        constructor(opts?: AgentOptions);
+
+        /**
+         * Destroy any sockets that are currently in use by the agent.
+         * It is usually not necessary to do this. However, if you are using an agent with KeepAlive enabled,
+         * then it is best to explicitly shut down the agent when you know that it will no longer be used. Otherwise,
+         * sockets may hang open for quite a long time before the server terminates them.
+         */
+        destroy(): void;
+    }
+
+    export var METHODS: string[];
+
+    export var STATUS_CODES: {
+        [errorCode: number]: string;
+        [errorCode: string]: string;
+    };
+    export function createServer(requestListener?: (request: IncomingMessage, response: ServerResponse) => void): Server;
+    export function createClient(port?: number, host?: string): any;
+    export function request(options: string | RequestOptions, callback?: (res: IncomingMessage) => void): ClientRequest;
+    export function get(options: string | RequestOptions, callback?: (res: IncomingMessage) => void): ClientRequest;
+    export var globalAgent: Agent;
+}
+
+declare module "cluster" {
+    import * as child from "child_process";
+    import * as events from "events";
+
+    export interface ClusterSettings {
+        exec?: string;
+        args?: string[];
+        silent?: boolean;
+    }
+
+    export interface Address {
+        address: string;
+        port: number;
+        addressType: string;
+    }
+
+    export class Worker extends events.EventEmitter {
+        id: string;
+        process: child.ChildProcess;
+        suicide: boolean;
+        send(message: any, sendHandle?: any): void;
+        kill(signal?: string): void;
+        destroy(signal?: string): void;
+        disconnect(): void;
+        isConnected(): boolean;
+        isDead(): boolean;
+    }
+
+    export var settings: ClusterSettings;
+    export var isMaster: boolean;
+    export var isWorker: boolean;
+    export function setupMaster(settings?: ClusterSettings): void;
+    export function fork(env?: any): Worker;
+    export function disconnect(callback?: Function): void;
+    export var worker: Worker;
+    export var workers: {
+        [index: string]: Worker
+    };
+
+    // Event emitter
+    export function addListener(event: string, listener: Function): void;
+    export function on(event: "disconnect", listener: (worker: Worker) => void): void;
+    export function on(event: "exit", listener: (worker: Worker, code: number, signal: string) => void): void;
+    export function on(event: "fork", listener: (worker: Worker) => void): void;
+    export function on(event: "listening", listener: (worker: Worker, address: any) => void): void;
+    export function on(event: "message", listener: (worker: Worker, message: any) => void): void;
+    export function on(event: "online", listener: (worker: Worker) => void): void;
+    export function on(event: "setup", listener: (settings: any) => void): void;
+    export function on(event: string, listener: Function): any;
+    export function once(event: string, listener: Function): void;
+    export function removeListener(event: string, listener: Function): void;
+    export function removeAllListeners(event?: string): void;
+    export function setMaxListeners(n: number): void;
+    export function listeners(event: string): Function[];
+    export function emit(event: string, ...args: any[]): boolean;
+}
+
+declare module "zlib" {
+    import * as stream from "stream";
+    export interface ZlibOptions { chunkSize?: number; windowBits?: number; level?: number; memLevel?: number; strategy?: number; dictionary?: any; }
+    export interface ZlibCallback { (error: Error, result: any): void }
+
+    export interface Gzip extends stream.Transform { }
+    export interface Gunzip extends stream.Transform { }
+    export interface Deflate extends stream.Transform { }
+    export interface Inflate extends stream.Transform { }
+    export interface DeflateRaw extends stream.Transform { }
+    export interface InflateRaw extends stream.Transform { }
+    export interface Unzip extends stream.Transform { }
+
+    export function createGzip(options?: ZlibOptions): Gzip;
+    export function createGunzip(options?: ZlibOptions): Gunzip;
+    export function createDeflate(options?: ZlibOptions): Deflate;
+    export function createInflate(options?: ZlibOptions): Inflate;
+    export function createDeflateRaw(options?: ZlibOptions): DeflateRaw;
+    export function createInflateRaw(options?: ZlibOptions): InflateRaw;
+    export function createUnzip(options?: ZlibOptions): Unzip;
+
+    export function deflate(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function deflate(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function deflateSync(buf: Buffer | string, options?: ZlibOptions): any;
+    export function deflateRaw(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function deflateRaw(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function deflateRawSync(buf: Buffer | string, options?: ZlibOptions): any;
+    export function gzip(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function gzip(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function gzipSync(buf: Buffer | string, options?: ZlibOptions): any;
+    export function gunzip(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function gunzip(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function gunzipSync(buf: Buffer | string, options?: ZlibOptions): any;
+    export function inflate(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function inflate(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function inflateSync(buf: Buffer | string, options?: ZlibOptions): any;
+    export function inflateRaw(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function inflateRaw(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function inflateRawSync(buf: Buffer | string, options?: ZlibOptions): any;
+    export function unzip(buf: Buffer | string, callback?: ZlibCallback): void;
+    export function unzip(buf: Buffer | string, options: ZlibOptions, callback?: ZlibCallback): void;
+    export function unzipSync(buf: Buffer | string, options?: ZlibOptions): any;
+
+    // Constants
+    export var Z_NO_FLUSH: number;
+    export var Z_PARTIAL_FLUSH: number;
+    export var Z_SYNC_FLUSH: number;
+    export var Z_FULL_FLUSH: number;
+    export var Z_FINISH: number;
+    export var Z_BLOCK: number;
+    export var Z_TREES: number;
+    export var Z_OK: number;
+    export var Z_STREAM_END: number;
+    export var Z_NEED_DICT: number;
+    export var Z_ERRNO: number;
+    export var Z_STREAM_ERROR: number;
+    export var Z_DATA_ERROR: number;
+    export var Z_MEM_ERROR: number;
+    export var Z_BUF_ERROR: number;
+    export var Z_VERSION_ERROR: number;
+    export var Z_NO_COMPRESSION: number;
+    export var Z_BEST_SPEED: number;
+    export var Z_BEST_COMPRESSION: number;
+    export var Z_DEFAULT_COMPRESSION: number;
+    export var Z_FILTERED: number;
+    export var Z_HUFFMAN_ONLY: number;
+    export var Z_RLE: number;
+    export var Z_FIXED: number;
+    export var Z_DEFAULT_STRATEGY: number;
+    export var Z_BINARY: number;
+    export var Z_TEXT: number;
+    export var Z_ASCII: number;
+    export var Z_UNKNOWN: number;
+    export var Z_DEFLATED: number;
+    export var Z_NULL: number;
+}
+
+declare module "os" {
+    export interface CpuInfo {
+        model: string;
+        speed: number;
+        times: {
+            user: number;
+            nice: number;
+            sys: number;
+            idle: number;
+            irq: number;
+        };
+    }
+
+    export interface NetworkInterfaceInfo {
+        address: string;
+        netmask: string;
+        family: string;
+        mac: string;
+        internal: boolean;
+    }
+
+    export function tmpdir(): string;
+    export function homedir(): string;
+    export function endianness(): string;
+    export function hostname(): string;
+    export function type(): string;
+    export function platform(): string;
+    export function arch(): string;
+    export function release(): string;
+    export function uptime(): number;
+    export function loadavg(): number[];
+    export function totalmem(): number;
+    export function freemem(): number;
+    export function cpus(): CpuInfo[];
+    export function networkInterfaces(): { [index: string]: NetworkInterfaceInfo[] };
+    export var EOL: string;
+}
+
+declare module "https" {
+    import * as tls from "tls";
+    import * as events from "events";
+    import * as http from "http";
+
+    export interface ServerOptions {
+        pfx?: any;
+        key?: any;
+        passphrase?: string;
+        cert?: any;
+        ca?: any;
+        crl?: any;
+        ciphers?: string;
+        honorCipherOrder?: boolean;
+        requestCert?: boolean;
+        rejectUnauthorized?: boolean;
+        NPNProtocols?: any;
+        SNICallback?: (servername: string) => any;
+    }
+
+    export interface RequestOptions extends http.RequestOptions {
+        pfx?: string | Buffer;
+        key?: string | Buffer;
+        passphrase?: string;
+        cert?: string | Buffer;
+        ca?: string | Buffer | Array<string | Buffer>;
+        ciphers?: string;
+        rejectUnauthorized?: boolean;
+        secureProtocol?: string;
+    }
+
+    export interface Agent extends http.Agent { }
+
+    export interface AgentOptions extends http.AgentOptions {
+        maxCachedSessions?: number;
+    }
+
+    export var Agent: {
+        new (options?: AgentOptions): Agent;
+    };
+    export interface Server extends tls.Server { }
+    export function createServer(options: ServerOptions, requestListener?: Function): Server;
+    export function request(options: string | RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;
+    export function get(options: string | RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;
+    export var globalAgent: Agent;
+}
+
+declare module "punycode" {
+    export function decode(string: string): string;
+    export function encode(string: string): string;
+    export function toUnicode(domain: string): string;
+    export function toASCII(domain: string): string;
+    export var ucs2: ucs2;
+    interface ucs2 {
+        decode(string: string): number[];
+        encode(codePoints: number[]): string;
+    }
+    export var version: any;
+}
+
+declare module "repl" {
+    import * as stream from "stream";
+    import * as events from "events";
+
+    export interface ReplOptions {
+        prompt?: string;
+        input?: NodeJS.ReadableStream;
+        output?: NodeJS.WritableStream;
+        terminal?: boolean;
+        eval?: Function;
+        useColors?: boolean;
+        useGlobal?: boolean;
+        ignoreUndefined?: boolean;
+        writer?: Function;
+    }
+    export function start(options: ReplOptions): events.EventEmitter;
+}
+
+declare module "readline" {
+    import * as events from "events";
+    import * as stream from "stream";
+
+    export interface Key {
+        sequence?: string;
+        name?: string;
+        ctrl?: boolean;
+        meta?: boolean;
+        shift?: boolean;
+    }
+
+    export interface ReadLine extends events.EventEmitter {
+        setPrompt(prompt: string): void;
+        prompt(preserveCursor?: boolean): void;
+        question(query: string, callback: (answer: string) => void): void;
+        pause(): ReadLine;
+        resume(): ReadLine;
+        close(): void;
+        write(data: string | Buffer, key?: Key): void;
+    }
+
+    export interface Completer {
+        (line: string): CompleterResult;
+        (line: string, callback: (err: any, result: CompleterResult) => void): any;
+    }
+
+    export interface CompleterResult {
+        completions: string[];
+        line: string;
+    }
+
+    export interface ReadLineOptions {
+        input: NodeJS.ReadableStream;
+        output?: NodeJS.WritableStream;
+        completer?: Completer;
+        terminal?: boolean;
+        historySize?: number;
+    }
+
+    export function createInterface(input: NodeJS.ReadableStream, output?: NodeJS.WritableStream, completer?: Completer, terminal?: boolean): ReadLine;
+    export function createInterface(options: ReadLineOptions): ReadLine;
+
+    export function cursorTo(stream: NodeJS.WritableStream, x: number, y: number): void;
+    export function moveCursor(stream: NodeJS.WritableStream, dx: number | string, dy: number | string): void;
+    export function clearLine(stream: NodeJS.WritableStream, dir: number): void;
+    export function clearScreenDown(stream: NodeJS.WritableStream): void;
+}
+
+declare module "vm" {
+    export interface Context { }
+    export interface ScriptOptions {
+        filename?: string;
+        lineOffset?: number;
+        columnOffset?: number;
+        displayErrors?: boolean;
+        timeout?: number;
+        cachedData?: Buffer;
+        produceCachedData?: boolean;
+    }
+    export interface RunningScriptOptions {
+        filename?: string;
+        lineOffset?: number;
+        columnOffset?: number;
+        displayErrors?: boolean;
+        timeout?: number;
+    }
+    export class Script {
+        constructor(code: string, options?: ScriptOptions);
+        runInContext(contextifiedSandbox: Context, options?: RunningScriptOptions): any;
+        runInNewContext(sandbox?: Context, options?: RunningScriptOptions): any;
+        runInThisContext(options?: RunningScriptOptions): any;
+    }
+    export function createContext(sandbox?: Context): Context;
+    export function isContext(sandbox: Context): boolean;
+    export function runInContext(code: string, contextifiedSandbox: Context, options?: RunningScriptOptions): any;
+    export function runInDebugContext(code: string): any;
+    export function runInNewContext(code: string, sandbox?: Context, options?: RunningScriptOptions): any;
+    export function runInThisContext(code: string, options?: RunningScriptOptions): any;
+}
+
+declare module "child_process" {
+    import * as events from "events";
+    import * as stream from "stream";
+
+    export interface ChildProcess extends events.EventEmitter {
+        stdin: stream.Writable;
+        stdout: stream.Readable;
+        stderr: stream.Readable;
+        stdio: [stream.Writable, stream.Readable, stream.Readable];
+        pid: number;
+        kill(signal?: string): void;
+        send(message: any, sendHandle?: any): void;
+        connected: boolean;
+        disconnect(): void;
+        unref(): void;
+    }
+
+    export interface SpawnOptions {
+        cwd?: string;
+        env?: any;
+        stdio?: any;
+        detached?: boolean;
+        uid?: number;
+        gid?: number;
+        shell?: boolean | string;
+    }
+    export function spawn(command: string, args?: string[], options?: SpawnOptions): ChildProcess;
+
+    export interface ExecOptions {
+        cwd?: string;
+        env?: any;
+        shell?: string;
+        timeout?: number;
+        maxBuffer?: number;
+        killSignal?: string;
+        uid?: number;
+        gid?: number;
+    }
+    export interface ExecOptionsWithStringEncoding extends ExecOptions {
+        encoding: BufferEncoding;
+    }
+    export interface ExecOptionsWithBufferEncoding extends ExecOptions {
+        encoding: string; // specify `null`.
+    }
+    export function exec(command: string, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    export function exec(command: string, options: ExecOptionsWithStringEncoding, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    // usage. child_process.exec("tsc", {encoding: null as string}, (err, stdout, stderr) => {});
+    export function exec(command: string, options: ExecOptionsWithBufferEncoding, callback?: (error: Error, stdout: Buffer, stderr: Buffer) => void): ChildProcess;
+    export function exec(command: string, options: ExecOptions, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+
+    export interface ExecFileOptions {
+        cwd?: string;
+        env?: any;
+        timeout?: number;
+        maxBuffer?: number;
+        killSignal?: string;
+        uid?: number;
+        gid?: number;
+    }
+    export interface ExecFileOptionsWithStringEncoding extends ExecFileOptions {
+        encoding: BufferEncoding;
+    }
+    export interface ExecFileOptionsWithBufferEncoding extends ExecFileOptions {
+        encoding: string; // specify `null`.
+    }
+    export function execFile(file: string, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    export function execFile(file: string, options?: ExecFileOptionsWithStringEncoding, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    // usage. child_process.execFile("file.sh", {encoding: null as string}, (err, stdout, stderr) => {});
+    export function execFile(file: string, options?: ExecFileOptionsWithBufferEncoding, callback?: (error: Error, stdout: Buffer, stderr: Buffer) => void): ChildProcess;
+    export function execFile(file: string, options?: ExecFileOptions, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    export function execFile(file: string, args?: string[], callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    export function execFile(file: string, args?: string[], options?: ExecFileOptionsWithStringEncoding, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+    // usage. child_process.execFile("file.sh", ["foo"], {encoding: null as string}, (err, stdout, stderr) => {});
+    export function execFile(file: string, args?: string[], options?: ExecFileOptionsWithBufferEncoding, callback?: (error: Error, stdout: Buffer, stderr: Buffer) => void): ChildProcess;
+    export function execFile(file: string, args?: string[], options?: ExecFileOptions, callback?: (error: Error, stdout: string, stderr: string) => void): ChildProcess;
+
+    export interface ForkOptions {
+        cwd?: string;
+        env?: any;
+        execPath?: string;
+        execArgv?: string[];
+        silent?: boolean;
+        uid?: number;
+        gid?: number;
+    }
+    export function fork(modulePath: string, args?: string[], options?: ForkOptions): ChildProcess;
+
+    export interface SpawnSyncOptions {
+        cwd?: string;
+        input?: string | Buffer;
+        stdio?: any;
+        env?: any;
+        uid?: number;
+        gid?: number;
+        timeout?: number;
+        killSignal?: string;
+        maxBuffer?: number;
+        encoding?: string;
+        shell?: boolean | string;
+    }
+    export interface SpawnSyncOptionsWithStringEncoding extends SpawnSyncOptions {
+        encoding: BufferEncoding;
+    }
+    export interface SpawnSyncOptionsWithBufferEncoding extends SpawnSyncOptions {
+        encoding: string; // specify `null`.
+    }
+    export interface SpawnSyncReturns<T> {
+        pid: number;
+        output: string[];
+        stdout: T;
+        stderr: T;
+        status: number;
+        signal: string;
+        error: Error;
+    }
+    export function spawnSync(command: string): SpawnSyncReturns<Buffer>;
+    export function spawnSync(command: string, options?: SpawnSyncOptionsWithStringEncoding): SpawnSyncReturns<string>;
+    export function spawnSync(command: string, options?: SpawnSyncOptionsWithBufferEncoding): SpawnSyncReturns<Buffer>;
+    export function spawnSync(command: string, options?: SpawnSyncOptions): SpawnSyncReturns<Buffer>;
+    export function spawnSync(command: string, args?: string[], options?: SpawnSyncOptionsWithStringEncoding): SpawnSyncReturns<string>;
+    export function spawnSync(command: string, args?: string[], options?: SpawnSyncOptionsWithBufferEncoding): SpawnSyncReturns<Buffer>;
+    export function spawnSync(command: string, args?: string[], options?: SpawnSyncOptions): SpawnSyncReturns<Buffer>;
+
+    export interface ExecSyncOptions {
+        cwd?: string;
+        input?: string | Buffer;
+        stdio?: any;
+        env?: any;
+        shell?: string;
+        uid?: number;
+        gid?: number;
+        timeout?: number;
+        killSignal?: string;
+        maxBuffer?: number;
+        encoding?: string;
+    }
+    export interface ExecSyncOptionsWithStringEncoding extends ExecSyncOptions {
+        encoding: BufferEncoding;
+    }
+    export interface ExecSyncOptionsWithBufferEncoding extends ExecSyncOptions {
+        encoding: string; // specify `null`.
+    }
+    export function execSync(command: string): Buffer;
+    export function execSync(command: string, options?: ExecSyncOptionsWithStringEncoding): string;
+    export function execSync(command: string, options?: ExecSyncOptionsWithBufferEncoding): Buffer;
+    export function execSync(command: string, options?: ExecSyncOptions): Buffer;
+
+    export interface ExecFileSyncOptions {
+        cwd?: string;
+        input?: string | Buffer;
+        stdio?: any;
+        env?: any;
+        uid?: number;
+        gid?: number;
+        timeout?: number;
+        killSignal?: string;
+        maxBuffer?: number;
+        encoding?: string;
+    }
+    export interface ExecFileSyncOptionsWithStringEncoding extends ExecFileSyncOptions {
+        encoding: BufferEncoding;
+    }
+    export interface ExecFileSyncOptionsWithBufferEncoding extends ExecFileSyncOptions {
+        encoding: string; // specify `null`.
+    }
+    export function execFileSync(command: string): Buffer;
+    export function execFileSync(command: string, options?: ExecFileSyncOptionsWithStringEncoding): string;
+    export function execFileSync(command: string, options?: ExecFileSyncOptionsWithBufferEncoding): Buffer;
+    export function execFileSync(command: string, options?: ExecFileSyncOptions): Buffer;
+    export function execFileSync(command: string, args?: string[], options?: ExecFileSyncOptionsWithStringEncoding): string;
+    export function execFileSync(command: string, args?: string[], options?: ExecFileSyncOptionsWithBufferEncoding): Buffer;
+    export function execFileSync(command: string, args?: string[], options?: ExecFileSyncOptions): Buffer;
+}
+
+declare module "url" {
+    export interface Url {
+        href?: string;
+        protocol?: string;
+        auth?: string;
+        hostname?: string;
+        port?: string;
+        host?: string;
+        pathname?: string;
+        search?: string;
+        query?: string | any;
+        slashes?: boolean;
+        hash?: string;
+        path?: string;
+    }
+
+    export function parse(urlStr: string, parseQueryString?: boolean, slashesDenoteHost?: boolean): Url;
+    export function format(url: Url): string;
+    export function resolve(from: string, to: string): string;
+}
+
+declare module "dns" {
+    export function lookup(domain: string, family: number, callback: (err: Error, address: string, family: number) => void): string;
+    export function lookup(domain: string, callback: (err: Error, address: string, family: number) => void): string;
+    export function resolve(domain: string, rrtype: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolve(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolve4(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolve6(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolveMx(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolveTxt(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolveSrv(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolveNs(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function resolveCname(domain: string, callback: (err: Error, addresses: string[]) => void): string[];
+    export function reverse(ip: string, callback: (err: Error, domains: string[]) => void): string[];
+}
+
+declare module "net" {
+    import * as stream from "stream";
+
+    export interface Socket extends stream.Duplex {
+        // Extended base methods
+        write(buffer: Buffer): boolean;
+        write(buffer: Buffer, cb?: Function): boolean;
+        write(str: string, cb?: Function): boolean;
+        write(str: string, encoding?: string, cb?: Function): boolean;
+        write(str: string, encoding?: string, fd?: string): boolean;
+
+        connect(port: number, host?: string, connectionListener?: Function): void;
+        connect(path: string, connectionListener?: Function): void;
+        bufferSize: number;
+        setEncoding(encoding?: string): void;
+        write(data: any, encoding?: string, callback?: Function): void;
+        destroy(): void;
+        pause(): void;
+        resume(): void;
+        setTimeout(timeout: number, callback?: Function): void;
+        setNoDelay(noDelay?: boolean): void;
+        setKeepAlive(enable?: boolean, initialDelay?: number): void;
+        address(): { port: number; family: string; address: string; };
+        unref(): void;
+        ref(): void;
+
+        remoteAddress: string;
+        remoteFamily: string;
+        remotePort: number;
+        localAddress: string;
+        localPort: number;
+        bytesRead: number;
+        bytesWritten: number;
+
+        // Extended base methods
+        end(): void;
+        end(buffer: Buffer, cb?: Function): void;
+        end(str: string, cb?: Function): void;
+        end(str: string, encoding?: string, cb?: Function): void;
+        end(data?: any, encoding?: string): void;
+    }
+
+    export var Socket: {
+        new (options?: { fd?: string; type?: string; allowHalfOpen?: boolean; }): Socket;
+    };
+
+    export interface ListenOptions {
+        port?: number;
+        host?: string;
+        backlog?: number;
+        path?: string;
+        exclusive?: boolean;
+    }
+
+    export interface Server extends Socket {
+        listen(port: number, hostname?: string, backlog?: number, listeningListener?: Function): Server;
+        listen(port: number, hostname?: string, listeningListener?: Function): Server;
+        listen(port: number, backlog?: number, listeningListener?: Function): Server;
+        listen(port: number, listeningListener?: Function): Server;
+        listen(path: string, backlog?: number, listeningListener?: Function): Server;
+        listen(path: string, listeningListener?: Function): Server;
+        listen(handle: any, backlog?: number, listeningListener?: Function): Server;
+        listen(handle: any, listeningListener?: Function): Server;
+        listen(options: ListenOptions, listeningListener?: Function): Server;
+        close(callback?: Function): Server;
+        address(): { port: number; family: string; address: string; };
+        getConnections(cb: (error: Error, count: number) => void): void;
+        ref(): Server;
+        unref(): Server;
+        maxConnections: number;
+        connections: number;
+    }
+    export function createServer(connectionListener?: (socket: Socket) => void): Server;
+    export function createServer(options?: { allowHalfOpen?: boolean; }, connectionListener?: (socket: Socket) => void): Server;
+    export function connect(options: { port: number, host?: string, localAddress?: string, localPort?: string, family?: number, allowHalfOpen?: boolean; }, connectionListener?: Function): Socket;
+    export function connect(port: number, host?: string, connectionListener?: Function): Socket;
+    export function connect(path: string, connectionListener?: Function): Socket;
+    export function createConnection(options: { port: number, host?: string, localAddress?: string, localPort?: string, family?: number, allowHalfOpen?: boolean; }, connectionListener?: Function): Socket;
+    export function createConnection(port: number, host?: string, connectionListener?: Function): Socket;
+    export function createConnection(path: string, connectionListener?: Function): Socket;
+    export function isIP(input: string): number;
+    export function isIPv4(input: string): boolean;
+    export function isIPv6(input: string): boolean;
+}
+
+declare module "dgram" {
+    import * as events from "events";
+
+    interface RemoteInfo {
+        address: string;
+        port: number;
+        size: number;
+    }
+
+    interface AddressInfo {
+        address: string;
+        family: string;
+        port: number;
+    }
+
+    export function createSocket(type: string, callback?: (msg: Buffer, rinfo: RemoteInfo) => void): Socket;
+
+    interface Socket extends events.EventEmitter {
+        send(msg: Buffer | string | Array<Buffer | string>, offset: number, length: number, port: number, address: string, callback?: (error: Error, bytes: number) => void): void;
+        send(msg: Buffer | string | Array<Buffer | string>, port: number, address: string, callback?: (error: Error, bytes: number) => void): void;
+        bind(port: number, address?: string, callback?: () => void): void;
+        close(): void;
+        address(): AddressInfo;
+        setBroadcast(flag: boolean): void;
+        setMulticastTTL(ttl: number): void;
+        setMulticastLoopback(flag: boolean): void;
+        addMembership(multicastAddress: string, multicastInterface?: string): void;
+        dropMembership(multicastAddress: string, multicastInterface?: string): void;
+    }
+}
+
+declare module "fs" {
+    import * as stream from "stream";
+    import * as events from "events";
+
+    interface Stats {
+        isFile(): boolean;
+        isDirectory(): boolean;
+        isBlockDevice(): boolean;
+        isCharacterDevice(): boolean;
+        isSymbolicLink(): boolean;
+        isFIFO(): boolean;
+        isSocket(): boolean;
+        dev: number;
+        ino: number;
+        mode: number;
+        nlink: number;
+        uid: number;
+        gid: number;
+        rdev: number;
+        size: number;
+        blksize: number;
+        blocks: number;
+        atime: Date;
+        mtime: Date;
+        ctime: Date;
+        birthtime: Date;
+    }
+
+    interface FSWatcher extends events.EventEmitter {
+        close(): void;
+    }
+
+    export interface ReadStream extends stream.Readable {
+        close(): void;
+    }
+    export interface WriteStream extends stream.Writable {
+        close(): void;
+        bytesWritten: number;
+    }
+
+    /**
+     * Asynchronous rename.
+     * @param oldPath
+     * @param newPath
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function rename(oldPath: string, newPath: string, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    /**
+     * Synchronous rename
+     * @param oldPath
+     * @param newPath
+     */
+    export function renameSync(oldPath: string, newPath: string): void;
+    export function truncate(path: string | Buffer, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function truncate(path: string | Buffer, len: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function truncateSync(path: string | Buffer, len?: number): void;
+    export function ftruncate(fd: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function ftruncate(fd: number, len: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function ftruncateSync(fd: number, len?: number): void;
+    export function chown(path: string | Buffer, uid: number, gid: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function chownSync(path: string | Buffer, uid: number, gid: number): void;
+    export function fchown(fd: number, uid: number, gid: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function fchownSync(fd: number, uid: number, gid: number): void;
+    export function lchown(path: string | Buffer, uid: number, gid: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function lchownSync(path: string | Buffer, uid: number, gid: number): void;
+    export function chmod(path: string | Buffer, mode: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function chmod(path: string | Buffer, mode: string, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function chmodSync(path: string | Buffer, mode: number): void;
+    export function chmodSync(path: string | Buffer, mode: string): void;
+    export function fchmod(fd: number, mode: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function fchmod(fd: number, mode: string, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function fchmodSync(fd: number, mode: number): void;
+    export function fchmodSync(fd: number, mode: string): void;
+    export function lchmod(path: string | Buffer, mode: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function lchmod(path: string | Buffer, mode: string, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function lchmodSync(path: string | Buffer, mode: number): void;
+    export function lchmodSync(path: string | Buffer, mode: string): void;
+    export function stat(path: string | Buffer, callback?: (err: NodeJS.ErrnoException, stats: Stats) => any): void;
+    export function lstat(path: string | Buffer, callback?: (err: NodeJS.ErrnoException, stats: Stats) => any): void;
+    export function fstat(fd: number, callback?: (err: NodeJS.ErrnoException, stats: Stats) => any): void;
+    export function statSync(path: string | Buffer): Stats;
+    export function lstatSync(path: string | Buffer): Stats;
+    export function fstatSync(fd: number): Stats;
+    export function link(srcpath: string | Buffer, dstpath: string | Buffer, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function linkSync(srcpath: string | Buffer, dstpath: string | Buffer): void;
+    export function symlink(srcpath: string | Buffer, dstpath: string | Buffer, type?: string, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function symlinkSync(srcpath: string | Buffer, dstpath: string | Buffer, type?: string): void;
+    export function readlink(path: string | Buffer, callback?: (err: NodeJS.ErrnoException, linkString: string) => any): void;
+    export function readlinkSync(path: string | Buffer): string;
+    export function realpath(path: string | Buffer, callback?: (err: NodeJS.ErrnoException, resolvedPath: string) => any): void;
+    export function realpath(path: string | Buffer, cache: { [path: string]: string }, callback: (err: NodeJS.ErrnoException, resolvedPath: string) => any): void;
+    export function realpathSync(path: string | Buffer, cache?: { [path: string]: string }): string;
+    /*
+     * Asynchronous unlink - deletes the file specified in {path}
+     *
+     * @param path
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function unlink(path: string | Buffer, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    /*
+     * Synchronous unlink - deletes the file specified in {path}
+     *
+     * @param path
+     */
+    export function unlinkSync(path: string | Buffer): void;
+    /*
+     * Asynchronous rmdir - removes the directory specified in {path}
+     *
+     * @param path
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function rmdir(path: string | Buffer, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    /*
+     * Synchronous rmdir - removes the directory specified in {path}
+     *
+     * @param path
+     */
+    export function rmdirSync(path: string | Buffer): void;
+    /*
+     * Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
+     *
+     * @param path
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function mkdir(path: string | Buffer, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    /*
+     * Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
+     *
+     * @param path
+     * @param mode
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function mkdir(path: string | Buffer, mode: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    /*
+     * Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
+     *
+     * @param path
+     * @param mode
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function mkdir(path: string | Buffer, mode: string, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    /*
+     * Synchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
+     *
+     * @param path
+     * @param mode
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function mkdirSync(path: string | Buffer, mode?: number): void;
+    /*
+     * Synchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
+     *
+     * @param path
+     * @param mode
+     * @param callback No arguments other than a possible exception are given to the completion callback.
+     */
+    export function mkdirSync(path: string | Buffer, mode?: string): void;
+    /*
+     * Asynchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory.
+     *
+     * @param prefix
+     * @param callback The created folder path is passed as a string to the callback's second parameter.
+     */
+    export function mkdtemp(prefix: string, callback?: (err: NodeJS.ErrnoException, folder: string) => void): void;
+    /*
+     * Synchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory.
+     *
+     * @param prefix
+     * @returns Returns the created folder path.
+     */
+    export function mkdtempSync(prefix: string): string;
+    export function readdir(path: string | Buffer, callback?: (err: NodeJS.ErrnoException, files: string[]) => void): void;
+    export function readdirSync(path: string | Buffer): string[];
+    export function close(fd: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function closeSync(fd: number): void;
+    export function open(path: string | Buffer, flags: string, callback?: (err: NodeJS.ErrnoException, fd: number) => any): void;
+    export function open(path: string | Buffer, flags: string, mode: number, callback?: (err: NodeJS.ErrnoException, fd: number) => any): void;
+    export function open(path: string | Buffer, flags: string, mode: string, callback?: (err: NodeJS.ErrnoException, fd: number) => any): void;
+    export function openSync(path: string | Buffer, flags: string, mode?: number): number;
+    export function openSync(path: string | Buffer, flags: string, mode?: string): number;
+    export function utimes(path: string | Buffer, atime: number, mtime: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function utimes(path: string | Buffer, atime: Date, mtime: Date, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function utimesSync(path: string | Buffer, atime: number, mtime: number): void;
+    export function utimesSync(path: string | Buffer, atime: Date, mtime: Date): void;
+    export function futimes(fd: number, atime: number, mtime: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function futimes(fd: number, atime: Date, mtime: Date, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function futimesSync(fd: number, atime: number, mtime: number): void;
+    export function futimesSync(fd: number, atime: Date, mtime: Date): void;
+    export function fsync(fd: number, callback?: (err?: NodeJS.ErrnoException) => void): void;
+    export function fsyncSync(fd: number): void;
+    export function write(fd: number, buffer: Buffer, offset: number, length: number, position: number, callback?: (err: NodeJS.ErrnoException, written: number, buffer: Buffer) => void): void;
+    export function write(fd: number, buffer: Buffer, offset: number, length: number, callback?: (err: NodeJS.ErrnoException, written: number, buffer: Buffer) => void): void;
+    export function write(fd: number, data: any, callback?: (err: NodeJS.ErrnoException, written: number, str: string) => void): void;
+    export function write(fd: number, data: any, offset: number, callback?: (err: NodeJS.ErrnoException, written: number, str: string) => void): void;
+    export function write(fd: number, data: any, offset: number, encoding: string, callback?: (err: NodeJS.ErrnoException, written: number, str: string) => void): void;
+    export function writeSync(fd: number, buffer: Buffer, offset: number, length: number, position?: number): number;
+    export function writeSync(fd: number, data: any, position?: number, enconding?: string): number;
+    export function read(fd: number, buffer: Buffer, offset: number, length: number, position: number, callback?: (err: NodeJS.ErrnoException, bytesRead: number, buffer: Buffer) => void): void;
+    export function readSync(fd: number, buffer: Buffer, offset: number, length: number, position: number): number;
+    /*
+     * Asynchronous readFile - Asynchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param encoding
+     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.
+     */
+    export function readFile(filename: string, encoding: string, callback: (err: NodeJS.ErrnoException, data: string) => void): void;
+    /*
+     * Asynchronous readFile - Asynchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFile returns a string; otherwise it returns a Buffer.
+     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.
+     */
+    export function readFile(filename: string, options: { encoding: string; flag?: string; }, callback: (err: NodeJS.ErrnoException, data: string) => void): void;
+    /*
+     * Asynchronous readFile - Asynchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFile returns a string; otherwise it returns a Buffer.
+     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.
+     */
+    export function readFile(filename: string, options: { flag?: string; }, callback: (err: NodeJS.ErrnoException, data: Buffer) => void): void;
+    /*
+     * Asynchronous readFile - Asynchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.
+     */
+    export function readFile(filename: string, callback: (err: NodeJS.ErrnoException, data: Buffer) => void): void;
+    /*
+     * Synchronous readFile - Synchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param encoding
+     */
+    export function readFileSync(filename: string, encoding: string): string;
+    /*
+     * Synchronous readFile - Synchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFileSync returns a string; otherwise it returns a Buffer.
+     */
+    export function readFileSync(filename: string, options: { encoding: string; flag?: string; }): string;
+    /*
+     * Synchronous readFile - Synchronously reads the entire contents of a file.
+     *
+     * @param fileName
+     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFileSync returns a string; otherwise it returns a Buffer.
+     */
+    export function readFileSync(filename: string, options?: { flag?: string; }): Buffer;
+    export function writeFile(filename: string, data: any, callback?: (err: NodeJS.ErrnoException) => void): void;
+    export function writeFile(filename: string, data: any, options: { encoding?: string; mode?: number; flag?: string; }, callback?: (err: NodeJS.ErrnoException) => void): void;
+    export function writeFile(filename: string, data: any, options: { encoding?: string; mode?: string; flag?: string; }, callback?: (err: NodeJS.ErrnoException) => void): void;
+    export function writeFileSync(filename: string, data: any, options?: { encoding?: string; mode?: number; flag?: string; }): void;
+    export function writeFileSync(filename: string, data: any, options?: { encoding?: string; mode?: string; flag?: string; }): void;
+    export function appendFile(filename: string, data: any, options: { encoding?: string; mode?: number; flag?: string; }, callback?: (err: NodeJS.ErrnoException) => void): void;
+    export function appendFile(filename: string, data: any, options: { encoding?: string; mode?: string; flag?: string; }, callback?: (err: NodeJS.ErrnoException) => void): void;
+    export function appendFile(filename: string, data: any, callback?: (err: NodeJS.ErrnoException) => void): void;
+    export function appendFileSync(filename: string, data: any, options?: { encoding?: string; mode?: number; flag?: string; }): void;
+    export function appendFileSync(filename: string, data: any, options?: { encoding?: string; mode?: string; flag?: string; }): void;
+    export function watchFile(filename: string, listener: (curr: Stats, prev: Stats) => void): void;
+    export function watchFile(filename: string, options: { persistent?: boolean; interval?: number; }, listener: (curr: Stats, prev: Stats) => void): void;
+    export function unwatchFile(filename: string, listener?: (curr: Stats, prev: Stats) => void): void;
+    export function watch(filename: string, listener?: (event: string, filename: string) => any): FSWatcher;
+    export function watch(filename: string, options: { persistent?: boolean; }, listener?: (event: string, filename: string) => any): FSWatcher;
+    export function exists(path: string | Buffer, callback?: (exists: boolean) => void): void;
+    export function existsSync(path: string | Buffer): boolean;
+    /** Constant for fs.access(). File is visible to the calling process. */
+    export var F_OK: number;
+    /** Constant for fs.access(). File can be read by the calling process. */
+    export var R_OK: number;
+    /** Constant for fs.access(). File can be written by the calling process. */
+    export var W_OK: number;
+    /** Constant for fs.access(). File can be executed by the calling process. */
+    export var X_OK: number;
+    /** Tests a user's permissions for the file specified by path. */
+    export function access(path: string | Buffer, callback: (err: NodeJS.ErrnoException) => void): void;
+    export function access(path: string | Buffer, mode: number, callback: (err: NodeJS.ErrnoException) => void): void;
+    /** Synchronous version of fs.access. This throws if any accessibility checks fail, and does nothing otherwise. */
+    export function accessSync(path: string | Buffer, mode?: number): void;
+    export function createReadStream(path: string | Buffer, options?: {
+        flags?: string;
+        encoding?: string;
+        fd?: number;
+        mode?: number;
+        autoClose?: boolean;
+    }): ReadStream;
+    export function createWriteStream(path: string | Buffer, options?: {
+        flags?: string;
+        encoding?: string;
+        fd?: number;
+        mode?: number;
+    }): WriteStream;
+}
+
+declare module "path" {
+
+    /**
+     * A parsed path object generated by path.parse() or consumed by path.format().
+     */
+    export interface ParsedPath {
+        /**
+         * The root of the path such as '/' or 'c:\'
+         */
+        root: string;
+        /**
+         * The full directory path such as '/home/user/dir' or 'c:\path\dir'
+         */
+        dir: string;
+        /**
+         * The file name including extension (if any) such as 'index.html'
+         */
+        base: string;
+        /**
+         * The file extension (if any) such as '.html'
+         */
+        ext: string;
+        /**
+         * The file name without extension (if any) such as 'index'
+         */
+        name: string;
+    }
+
+    /**
+     * Normalize a string path, reducing '..' and '.' parts.
+     * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.
+     *
+     * @param p string path to normalize.
+     */
+    export function normalize(p: string): string;
+    /**
+     * Join all arguments together and normalize the resulting path.
+     * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.
+     *
+     * @param paths string paths to join.
+     */
+    export function join(...paths: any[]): string;
+    /**
+     * Join all arguments together and normalize the resulting path.
+     * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.
+     *
+     * @param paths string paths to join.
+     */
+    export function join(...paths: string[]): string;
+    /**
+     * The right-most parameter is considered {to}.  Other parameters are considered an array of {from}.
+     *
+     * Starting from leftmost {from} paramter, resolves {to} to an absolute path.
+     *
+     * If {to} isn't already absolute, {from} arguments are prepended in right to left order, until an absolute path is found. If after using all {from} paths still no absolute path is found, the current working directory is used as well. The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.
+     *
+     * @param pathSegments string paths to join.  Non-string arguments are ignored.
+     */
+    export function resolve(...pathSegments: any[]): string;
+    /**
+     * Determines whether {path} is an absolute path. An absolute path will always resolve to the same location, regardless of the working directory.
+     *
+     * @param path path to test.
+     */
+    export function isAbsolute(path: string): boolean;
+    /**
+     * Solve the relative path from {from} to {to}.
+     * At times we have two absolute paths, and we need to derive the relative path from one to the other. This is actually the reverse transform of path.resolve.
+     *
+     * @param from
+     * @param to
+     */
+    export function relative(from: string, to: string): string;
+    /**
+     * Return the directory name of a path. Similar to the Unix dirname command.
+     *
+     * @param p the path to evaluate.
+     */
+    export function dirname(p: string): string;
+    /**
+     * Return the last portion of a path. Similar to the Unix basename command.
+     * Often used to extract the file name from a fully qualified path.
+     *
+     * @param p the path to evaluate.
+     * @param ext optionally, an extension to remove from the result.
+     */
+    export function basename(p: string, ext?: string): string;
+    /**
+     * Return the extension of the path, from the last '.' to end of string in the last portion of the path.
+     * If there is no '.' in the last portion of the path or the first character of it is '.', then it returns an empty string
+     *
+     * @param p the path to evaluate.
+     */
+    export function extname(p: string): string;
+    /**
+     * The platform-specific file separator. '\\' or '/'.
+     */
+    export var sep: string;
+    /**
+     * The platform-specific file delimiter. ';' or ':'.
+     */
+    export var delimiter: string;
+    /**
+     * Returns an object from a path string - the opposite of format().
+     *
+     * @param pathString path to evaluate.
+     */
+    export function parse(pathString: string): ParsedPath;
+    /**
+     * Returns a path string from an object - the opposite of parse().
+     *
+     * @param pathString path to evaluate.
+     */
+    export function format(pathObject: ParsedPath): string;
+
+    export module posix {
+        export function normalize(p: string): string;
+        export function join(...paths: any[]): string;
+        export function resolve(...pathSegments: any[]): string;
+        export function isAbsolute(p: string): boolean;
+        export function relative(from: string, to: string): string;
+        export function dirname(p: string): string;
+        export function basename(p: string, ext?: string): string;
+        export function extname(p: string): string;
+        export var sep: string;
+        export var delimiter: string;
+        export function parse(p: string): ParsedPath;
+        export function format(pP: ParsedPath): string;
+    }
+
+    export module win32 {
+        export function normalize(p: string): string;
+        export function join(...paths: any[]): string;
+        export function resolve(...pathSegments: any[]): string;
+        export function isAbsolute(p: string): boolean;
+        export function relative(from: string, to: string): string;
+        export function dirname(p: string): string;
+        export function basename(p: string, ext?: string): string;
+        export function extname(p: string): string;
+        export var sep: string;
+        export var delimiter: string;
+        export function parse(p: string): ParsedPath;
+        export function format(pP: ParsedPath): string;
+    }
+}
+
+declare module "string_decoder" {
+    export interface NodeStringDecoder {
+        write(buffer: Buffer): string;
+        detectIncompleteChar(buffer: Buffer): number;
+    }
+    export var StringDecoder: {
+        new (encoding: string): NodeStringDecoder;
+    };
+}
+
+declare module "tls" {
+    import * as crypto from "crypto";
+    import * as net from "net";
+    import * as stream from "stream";
+
+    var CLIENT_RENEG_LIMIT: number;
+    var CLIENT_RENEG_WINDOW: number;
+
+    export interface TlsOptions {
+        host?: string;
+        port?: number | string;
+        pfx?: string | Buffer;
+        key?: string | Buffer;
+        passphrase?: string;
+        cert?: string | Buffer;
+        ca?: string | Buffer | Array<string | Buffer>;
+        crl?: string | string[];
+        ciphers?: string;
+        honorCipherOrder?: any;
+        requestCert?: boolean;
+        rejectUnauthorized?: boolean;
+        NPNProtocols?: Array<string | Buffer>;
+        SNICallback?: (servername: string) => any;
+    }
+
+    export interface ConnectionOptions {
+        host?: string;
+        port?: number | string;
+        socket?: net.Socket;
+        pfx?: string | Buffer;
+        key?: string | Buffer;
+        passphrase?: string;
+        cert?: string | Buffer;
+        ca?: string | Buffer | Array<string | Buffer>;
+        rejectUnauthorized?: boolean;
+        NPNProtocols?: Array<string | Buffer>;
+        servername?: string;
+    }
+
+    export interface Server extends net.Server {
+        close(): Server;
+        address(): { port: number; family: string; address: string; };
+        addContext(hostName: string, credentials: {
+            key: string;
+            cert: string;
+            ca: string;
+        }): void;
+        maxConnections: number;
+        connections: number;
+    }
+
+    export interface ClearTextStream extends stream.Duplex {
+        authorized: boolean;
+        authorizationError: Error;
+        getPeerCertificate(): any;
+        getCipher: {
+            name: string;
+            version: string;
+        };
+        address: {
+            port: number;
+            family: string;
+            address: string;
+        };
+        remoteAddress: string;
+        remotePort: number;
+    }
+
+    export interface SecurePair {
+        encrypted: any;
+        cleartext: any;
+    }
+
+    export interface SecureContextOptions {
+        pfx?: string | Buffer;
+        key?: string | string[] | Buffer | Array<{ pem: string, passphrase: string }>;
+        passphrase?: string;
+        cert?: string | Buffer;
+        ca?: string | Buffer;
+        crl?: string | string[];
+        ciphers?: string;
+        honorCipherOrder?: boolean;
+    }
+
+    export interface SecureContext {
+        context: any;
+    }
+
+    export function createServer(options: TlsOptions, secureConnectionListener?: (cleartextStream: ClearTextStream) => void): Server;
+    export function connect(options: TlsOptions, secureConnectionListener?: () => void): ClearTextStream;
+    export function connect(port: number, host?: string, options?: ConnectionOptions, secureConnectListener?: () => void): ClearTextStream;
+    export function connect(port: number, options?: ConnectionOptions, secureConnectListener?: () => void): ClearTextStream;
+    export function createSecurePair(credentials?: crypto.Credentials, isServer?: boolean, requestCert?: boolean, rejectUnauthorized?: boolean): SecurePair;
+    export function createSecureContext(details: SecureContextOptions): SecureContext;
+}
+
+declare module "crypto" {
+    export interface CredentialDetails {
+        pfx: string;
+        key: string;
+        passphrase: string;
+        cert: string;
+        ca: string | string[];
+        crl: string | string[];
+        ciphers: string;
+    }
+    export interface Credentials { context?: any; }
+    export function createCredentials(details: CredentialDetails): Credentials;
+    export function createHash(algorithm: string): Hash;
+    export function createHmac(algorithm: string, key: string): Hmac;
+    export function createHmac(algorithm: string, key: Buffer): Hmac;
+    export interface Hash {
+        update(data: any, input_encoding?: string): Hash;
+        digest(encoding: 'buffer'): Buffer;
+        digest(encoding: string): any;
+        digest(): Buffer;
+    }
+    export interface Hmac extends NodeJS.ReadWriteStream {
+        update(data: any, input_encoding?: string): Hmac;
+        digest(encoding: 'buffer'): Buffer;
+        digest(encoding: string): any;
+        digest(): Buffer;
+    }
+    export function createCipher(algorithm: string, password: any): Cipher;
+    export function createCipheriv(algorithm: string, key: any, iv: any): Cipher;
+    export interface Cipher extends NodeJS.ReadWriteStream {
+        update(data: Buffer): Buffer;
+        update(data: string, input_encoding: "utf8" | "ascii" | "binary"): Buffer;
+        update(data: Buffer, input_encoding: any, output_encoding: "binary" | "base64" | "hex"): string;
+        update(data: string, input_encoding: "utf8" | "ascii" | "binary", output_encoding: "binary" | "base64" | "hex"): string;
+        final(): Buffer;
+        final(output_encoding: string): string;
+        setAutoPadding(auto_padding: boolean): void;
+        getAuthTag(): Buffer;
+    }
+    export function createDecipher(algorithm: string, password: any): Decipher;
+    export function createDecipheriv(algorithm: string, key: any, iv: any): Decipher;
+    export interface Decipher extends NodeJS.ReadWriteStream {
+        update(data: Buffer): Buffer;
+        update(data: string, input_encoding: "binary" | "base64" | "hex"): Buffer;
+        update(data: Buffer, input_encoding: any, output_encoding: "utf8" | "ascii" | "binary"): string;
+        update(data: string, input_encoding: "binary" | "base64" | "hex", output_encoding: "utf8" | "ascii" | "binary"): string;
+        final(): Buffer;
+        final(output_encoding: string): string;
+        setAutoPadding(auto_padding: boolean): void;
+        setAuthTag(tag: Buffer): void;
+    }
+    export function createSign(algorithm: string): Signer;
+    export interface Signer extends NodeJS.WritableStream {
+        update(data: any): void;
+        sign(private_key: string, output_format: string): string;
+    }
+    export function createVerify(algorith: string): Verify;
+    export interface Verify extends NodeJS.WritableStream {
+        update(data: any): void;
+        verify(object: string, signature: string, signature_format?: string): boolean;
+    }
+    export function createDiffieHellman(prime_length: number): DiffieHellman;
+    export function createDiffieHellman(prime: number, encoding?: string): DiffieHellman;
+    export interface DiffieHellman {
+        generateKeys(encoding?: string): string;
+        computeSecret(other_public_key: string, input_encoding?: string, output_encoding?: string): string;
+        getPrime(encoding?: string): string;
+        getGenerator(encoding: string): string;
+        getPublicKey(encoding?: string): string;
+        getPrivateKey(encoding?: string): string;
+        setPublicKey(public_key: string, encoding?: string): void;
+        setPrivateKey(public_key: string, encoding?: string): void;
+    }
+    export function getDiffieHellman(group_name: string): DiffieHellman;
+    export function pbkdf2(password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, callback: (err: Error, derivedKey: Buffer) => any): void;
+    export function pbkdf2(password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, digest: string, callback: (err: Error, derivedKey: Buffer) => any): void;
+    export function pbkdf2Sync(password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number): Buffer;
+    export function pbkdf2Sync(password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, digest: string): Buffer;
+    export function randomBytes(size: number): Buffer;
+    export function randomBytes(size: number, callback: (err: Error, buf: Buffer) => void): void;
+    export function pseudoRandomBytes(size: number): Buffer;
+    export function pseudoRandomBytes(size: number, callback: (err: Error, buf: Buffer) => void): void;
+    export interface RsaPublicKey {
+        key: string;
+        padding?: any;
+    }
+    export interface RsaPrivateKey {
+        key: string;
+        passphrase?: string,
+        padding?: any;
+    }
+    export function publicEncrypt(public_key: string | RsaPublicKey, buffer: Buffer): Buffer
+    export function privateDecrypt(private_key: string | RsaPrivateKey, buffer: Buffer): Buffer
+}
+
+declare module "stream" {
+    import * as events from "events";
+
+    export class Stream extends events.EventEmitter {
+        pipe<T extends NodeJS.WritableStream>(destination: T, options?: { end?: boolean; }): T;
+    }
+
+    export interface ReadableOptions {
+        highWaterMark?: number;
+        encoding?: string;
+        objectMode?: boolean;
+    }
+
+    export class Readable extends events.EventEmitter implements NodeJS.ReadableStream {
+        readable: boolean;
+        constructor(opts?: ReadableOptions);
+        _read(size: number): void;
+        read(size?: number): any;
+        setEncoding(encoding: string): void;
+        pause(): void;
+        isPaused(): boolean;
+        resume(): void;
+        pipe<T extends NodeJS.WritableStream>(destination: T, options?: { end?: boolean; }): T;
+        unpipe<T extends NodeJS.WritableStream>(destination?: T): void;
+        unshift(chunk: any): void;
+        wrap(oldStream: NodeJS.ReadableStream): NodeJS.ReadableStream;
+        push(chunk: any, encoding?: string): boolean;
+    }
+
+    export interface WritableOptions {
+        highWaterMark?: number;
+        decodeStrings?: boolean;
+        objectMode?: boolean;
+    }
+
+    export class Writable extends events.EventEmitter implements NodeJS.WritableStream {
+        writable: boolean;
+        constructor(opts?: WritableOptions);
+        _write(chunk: any, encoding: string, callback: Function): void;
+        write(chunk: any, cb?: Function): boolean;
+        write(chunk: any, encoding?: string, cb?: Function): boolean;
+        end(): void;
+        end(chunk: any, cb?: Function): void;
+        end(chunk: any, encoding?: string, cb?: Function): void;
+    }
+
+    export interface DuplexOptions extends ReadableOptions, WritableOptions {
+        allowHalfOpen?: boolean;
+    }
+
+    // Note: Duplex extends both Readable and Writable.
+    export class Duplex extends Readable implements NodeJS.ReadWriteStream {
+        writable: boolean;
+        constructor(opts?: DuplexOptions);
+        _write(chunk: any, encoding: string, callback: Function): void;
+        write(chunk: any, cb?: Function): boolean;
+        write(chunk: any, encoding?: string, cb?: Function): boolean;
+        end(): void;
+        end(chunk: any, cb?: Function): void;
+        end(chunk: any, encoding?: string, cb?: Function): void;
+    }
+
+    export interface TransformOptions extends ReadableOptions, WritableOptions { }
+
+    // Note: Transform lacks the _read and _write methods of Readable/Writable.
+    export class Transform extends events.EventEmitter implements NodeJS.ReadWriteStream {
+        readable: boolean;
+        writable: boolean;
+        constructor(opts?: TransformOptions);
+        _transform(chunk: any, encoding: string, callback: Function): void;
+        _flush(callback: Function): void;
+        read(size?: number): any;
+        setEncoding(encoding: string): void;
+        pause(): void;
+        isPaused(): boolean;
+        resume(): void;
+        pipe<T extends NodeJS.WritableStream>(destination: T, options?: { end?: boolean; }): T;
+        unpipe<T extends NodeJS.WritableStream>(destination?: T): void;
+        unshift(chunk: any): void;
+        wrap(oldStream: NodeJS.ReadableStream): NodeJS.ReadableStream;
+        push(chunk: any, encoding?: string): boolean;
+        write(chunk: any, cb?: Function): boolean;
+        write(chunk: any, encoding?: string, cb?: Function): boolean;
+        end(): void;
+        end(chunk: any, cb?: Function): void;
+        end(chunk: any, encoding?: string, cb?: Function): void;
+    }
+
+    export class PassThrough extends Transform { }
+}
+
+declare module "util" {
+    export interface InspectOptions {
+        showHidden?: boolean;
+        depth?: number;
+        colors?: boolean;
+        customInspect?: boolean;
+    }
+
+    export function format(format: any, ...param: any[]): string;
+    export function debug(string: string): void;
+    export function error(...param: any[]): void;
+    export function puts(...param: any[]): void;
+    export function print(...param: any[]): void;
+    export function log(string: string): void;
+    export function inspect(object: any, showHidden?: boolean, depth?: number, color?: boolean): string;
+    export function inspect(object: any, options: InspectOptions): string;
+    export function isArray(object: any): boolean;
+    export function isRegExp(object: any): boolean;
+    export function isDate(object: any): boolean;
+    export function isError(object: any): boolean;
+    export function inherits(constructor: any, superConstructor: any): void;
+    export function debuglog(key: string): (msg: string, ...param: any[]) => void;
+}
+
+declare module "assert" {
+    function internal(value: any, message?: string): void;
+    namespace internal {
+        export class AssertionError implements Error {
+            name: string;
+            message: string;
+            actual: any;
+            expected: any;
+            operator: string;
+            generatedMessage: boolean;
+
+            constructor(options?: {
+                message?: string; actual?: any; expected?: any;
+                operator?: string; stackStartFunction?: Function
+            });
+        }
+
+        export function fail(actual?: any, expected?: any, message?: string, operator?: string): void;
+        export function ok(value: any, message?: string): void;
+        export function equal(actual: any, expected: any, message?: string): void;
+        export function notEqual(actual: any, expected: any, message?: string): void;
+        export function deepEqual(actual: any, expected: any, message?: string): void;
+        export function notDeepEqual(acutal: any, expected: any, message?: string): void;
+        export function strictEqual(actual: any, expected: any, message?: string): void;
+        export function notStrictEqual(actual: any, expected: any, message?: string): void;
+        export function deepStrictEqual(actual: any, expected: any, message?: string): void;
+        export function notDeepStrictEqual(actual: any, expected: any, message?: string): void;
+        export var throws: {
+            (block: Function, message?: string): void;
+            (block: Function, error: Function, message?: string): void;
+            (block: Function, error: RegExp, message?: string): void;
+            (block: Function, error: (err: any) => boolean, message?: string): void;
+        };
+
+        export var doesNotThrow: {
+            (block: Function, message?: string): void;
+            (block: Function, error: Function, message?: string): void;
+            (block: Function, error: RegExp, message?: string): void;
+            (block: Function, error: (err: any) => boolean, message?: string): void;
+        };
+
+        export function ifError(value: any): void;
+    }
+
+    export = internal;
+}
+
+declare module "tty" {
+    import * as net from "net";
+
+    export function isatty(fd: number): boolean;
+    export interface ReadStream extends net.Socket {
+        isRaw: boolean;
+        setRawMode(mode: boolean): void;
+        isTTY: boolean;
+    }
+    export interface WriteStream extends net.Socket {
+        columns: number;
+        rows: number;
+        isTTY: boolean;
+    }
+}
+
+declare module "domain" {
+    import * as events from "events";
+
+    export class Domain extends events.EventEmitter implements NodeJS.Domain {
+        run(fn: Function): void;
+        add(emitter: events.EventEmitter): void;
+        remove(emitter: events.EventEmitter): void;
+        bind(cb: (err: Error, data: any) => any): any;
+        intercept(cb: (data: any) => any): any;
+        dispose(): void;
+    }
+
+    export function create(): Domain;
+}
+
+declare module "constants" {
+    export var E2BIG: number;
+    export var EACCES: number;
+    export var EADDRINUSE: number;
+    export var EADDRNOTAVAIL: number;
+    export var EAFNOSUPPORT: number;
+    export var EAGAIN: number;
+    export var EALREADY: number;
+    export var EBADF: number;
+    export var EBADMSG: number;
+    export var EBUSY: number;
+    export var ECANCELED: number;
+    export var ECHILD: number;
+    export var ECONNABORTED: number;
+    export var ECONNREFUSED: number;
+    export var ECONNRESET: number;
+    export var EDEADLK: number;
+    export var EDESTADDRREQ: number;
+    export var EDOM: number;
+    export var EEXIST: number;
+    export var EFAULT: number;
+    export var EFBIG: number;
+    export var EHOSTUNREACH: number;
+    export var EIDRM: number;
+    export var EILSEQ: number;
+    export var EINPROGRESS: number;
+    export var EINTR: number;
+    export var EINVAL: number;
+    export var EIO: number;
+    export var EISCONN: number;
+    export var EISDIR: number;
+    export var ELOOP: number;
+    export var EMFILE: number;
+    export var EMLINK: number;
+    export var EMSGSIZE: number;
+    export var ENAMETOOLONG: number;
+    export var ENETDOWN: number;
+    export var ENETRESET: number;
+    export var ENETUNREACH: number;
+    export var ENFILE: number;
+    export var ENOBUFS: number;
+    export var ENODATA: number;
+    export var ENODEV: number;
+    export var ENOENT: number;
+    export var ENOEXEC: number;
+    export var ENOLCK: number;
+    export var ENOLINK: number;
+    export var ENOMEM: number;
+    export var ENOMSG: number;
+    export var ENOPROTOOPT: number;
+    export var ENOSPC: number;
+    export var ENOSR: number;
+    export var ENOSTR: number;
+    export var ENOSYS: number;
+    export var ENOTCONN: number;
+    export var ENOTDIR: number;
+    export var ENOTEMPTY: number;
+    export var ENOTSOCK: number;
+    export var ENOTSUP: number;
+    export var ENOTTY: number;
+    export var ENXIO: number;
+    export var EOPNOTSUPP: number;
+    export var EOVERFLOW: number;
+    export var EPERM: number;
+    export var EPIPE: number;
+    export var EPROTO: number;
+    export var EPROTONOSUPPORT: number;
+    export var EPROTOTYPE: number;
+    export var ERANGE: number;
+    export var EROFS: number;
+    export var ESPIPE: number;
+    export var ESRCH: number;
+    export var ETIME: number;
+    export var ETIMEDOUT: number;
+    export var ETXTBSY: number;
+    export var EWOULDBLOCK: number;
+    export var EXDEV: number;
+    export var WSAEINTR: number;
+    export var WSAEBADF: number;
+    export var WSAEACCES: number;
+    export var WSAEFAULT: number;
+    export var WSAEINVAL: number;
+    export var WSAEMFILE: number;
+    export var WSAEWOULDBLOCK: number;
+    export var WSAEINPROGRESS: number;
+    export var WSAEALREADY: number;
+    export var WSAENOTSOCK: number;
+    export var WSAEDESTADDRREQ: number;
+    export var WSAEMSGSIZE: number;
+    export var WSAEPROTOTYPE: number;
+    export var WSAENOPROTOOPT: number;
+    export var WSAEPROTONOSUPPORT: number;
+    export var WSAESOCKTNOSUPPORT: number;
+    export var WSAEOPNOTSUPP: number;
+    export var WSAEPFNOSUPPORT: number;
+    export var WSAEAFNOSUPPORT: number;
+    export var WSAEADDRINUSE: number;
+    export var WSAEADDRNOTAVAIL: number;
+    export var WSAENETDOWN: number;
+    export var WSAENETUNREACH: number;
+    export var WSAENETRESET: number;
+    export var WSAECONNABORTED: number;
+    export var WSAECONNRESET: number;
+    export var WSAENOBUFS: number;
+    export var WSAEISCONN: number;
+    export var WSAENOTCONN: number;
+    export var WSAESHUTDOWN: number;
+    export var WSAETOOMANYREFS: number;
+    export var WSAETIMEDOUT: number;
+    export var WSAECONNREFUSED: number;
+    export var WSAELOOP: number;
+    export var WSAENAMETOOLONG: number;
+    export var WSAEHOSTDOWN: number;
+    export var WSAEHOSTUNREACH: number;
+    export var WSAENOTEMPTY: number;
+    export var WSAEPROCLIM: number;
+    export var WSAEUSERS: number;
+    export var WSAEDQUOT: number;
+    export var WSAESTALE: number;
+    export var WSAEREMOTE: number;
+    export var WSASYSNOTREADY: number;
+    export var WSAVERNOTSUPPORTED: number;
+    export var WSANOTINITIALISED: number;
+    export var WSAEDISCON: number;
+    export var WSAENOMORE: number;
+    export var WSAECANCELLED: number;
+    export var WSAEINVALIDPROCTABLE: number;
+    export var WSAEINVALIDPROVIDER: number;
+    export var WSAEPROVIDERFAILEDINIT: number;
+    export var WSASYSCALLFAILURE: number;
+    export var WSASERVICE_NOT_FOUND: number;
+    export var WSATYPE_NOT_FOUND: number;
+    export var WSA_E_NO_MORE: number;
+    export var WSA_E_CANCELLED: number;
+    export var WSAEREFUSED: number;
+    export var SIGHUP: number;
+    export var SIGINT: number;
+    export var SIGILL: number;
+    export var SIGABRT: number;
+    export var SIGFPE: number;
+    export var SIGKILL: number;
+    export var SIGSEGV: number;
+    export var SIGTERM: number;
+    export var SIGBREAK: number;
+    export var SIGWINCH: number;
+    export var SSL_OP_ALL: number;
+    export var SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: number;
+    export var SSL_OP_CIPHER_SERVER_PREFERENCE: number;
+    export var SSL_OP_CISCO_ANYCONNECT: number;
+    export var SSL_OP_COOKIE_EXCHANGE: number;
+    export var SSL_OP_CRYPTOPRO_TLSEXT_BUG: number;
+    export var SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS: number;
+    export var SSL_OP_EPHEMERAL_RSA: number;
+    export var SSL_OP_LEGACY_SERVER_CONNECT: number;
+    export var SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER: number;
+    export var SSL_OP_MICROSOFT_SESS_ID_BUG: number;
+    export var SSL_OP_MSIE_SSLV2_RSA_PADDING: number;
+    export var SSL_OP_NETSCAPE_CA_DN_BUG: number;
+    export var SSL_OP_NETSCAPE_CHALLENGE_BUG: number;
+    export var SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG: number;
+    export var SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG: number;
+    export var SSL_OP_NO_COMPRESSION: number;
+    export var SSL_OP_NO_QUERY_MTU: number;
+    export var SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION: number;
+    export var SSL_OP_NO_SSLv2: number;
+    export var SSL_OP_NO_SSLv3: number;
+    export var SSL_OP_NO_TICKET: number;
+    export var SSL_OP_NO_TLSv1: number;
+    export var SSL_OP_NO_TLSv1_1: number;
+    export var SSL_OP_NO_TLSv1_2: number;
+    export var SSL_OP_PKCS1_CHECK_1: number;
+    export var SSL_OP_PKCS1_CHECK_2: number;
+    export var SSL_OP_SINGLE_DH_USE: number;
+    export var SSL_OP_SINGLE_ECDH_USE: number;
+    export var SSL_OP_SSLEAY_080_CLIENT_DH_BUG: number;
+    export var SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG: number;
+    export var SSL_OP_TLS_BLOCK_PADDING_BUG: number;
+    export var SSL_OP_TLS_D5_BUG: number;
+    export var SSL_OP_TLS_ROLLBACK_BUG: number;
+    export var ENGINE_METHOD_DSA: number;
+    export var ENGINE_METHOD_DH: number;
+    export var ENGINE_METHOD_RAND: number;
+    export var ENGINE_METHOD_ECDH: number;
+    export var ENGINE_METHOD_ECDSA: number;
+    export var ENGINE_METHOD_CIPHERS: number;
+    export var ENGINE_METHOD_DIGESTS: number;
+    export var ENGINE_METHOD_STORE: number;
+    export var ENGINE_METHOD_PKEY_METHS: number;
+    export var ENGINE_METHOD_PKEY_ASN1_METHS: number;
+    export var ENGINE_METHOD_ALL: number;
+    export var ENGINE_METHOD_NONE: number;
+    export var DH_CHECK_P_NOT_SAFE_PRIME: number;
+    export var DH_CHECK_P_NOT_PRIME: number;
+    export var DH_UNABLE_TO_CHECK_GENERATOR: number;
+    export var DH_NOT_SUITABLE_GENERATOR: number;
+    export var NPN_ENABLED: number;
+    export var RSA_PKCS1_PADDING: number;
+    export var RSA_SSLV23_PADDING: number;
+    export var RSA_NO_PADDING: number;
+    export var RSA_PKCS1_OAEP_PADDING: number;
+    export var RSA_X931_PADDING: number;
+    export var RSA_PKCS1_PSS_PADDING: number;
+    export var POINT_CONVERSION_COMPRESSED: number;
+    export var POINT_CONVERSION_UNCOMPRESSED: number;
+    export var POINT_CONVERSION_HYBRID: number;
+    export var O_RDONLY: number;
+    export var O_WRONLY: number;
+    export var O_RDWR: number;
+    export var S_IFMT: number;
+    export var S_IFREG: number;
+    export var S_IFDIR: number;
+    export var S_IFCHR: number;
+    export var S_IFLNK: number;
+    export var O_CREAT: number;
+    export var O_EXCL: number;
+    export var O_TRUNC: number;
+    export var O_APPEND: number;
+    export var F_OK: number;
+    export var R_OK: number;
+    export var W_OK: number;
+    export var X_OK: number;
+    export var UV_UDP_REUSEADDR: number;
+}
diff --git a/typings/globals/node/typings.json b/typings/globals/node/typings.json
new file mode 100644
index 0000000..caffae2
--- /dev/null
+++ b/typings/globals/node/typings.json
@@ -0,0 +1,14 @@
+{
+  "resolution": "main",
+  "tree": {
+    "src": "https://raw.githubusercontent.com/types/env-node/252791c3e37ad437365f1b4b27237c2028b2187d/6/typings.json",
+    "raw": "registry:env/node#6.0.0+20160723033700",
+    "version": "6",
+    "files": [
+      "node.d.ts"
+    ],
+    "global": false,
+    "name": "node",
+    "type": "typings"
+  }
+}
diff --git a/typings/index.d.ts b/typings/index.d.ts
index dc23945..46b74da 100644
--- a/typings/index.d.ts
+++ b/typings/index.d.ts
@@ -3,4 +3,5 @@
 /// <reference path="globals/es6-shim/index.d.ts" />
 /// <reference path="globals/meteor/index.d.ts" />
 /// <reference path="globals/mocha/index.d.ts" />
+/// <reference path="globals/node/index.d.ts" />
 /// <reference path="modules/chai-spies/index.d.ts" />
-- 
2.7.4


From 51bc5720a938766cd32c5a0f95785adda994e4a9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Fri, 29 Jul 2016 18:37:35 +0200
Subject: [PATCH 198/276] Step 20.20: Implement classes

---
 client/imports/parties/parties-upload.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.html b/client/imports/parties/parties-upload.component.html
index 63090cb..03308d4 100644
--- a/client/imports/parties/parties-upload.component.html
+++ b/client/imports/parties/parties-upload.component.html
@@ -1,6 +1,6 @@
 <div layout="column">
   <div fileDrop
-    [ngClass]="{'file-is-over': fileIsOver}"
+    [ngClass]="{'file-is-over': fileIsOver, 'file-uploading': uploading}"
     (fileOver)="fileOver($event)"
     (onFileDrop)="onFileDrop($event)">
     <div>Drop an image to here</div>
-- 
2.7.4


From 3015e6f444785cfca89dbc0544d9b9d8b178b2df Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 10:55:44 +0200
Subject: [PATCH 199/276] Step 20.21: Implement publications of Images and
 Thumbs

---
 server/imports/publications/images.ts | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 server/imports/publications/images.ts

diff --git a/server/imports/publications/images.ts b/server/imports/publications/images.ts
new file mode 100644
index 0000000..b97eaeb
--- /dev/null
+++ b/server/imports/publications/images.ts
@@ -0,0 +1,15 @@
+import { Meteor } from 'meteor/meteor';
+import { Thumbs, Images } from '../../../both/collections/images.collection';
+
+Meteor.publish('thumbs', function(ids: string[]) {
+  return Thumbs.find({
+    originalStore: 'images',
+    originalId: {
+      $in: ids
+    }
+  });
+});
+
+Meteor.publish('images', function() {
+  return Images.find({});
+});
-- 
2.7.4


From 369a7612e77ac015769479d5786d5a4f255df225 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 10:56:34 +0200
Subject: [PATCH 200/276] Step 20.22: Import those publications in the server
 entry point

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index a318b73..df64621 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -3,6 +3,7 @@ import {Meteor} from 'meteor/meteor';
 
 import './imports/publications/parties';
 import './imports/publications/users';
+import './imports/publications/images';
 import '../both/methods/parties.methods';
 
 Meteor.startup(() => {
-- 
2.7.4


From f541c33a7c40faa3d0c78efc7a00dae1abd44c70 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 10:57:29 +0200
Subject: [PATCH 201/276] Step 20.23: Extend by MeteorComponent

---
 client/imports/parties/parties-upload.component.ts | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index cd43b07..1cce63d 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -1,5 +1,6 @@
 import { Component } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
+import { MeteorComponent } from 'angular2-meteor';
 
 import { upload } from '../../../both/methods/images.methods';
 
@@ -10,11 +11,13 @@ import template from './parties-upload.component.html';
   template,
   directives: [ FileDropDirective ]
 })
-export class PartiesUpload {
+export class PartiesUpload extends MeteorComponent {
   fileIsOver: boolean = false;
   uploading: boolean = false;
 
-  constructor() {}
+  constructor() {
+    super();
+  }
 
   fileOver(fileIsOver: boolean): void {
     this.fileIsOver = fileIsOver;
-- 
2.7.4


From 490d35f92ddc7e6f21ceb13614babf7e1b1dc776 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:00:39 +0200
Subject: [PATCH 202/276] Step 20.24: Use ReactiveVar to keep track of files

---
 client/imports/parties/parties-upload.component.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 1cce63d..5b122f8 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -1,6 +1,7 @@
 import { Component } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
 import { MeteorComponent } from 'angular2-meteor';
+import { ReactiveVar } from 'meteor/reactive-var';
 
 import { upload } from '../../../both/methods/images.methods';
 
@@ -14,6 +15,7 @@ import template from './parties-upload.component.html';
 export class PartiesUpload extends MeteorComponent {
   fileIsOver: boolean = false;
   uploading: boolean = false;
+  files: ReactiveVar<string[]> = new ReactiveVar<string[]>([]);
 
   constructor() {
     super();
-- 
2.7.4


From 224e8a90f346d18264f9ba633aeaf7ea453528eb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:01:25 +0200
Subject: [PATCH 203/276] Step 20.25: Subscribe to the thumbs publication

---
 client/imports/parties/parties-upload.component.ts | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 5b122f8..0e4998f 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -1,4 +1,4 @@
-import { Component } from '@angular/core';
+import { Component, OnInit } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
 import { MeteorComponent } from 'angular2-meteor';
 import { ReactiveVar } from 'meteor/reactive-var';
@@ -12,7 +12,7 @@ import template from './parties-upload.component.html';
   template,
   directives: [ FileDropDirective ]
 })
-export class PartiesUpload extends MeteorComponent {
+export class PartiesUpload extends MeteorComponent implements OnInit {
   fileIsOver: boolean = false;
   uploading: boolean = false;
   files: ReactiveVar<string[]> = new ReactiveVar<string[]>([]);
@@ -21,6 +21,14 @@ export class PartiesUpload extends MeteorComponent {
     super();
   }
 
+  ngOnInit() {
+    this.autorun(() => {
+      this.subscribe('thumbs', this.files.get(), () => {
+        // subscription ready
+      }, true);
+    });
+  }
+
   fileOver(fileIsOver: boolean): void {
     this.fileIsOver = fileIsOver;
   }
-- 
2.7.4


From 04ce8af563c22ba66ff278e79ecef3135fd84cfe Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:03:41 +0200
Subject: [PATCH 204/276] Step 20.26: Look for the thumbnails

---
 client/imports/parties/parties-upload.component.ts | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 0e4998f..44ae964 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -2,8 +2,11 @@ import { Component, OnInit } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
 import { MeteorComponent } from 'angular2-meteor';
 import { ReactiveVar } from 'meteor/reactive-var';
+import { Mongo } from 'meteor/mongo';
 
 import { upload } from '../../../both/methods/images.methods';
+import { Thumbs } from '../../../both/collections/images.collection';
+import { Thumb } from '../../../both/interfaces/image.interface';
 
 import template from './parties-upload.component.html';
 
@@ -16,6 +19,7 @@ export class PartiesUpload extends MeteorComponent implements OnInit {
   fileIsOver: boolean = false;
   uploading: boolean = false;
   files: ReactiveVar<string[]> = new ReactiveVar<string[]>([]);
+  thumbs: Mongo.Cursor<Thumb>;
 
   constructor() {
     super();
@@ -24,7 +28,12 @@ export class PartiesUpload extends MeteorComponent implements OnInit {
   ngOnInit() {
     this.autorun(() => {
       this.subscribe('thumbs', this.files.get(), () => {
-        // subscription ready
+        this.thumbs = Thumbs.find({
+          originalStore: 'images',
+          originalId: {
+            $in: this.files.get()
+          }
+        });
       }, true);
     });
   }
-- 
2.7.4


From 750851e4286223df574276705f3642e5b179a59b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:04:21 +0200
Subject: [PATCH 205/276] Step 20.27: Implement the thumbnails in the view

---
 client/imports/parties/parties-upload.component.html | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/parties/parties-upload.component.html b/client/imports/parties/parties-upload.component.html
index 03308d4..364607c 100644
--- a/client/imports/parties/parties-upload.component.html
+++ b/client/imports/parties/parties-upload.component.html
@@ -5,4 +5,10 @@
     (onFileDrop)="onFileDrop($event)">
     <div>Drop an image to here</div>
   </div>
+
+  <div layout="row" *ngIf="thumbs">
+    <div *ngFor="let thumb of thumbs">
+      <img [src]="thumb.url"/>
+    </div>
+  </div>
 </div>
-- 
2.7.4


From 3a1f9351292299b693d53f6c4997600fe24e6ccb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:13:02 +0200
Subject: [PATCH 206/276] Step 20.18: Basic styles

---
 client/imports/parties/parties-upload.component.scss | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
 create mode 100644 client/imports/parties/parties-upload.component.scss

diff --git a/client/imports/parties/parties-upload.component.scss b/client/imports/parties/parties-upload.component.scss
new file mode 100644
index 0000000..fec28d7
--- /dev/null
+++ b/client/imports/parties/parties-upload.component.scss
@@ -0,0 +1,16 @@
+.file-uploading {
+  opacity: 0.3;
+}
+
+.file-is-over {
+  opacity: 0.7;
+}
+
+[filedrop] {
+  width: 100%;
+  height: 100px;
+  line-height: 100px;
+  text-align: center;
+  background-color: #f1f1f1;
+  margin: 10px 0;
+}
-- 
2.7.4


From bc658f612fa4931096625241018381a7ecda0aaa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:13:22 +0200
Subject: [PATCH 207/276] Step 20.19: Import styles inside main.scss

---
 client/main.scss | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/main.scss b/client/main.scss
index eb36513..4ec70f0 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -40,4 +40,5 @@ body {
 }
 
 @import "./imports/parties/parties-list.component";
+@import "./imports/parties/parties-upload.component";
 @import "./imports/parties/party-details.component";
-- 
2.7.4


From 46b82111e44267bd67def768c031c8d803233bde Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:14:16 +0200
Subject: [PATCH 208/276] Step 20.30: Handle file upload

---
 client/imports/parties/parties-upload.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 44ae964..4b3800c 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -46,12 +46,19 @@ export class PartiesUpload extends MeteorComponent implements OnInit {
     this.uploading = true;
 
     upload(file)
-      .then(() => {
+      .then((result) => {
         this.uploading = false;
+        this.addFile(result);
       })
       .catch((error) => {
         this.uploading = false;
         console.log(`Something went wrong!`, error);
       });
   }
+
+  addFile(file) {
+    // update array with files
+    this.files.get().push(file._id);
+    this.files.set(this.files.get());
+  }
 }
-- 
2.7.4


From 65595f0529f31e4f1b4472edf90f6b097bc528a6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:15:02 +0200
Subject: [PATCH 209/276] Step 20.31: Emit event with the new file

---
 client/imports/parties/parties-upload.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 4b3800c..38e77f6 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -1,4 +1,4 @@
-import { Component, OnInit } from '@angular/core';
+import { Component, OnInit, Output, EventEmitter } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
 import { MeteorComponent } from 'angular2-meteor';
 import { ReactiveVar } from 'meteor/reactive-var';
@@ -20,6 +20,7 @@ export class PartiesUpload extends MeteorComponent implements OnInit {
   uploading: boolean = false;
   files: ReactiveVar<string[]> = new ReactiveVar<string[]>([]);
   thumbs: Mongo.Cursor<Thumb>;
+  @Output() onFile: EventEmitter<string> = new EventEmitter<string>();
 
   constructor() {
     super();
@@ -60,5 +61,7 @@ export class PartiesUpload extends MeteorComponent implements OnInit {
     // update array with files
     this.files.get().push(file._id);
     this.files.set(this.files.get());
+    // emit new file
+    this.onFile.emit(file._id);
   }
 }
-- 
2.7.4


From 2c68276d87fd90f456e08f613057f7b0b233046b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:15:48 +0200
Subject: [PATCH 210/276] Step 20.32: Add images to the PartiesForm component

---
 client/imports/parties/parties-form.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/parties/parties-form.component.ts b/client/imports/parties/parties-form.component.ts
index c11ee1d..b89195b 100644
--- a/client/imports/parties/parties-form.component.ts
+++ b/client/imports/parties/parties-form.component.ts
@@ -17,6 +17,7 @@ import template from './parties-form.component.html';
 })
 export class PartiesFormComponent implements OnInit {
   addForm: FormGroup;
+  images: string[] = [];
 
   constructor(private formBuilder: FormBuilder) {}
 
@@ -45,6 +46,7 @@ export class PartiesFormComponent implements OnInit {
           location: {
             name: this.addForm.value.location
           },
+          images: this.images,
           public: this.addForm.value.public,
           owner: Meteor.userId()
         });
@@ -56,4 +58,8 @@ export class PartiesFormComponent implements OnInit {
       }
     }
   }
+
+  onImage(imageId: string) {
+    this.images.push(imageId);
+  }
 }
-- 
2.7.4


From e438141c7a6e043a6a53bccce00d1daa14b58349 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:16:17 +0200
Subject: [PATCH 211/276] Step 20.33: Add images property to the Party
 interface

---
 both/interfaces/party.interface.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/interfaces/party.interface.ts b/both/interfaces/party.interface.ts
index 3a59a2a..98c3735 100644
--- a/both/interfaces/party.interface.ts
+++ b/both/interfaces/party.interface.ts
@@ -7,6 +7,7 @@ export interface Party {
   public: boolean;
   invited?: string[];
   rsvps?: RSVP[];
+  images?: string[];
 }
 
 interface RSVP {
-- 
2.7.4


From 33dc247812455009c726e93a5849ce5408a33b6d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:16:54 +0200
Subject: [PATCH 212/276] Step 20.34: Bind the onFile event

---
 client/imports/parties/parties-form.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index 7c38b04..be02f17 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -8,7 +8,7 @@
       <md-checkbox formControlName="public">Public</md-checkbox>
     </div>
 
-    <parties-upload></parties-upload>
+    <parties-upload (onFile)="onImage($event)"></parties-upload>
 
     <button md-raised-button type="submit">Add</button>
   </fieldset>
-- 
2.7.4


From 5565e47aadc7aa43f1c78b9178d15b0f69b8bc76 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:18:42 +0200
Subject: [PATCH 213/276] Step 20.35: Create DisplayMainImage pipe

---
 client/imports/shared/display-main-image.pipe.ts | 33 ++++++++++++++++++++++++
 1 file changed, 33 insertions(+)
 create mode 100644 client/imports/shared/display-main-image.pipe.ts

diff --git a/client/imports/shared/display-main-image.pipe.ts b/client/imports/shared/display-main-image.pipe.ts
new file mode 100644
index 0000000..4a317a1
--- /dev/null
+++ b/client/imports/shared/display-main-image.pipe.ts
@@ -0,0 +1,33 @@
+import { Pipe } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+
+import { Images } from '../../../both/collections/images.collection';
+import { Party } from '../../../both/interfaces/party.interface';
+
+@Pipe({
+  name: 'displayMainImage',
+  pure: false
+})
+export class DisplayMainImagePipe extends MeteorComponent {
+  constructor() {
+    super();
+  }
+
+  transform(party: Party) {
+    if (!party) {
+      return;
+    }
+
+    let imageUrl: string;
+    let imageId: string = (party.images || [])[0];
+
+    this.autorun(() => {
+      const found = Images.findOne(imageId);
+      if (found) {
+        imageUrl = found.url;
+      }
+    }, true);
+
+    return imageUrl;
+  }
+}
-- 
2.7.4


From 9aef853a55ed16d03262992c302544d93443549b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:24:10 +0200
Subject: [PATCH 214/276] Step 20.36: Inject DisplayMainImage pipe

---
 client/imports/parties/parties-list.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 1862fe1..93ad5a5 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -15,6 +15,7 @@ import { Parties }   from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
 import { PartiesFormComponent } from './parties-form.component';
 import { RsvpPipe } from '../shared/rsvp.pipe';
+import { DisplayMainImagePipe } from '../shared/display-main-image.pipe';
 
 import template from './parties-list.component.html';
 
@@ -23,7 +24,7 @@ import template from './parties-list.component.html';
   template,
   viewProviders: [PaginationService],
   directives: [MD_CARD_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_INPUT_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
-  pipes: [RsvpPipe]
+  pipes: [RsvpPipe, DisplayMainImagePipe]
 })
 @InjectUser('user')
 export class PartiesListComponent extends MeteorComponent implements OnInit {
-- 
2.7.4


From 6f4b81a1ae0ca21cbc76c3bbf39c9df56a02c8b8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:24:45 +0200
Subject: [PATCH 215/276] Step 20.37: Subscribe to the images publication

---
 client/imports/parties/parties-list.component.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
index 93ad5a5..aeb3ccb 100644
--- a/client/imports/parties/parties-list.component.ts
+++ b/client/imports/parties/parties-list.component.ts
@@ -65,10 +65,13 @@ export class PartiesListComponent extends MeteorComponent implements OnInit {
       }, true);
     });
 
+
     this.autorun(() => {
       this.partiesSize = Counts.get('numberOfParties');
       this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
     });
+
+    this.subscribe('images');
   }
 
   removeParty(party) {
-- 
2.7.4


From ccf567dd530c641ab5c3e35548ac97070a928c32 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:25:25 +0200
Subject: [PATCH 216/276] Step 20.38: Implement the pipe

---
 client/imports/parties/parties-list.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
index 0559fc9..ce092fa 100644
--- a/client/imports/parties/parties-list.component.html
+++ b/client/imports/parties/parties-list.component.html
@@ -27,6 +27,7 @@
           <div *ngFor="let party of parties">
             <md-card>
               <md-card-content>
+                <img *ngIf="party.images" class="party-main-image" [src]="party | displayMainImage">
                 <h2 class="md-title ma-name">
                   <a [routerLink]="['/party', party._id]">{{party.name}}</a>
                 </h2>
-- 
2.7.4


From 54e8f7a8334c0399cce0ba9f3f77f06ad53bdbbf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 11:25:46 +0200
Subject: [PATCH 217/276] Step 20.39: Add some styles

---
 client/imports/parties/parties-list.component.scss | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/imports/parties/parties-list.component.scss b/client/imports/parties/parties-list.component.scss
index fde37e4..1e0a37b 100644
--- a/client/imports/parties/parties-list.component.scss
+++ b/client/imports/parties/parties-list.component.scss
@@ -59,3 +59,8 @@
 .search-form {
   margin-bottom: 1em;
 }
+
+img.party-main-image {
+  max-width: 100%;
+  max-height: 100%;
+}
-- 
2.7.4


From d4b515c757eba8af63ef9895b45ab4d8bf4ba063 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:33:21 +0200
Subject: [PATCH 218/276] Step 20.40: Add the reset method to PartiesUpload
 component

---
 client/imports/parties/parties-upload.component.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-upload.component.ts b/client/imports/parties/parties-upload.component.ts
index 38e77f6..b56a8e8 100644
--- a/client/imports/parties/parties-upload.component.ts
+++ b/client/imports/parties/parties-upload.component.ts
@@ -1,4 +1,4 @@
-import { Component, OnInit, Output, EventEmitter } from '@angular/core';
+import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';
 import { FileDropDirective } from 'angular2-file-drop';
 import { MeteorComponent } from 'angular2-meteor';
 import { ReactiveVar } from 'meteor/reactive-var';
@@ -64,4 +64,8 @@ export class PartiesUpload extends MeteorComponent implements OnInit {
     // emit new file
     this.onFile.emit(file._id);
   }
+
+  reset() {
+    this.files.set([]);
+  }
 }
-- 
2.7.4


From fc172e2551e024433783de848ee684db404ef351 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:34:22 +0200
Subject: [PATCH 219/276] Step 20.41: Reset files on ngSubmit

---
 client/imports/parties/parties-form.component.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties/parties-form.component.html b/client/imports/parties/parties-form.component.html
index be02f17..d925147 100644
--- a/client/imports/parties/parties-form.component.html
+++ b/client/imports/parties/parties-form.component.html
@@ -1,4 +1,4 @@
-<form [formGroup]="addForm" (ngSubmit)="addParty()">
+<form [formGroup]="addForm" (ngSubmit)="addParty();upload.reset()">
   <fieldset class="form-group">
     <md-input formControlName="name" placeholder="Party name"></md-input>
     <md-input formControlName="description" placeholder="Description"></md-input>
@@ -8,7 +8,7 @@
       <md-checkbox formControlName="public">Public</md-checkbox>
     </div>
 
-    <parties-upload (onFile)="onImage($event)"></parties-upload>
+    <parties-upload #upload (onFile)="onImage($event)"></parties-upload>
 
     <button md-raised-button type="submit">Add</button>
   </fieldset>
-- 
2.7.4


From f09be9d17eed28349aaa5a894dbdacc522205939 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:36:35 +0200
Subject: [PATCH 220/276] Step 21.1: Add mobile platform

---
 .meteor/platforms | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/.meteor/platforms b/.meteor/platforms
index efeba1b..0b0ddcc 100644
--- a/.meteor/platforms
+++ b/.meteor/platforms
@@ -1,2 +1,3 @@
-server
+android
 browser
+server
-- 
2.7.4


From dcfe8836bc9d505706363b1eb04c49c6a68abaf1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:36:57 +0200
Subject: [PATCH 221/276] Step 21.2: Rename to login.web.component.html

---
 client/imports/auth/login.component.html     | 37 ----------------------------
 client/imports/auth/login.web.component.html | 37 ++++++++++++++++++++++++++++
 2 files changed, 37 insertions(+), 37 deletions(-)
 delete mode 100644 client/imports/auth/login.component.html
 create mode 100644 client/imports/auth/login.web.component.html

diff --git a/client/imports/auth/login.component.html b/client/imports/auth/login.component.html
deleted file mode 100644
index d395578..0000000
--- a/client/imports/auth/login.component.html
+++ /dev/null
@@ -1,37 +0,0 @@
-<md-content layout="row" layout-align="center start" layout-fill layout-margin>
-  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
-    <md-toolbar class="md-primary" color="primary">
-      Sign in
-    </md-toolbar>
-
-    <div layout="column" layout-fill layout-margin layout-padding>
-      <div layout="row" layout-fill layout-margin>
-        <p class="md-body-2"> Sign in with your email</p>
-      </div>
-
-      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
-        layout="column" layout-fill layout-padding layout-margin>
-
-        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
-        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
-
-        <div layout="row" layout-align="space-between center">
-          <a md-button [routerLink]="['/recover']">Forgot password?</a>
-          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
-        </div>
-      </form>
-
-      <div [hidden]="error == ''">
-        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
-          <p class="md-body-1">{{ error }}</p>
-        </md-toolbar>
-      </div>
-
-      <md-divider></md-divider>
-
-      <div layout="row" layout-align="center">
-        <a md-button [routerLink]="['/signup']">Need an account?</a>
-      </div>
-    </div>
-  </md-whiteframe>
-</md-content>
diff --git a/client/imports/auth/login.web.component.html b/client/imports/auth/login.web.component.html
new file mode 100644
index 0000000..d395578
--- /dev/null
+++ b/client/imports/auth/login.web.component.html
@@ -0,0 +1,37 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign in
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Sign in with your email</p>
+      </div>
+
+      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
+        layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <a md-button [routerLink]="['/recover']">Forgot password?</a>
+          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/signup']">Need an account?</a>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From 285ac9e2b96b63657237041af197413c813c5bcf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:37:40 +0200
Subject: [PATCH 222/276] Step 21.3: Do the same for login.component.ts

---
 client/imports/auth/login.component.ts     | 48 ------------------------------
 client/imports/auth/login.web.component.ts | 48 ++++++++++++++++++++++++++++++
 2 files changed, 48 insertions(+), 48 deletions(-)
 delete mode 100644 client/imports/auth/login.component.ts
 create mode 100644 client/imports/auth/login.web.component.ts

diff --git a/client/imports/auth/login.component.ts b/client/imports/auth/login.component.ts
deleted file mode 100644
index b35594c..0000000
--- a/client/imports/auth/login.component.ts
+++ /dev/null
@@ -1,48 +0,0 @@
-import { Component, OnInit } from '@angular/core';
-import { MeteorComponent } from 'angular2-meteor';
-import { FormBuilder, FormGroup, Validators, REACTIVE_FORM_DIRECTIVES } from '@angular/forms';
-import { Router , ROUTER_DIRECTIVES} from '@angular/router';
-import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
-import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
-import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
-import { Meteor } from 'meteor/meteor';
-
-import template from './login.component.html';
-
-@Component({
-  selector: 'login',
-  template,
-  directives: [ROUTER_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES, REACTIVE_FORM_DIRECTIVES],
-})
-export class LoginComponent extends MeteorComponent implements OnInit {
-  loginForm: FormGroup;
-  error: string;
-
-  constructor(
-    private router: Router,
-    private formBuilder: FormBuilder
-  ) {
-    super();
-  }
-
-  ngOnInit() {
-    this.loginForm = this.formBuilder.group({
-      email: ['', Validators.required],
-      password: ['', Validators.required]
-    });
-
-    this.error = '';
-  }
-
-  login(credentials) {
-    if (this.loginForm.valid) {
-      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
-        if (err) {
-          this.error = err;
-        } else {
-          this.router.navigate(['/']);
-        }
-      });
-    }
-  }
-}
diff --git a/client/imports/auth/login.web.component.ts b/client/imports/auth/login.web.component.ts
new file mode 100644
index 0000000..b35594c
--- /dev/null
+++ b/client/imports/auth/login.web.component.ts
@@ -0,0 +1,48 @@
+import { Component, OnInit } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+import { FormBuilder, FormGroup, Validators, REACTIVE_FORM_DIRECTIVES } from '@angular/forms';
+import { Router , ROUTER_DIRECTIVES} from '@angular/router';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
+import { Meteor } from 'meteor/meteor';
+
+import template from './login.component.html';
+
+@Component({
+  selector: 'login',
+  template,
+  directives: [ROUTER_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES, REACTIVE_FORM_DIRECTIVES],
+})
+export class LoginComponent extends MeteorComponent implements OnInit {
+  loginForm: FormGroup;
+  error: string;
+
+  constructor(
+    private router: Router,
+    private formBuilder: FormBuilder
+  ) {
+    super();
+  }
+
+  ngOnInit() {
+    this.loginForm = this.formBuilder.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  login(credentials) {
+    if (this.loginForm.valid) {
+      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
-- 
2.7.4


From eb4ca1de9dc7df9cdc70fa1ac03853de8fcb0289 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:38:15 +0200
Subject: [PATCH 223/276] Step 21.4: Update the template

---
 client/imports/auth/login.web.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/auth/login.web.component.ts b/client/imports/auth/login.web.component.ts
index b35594c..475833a 100644
--- a/client/imports/auth/login.web.component.ts
+++ b/client/imports/auth/login.web.component.ts
@@ -7,7 +7,7 @@ import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
 import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
 import { Meteor } from 'meteor/meteor';
 
-import template from './login.component.html';
+import template from './login.web.component.html';
 
 @Component({
   selector: 'login',
-- 
2.7.4


From 0b60bc0b2290848fbf96eb8117d568d9b174d843 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:42:16 +0200
Subject: [PATCH 224/276] Step 21.5: Add accounts-phone package

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 0eaa572..a18f985 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -28,3 +28,4 @@ check
 email
 jalik:ufs
 jalik:ufs-gridfs
+mys:accounts-phone
diff --git a/.meteor/versions b/.meteor/versions
index b7fd879..81bf246 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -62,6 +62,7 @@ modules@0.7.5
 modules-runtime@0.7.5
 mongo@1.1.10
 mongo-id@1.0.5
+mys:accounts-phone@0.0.21
 npm-bcrypt@0.8.7
 npm-mongo@1.5.45
 observe-sequence@1.0.12
-- 
2.7.4


From 3bbbee6ad46b99a113aa53686d08a4e492d22eeb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:43:39 +0200
Subject: [PATCH 225/276] Step 21.6: Create a view for the mobile login

---
 client/imports/auth/login.mobile.component.html | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
 create mode 100644 client/imports/auth/login.mobile.component.html

diff --git a/client/imports/auth/login.mobile.component.html b/client/imports/auth/login.mobile.component.html
new file mode 100644
index 0000000..b009da5
--- /dev/null
+++ b/client/imports/auth/login.mobile.component.html
@@ -0,0 +1,19 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign in
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Sign in with SMS</p>
+      </div>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From 460394c59e8c87e9917f09ea8e3c0de2bf7c6596 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:46:11 +0200
Subject: [PATCH 226/276] Step 21.7: Create mobile version of Login component

---
 client/imports/auth/login.mobile.component.ts | 28 +++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)
 create mode 100644 client/imports/auth/login.mobile.component.ts

diff --git a/client/imports/auth/login.mobile.component.ts b/client/imports/auth/login.mobile.component.ts
new file mode 100644
index 0000000..3ea5f66
--- /dev/null
+++ b/client/imports/auth/login.mobile.component.ts
@@ -0,0 +1,28 @@
+import { Component, OnInit } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+import { FormBuilder, FormGroup, Validators, REACTIVE_FORM_DIRECTIVES } from '@angular/forms';
+import { Router , ROUTER_DIRECTIVES} from '@angular/router';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
+import { Meteor } from 'meteor/meteor';
+
+import template from './login.mobile.component.html';
+
+@Component({
+  selector: 'login',
+  template,
+  directives: [ROUTER_DIRECTIVES, MD_INPUT_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_BUTTON_DIRECTIVES, REACTIVE_FORM_DIRECTIVES],
+})
+export class LoginComponent extends MeteorComponent implements OnInit {
+  error: string = '';
+
+  constructor(
+    private router: Router,
+    private formBuilder: FormBuilder
+  ) {
+    super();
+  }
+
+  ngOnInit() {}
+}
-- 
2.7.4


From b1c55b854cec0d4d5414adf213a31253eeeff788 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:47:36 +0200
Subject: [PATCH 227/276] Step 21.8: Add a form with phone number to provide

---
 client/imports/auth/login.mobile.component.html | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/auth/login.mobile.component.html b/client/imports/auth/login.mobile.component.html
index b009da5..8a5155e 100644
--- a/client/imports/auth/login.mobile.component.html
+++ b/client/imports/auth/login.mobile.component.html
@@ -9,6 +9,16 @@
         <p class="md-body-2"> Sign in with SMS</p>
       </div>
 
+      <form [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
+        layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="phone" type="text" placeholder="Phone"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="send">Send SMS</button>
+        </div>
+      </form>
+
       <div [hidden]="error == ''">
         <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
           <p class="md-body-1">{{ error }}</p>
-- 
2.7.4


From 1713a21e7b539c1938186a660376efd4ccdad391 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:49:48 +0200
Subject: [PATCH 228/276] Step 21.9: Implement a phone number verification

---
 client/imports/auth/login.mobile.component.ts | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/client/imports/auth/login.mobile.component.ts b/client/imports/auth/login.mobile.component.ts
index 3ea5f66..70d05f2 100644
--- a/client/imports/auth/login.mobile.component.ts
+++ b/client/imports/auth/login.mobile.component.ts
@@ -6,6 +6,7 @@ import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
 import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
 import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';
 import { Meteor } from 'meteor/meteor';
+import { Accounts } from 'meteor/accounts-base';
 
 import template from './login.mobile.component.html';
 
@@ -16,6 +17,8 @@ import template from './login.mobile.component.html';
 })
 export class LoginComponent extends MeteorComponent implements OnInit {
   error: string = '';
+  phoneForm: FormGroup;
+  phone: string;
 
   constructor(
     private router: Router,
@@ -24,5 +27,22 @@ export class LoginComponent extends MeteorComponent implements OnInit {
     super();
   }
 
-  ngOnInit() {}
+  ngOnInit() {
+    this.phoneForm = this.formBuilder.group({
+      phone: ['', Validators.required]
+    });
+  }
+
+  send() {
+    if (this.phoneForm.valid) {
+      Accounts.requestPhoneVerification(this.phoneForm.value.phone, (err) => {
+        if (err) {
+          this.error = err.reason || err;
+        } else {
+          this.phone = this.phoneForm.value.phone;
+          this.error = '';
+        }
+      });
+    }
+  }
 }
-- 
2.7.4


From ef365ea330d35c2fc6b9eaa2b0acb2a1deeb1ee4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:51:32 +0200
Subject: [PATCH 229/276] Step 21.10: Implement a code verification

---
 client/imports/auth/login.mobile.component.ts | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/client/imports/auth/login.mobile.component.ts b/client/imports/auth/login.mobile.component.ts
index 70d05f2..5c4e9bb 100644
--- a/client/imports/auth/login.mobile.component.ts
+++ b/client/imports/auth/login.mobile.component.ts
@@ -18,6 +18,8 @@ import template from './login.mobile.component.html';
 export class LoginComponent extends MeteorComponent implements OnInit {
   error: string = '';
   phoneForm: FormGroup;
+  verifyForm: FormGroup;
+  isStepTwo: boolean = false;
   phone: string;
 
   constructor(
@@ -31,6 +33,10 @@ export class LoginComponent extends MeteorComponent implements OnInit {
     this.phoneForm = this.formBuilder.group({
       phone: ['', Validators.required]
     });
+
+    this.verifyForm = this.formBuilder.group({
+      code: ['', Validators.required]
+    });
   }
 
   send() {
@@ -41,6 +47,21 @@ export class LoginComponent extends MeteorComponent implements OnInit {
         } else {
           this.phone = this.phoneForm.value.phone;
           this.error = '';
+          // move to code verification
+          this.isStepTwo = true;
+        }
+      });
+    }
+  }
+
+  verify() {
+    if (this.verifyForm.valid) {
+      Accounts.verifyPhone(this.phone, this.verifyForm.value.code, (err) => {
+        if (err) {
+          this.error = err.reason || err;
+        }
+        else {
+          this.router.navigate(['/']);
         }
       });
     }
-- 
2.7.4


From b8a37052a7bee4156923ead2b6149be335fadc0e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:53:02 +0200
Subject: [PATCH 230/276] Step 21.11: Create a form with code verification

---
 client/imports/auth/login.mobile.component.html | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/client/imports/auth/login.mobile.component.html b/client/imports/auth/login.mobile.component.html
index 8a5155e..3538b60 100644
--- a/client/imports/auth/login.mobile.component.html
+++ b/client/imports/auth/login.mobile.component.html
@@ -9,7 +9,7 @@
         <p class="md-body-2"> Sign in with SMS</p>
       </div>
 
-      <form [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
+      <form *ngIf="!isStepTwo" [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
         layout="column" layout-fill layout-padding layout-margin>
 
         <md-input formControlName="phone" type="text" placeholder="Phone"></md-input>
@@ -19,6 +19,16 @@
         </div>
       </form>
 
+      <form *ngIf="isStepTwo" [formGroup]="verifyForm" #f="ngForm" (ngSubmit)="verify()"
+        layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="code" type="text" placeholder="Code"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="verify">Verify code</button>
+        </div>
+      </form>
+
       <div [hidden]="error == ''">
         <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
           <p class="md-body-1">{{ error }}</p>
-- 
2.7.4


From 9f57986039892622825ff598b83a86a8ff828723 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:56:04 +0200
Subject: [PATCH 231/276] Step 21.12: Choose mobile or web version

---
 client/app.routes.ts | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index 7e86b13..a6373dd 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -3,14 +3,15 @@ import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './imports/parties/parties-list.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
-import { LoginComponent } from './imports/auth/login.component';
+import { LoginComponent as LoginWebComponent } from './imports/auth/login.web.component';
+import { LoginComponent as LoginMobileComponent } from './imports/auth/login.mobile.component';
 import { SignupComponent } from './imports/auth/signup.component';
 import { RecoverComponent } from './imports/auth/recover.component';
 
 const routes: RouterConfig = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] },
-  { path: 'login', component: LoginComponent },
+  { path: 'login', component: Meteor.isCordova ? LoginMobileComponent : LoginWebComponent },
   { path: 'signup', component: SignupComponent },
   { path: 'recover', component: RecoverComponent },
 ];
-- 
2.7.4


From af6e98cf9d395ad081d8f29acf38eaffbc7454f5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 15:59:59 +0200
Subject: [PATCH 232/276] Step 22.1: Install ionic-angular and @angular/http

---
 package.json | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/package.json b/package.json
index 5a66852..fecb271 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "@angular/compiler": "2.0.0-rc.4",
     "@angular/core": "2.0.0-rc.4",
     "@angular/forms": "0.2.0",
+    "@angular/http": "2.0.0-rc.4",
     "@angular/platform-browser": "2.0.0-rc.4",
     "@angular/platform-browser-dynamic": "2.0.0-rc.4",
     "@angular/router": "3.0.0-alpha.8",
@@ -33,6 +34,7 @@
     "angular2-meteor-tests-polyfills": "0.0.2",
     "es6-shim": "0.35.1",
     "gm": "^1.22.0",
+    "ionic-angular": "2.0.0-beta.10",
     "meteor-node-stubs": "0.2.3",
     "ng2-pagination": "^0.3.5",
     "reflect-metadata": "0.1.3",
-- 
2.7.4


From 8cfc0ef6bb350c3988bc0262fa124e62fc413f99 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:02:09 +0200
Subject: [PATCH 233/276] Step 22.2: Rename to app.web.component.ts

---
 client/app.component.ts     | 29 -----------------------------
 client/app.web.component.ts | 29 +++++++++++++++++++++++++++++
 2 files changed, 29 insertions(+), 29 deletions(-)
 delete mode 100644 client/app.component.ts
 create mode 100644 client/app.web.component.ts

diff --git a/client/app.component.ts b/client/app.component.ts
deleted file mode 100644
index 1bd7a62..0000000
--- a/client/app.component.ts
+++ /dev/null
@@ -1,29 +0,0 @@
-import { Component } from '@angular/core';
-import { ROUTER_DIRECTIVES } from '@angular/router';
-import { LoginButtons, InjectUser } from 'angular2-meteor-accounts-ui';
-import { MeteorComponent } from 'angular2-meteor';
-import { MdToolbar } from '@angular2-material/toolbar';
-import { Meteor } from 'meteor/meteor';
-
-import { DisplayNamePipe } from './imports/shared/display-name.pipe';
-
-import template from './app.component.html';
-
-@Component({
-  selector: 'app',
-  template,
-  directives: [ROUTER_DIRECTIVES, LoginButtons, MdToolbar],
-  pipes: [DisplayNamePipe]
-})
-@InjectUser('user')
-export class AppComponent extends MeteorComponent {
-  user: Meteor.User;
-
-  constructor() {
-    super();
-  }
-
-  logout() {
-    Meteor.logout();
-  }
-}
diff --git a/client/app.web.component.ts b/client/app.web.component.ts
new file mode 100644
index 0000000..1bd7a62
--- /dev/null
+++ b/client/app.web.component.ts
@@ -0,0 +1,29 @@
+import { Component } from '@angular/core';
+import { ROUTER_DIRECTIVES } from '@angular/router';
+import { LoginButtons, InjectUser } from 'angular2-meteor-accounts-ui';
+import { MeteorComponent } from 'angular2-meteor';
+import { MdToolbar } from '@angular2-material/toolbar';
+import { Meteor } from 'meteor/meteor';
+
+import { DisplayNamePipe } from './imports/shared/display-name.pipe';
+
+import template from './app.component.html';
+
+@Component({
+  selector: 'app',
+  template,
+  directives: [ROUTER_DIRECTIVES, LoginButtons, MdToolbar],
+  pipes: [DisplayNamePipe]
+})
+@InjectUser('user')
+export class AppComponent extends MeteorComponent {
+  user: Meteor.User;
+
+  constructor() {
+    super();
+  }
+
+  logout() {
+    Meteor.logout();
+  }
+}
-- 
2.7.4


From 00aacf3d2de6b57a2b4aff61485c6ac03ccd4bde Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:02:29 +0200
Subject: [PATCH 234/276] Step 22.3: Update the template

---
 client/app.web.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/app.web.component.ts b/client/app.web.component.ts
index 1bd7a62..19e3a89 100644
--- a/client/app.web.component.ts
+++ b/client/app.web.component.ts
@@ -7,7 +7,7 @@ import { Meteor } from 'meteor/meteor';
 
 import { DisplayNamePipe } from './imports/shared/display-name.pipe';
 
-import template from './app.component.html';
+import template from './app.web.component.html';
 
 @Component({
   selector: 'app',
-- 
2.7.4


From 77157cc954de0f103dfba5ed6d241567d827df30 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:02:52 +0200
Subject: [PATCH 235/276] Step 22.4: Rename the template also

---
 client/app.component.html     | 17 -----------------
 client/app.web.component.html | 17 +++++++++++++++++
 2 files changed, 17 insertions(+), 17 deletions(-)
 delete mode 100644 client/app.component.html
 create mode 100644 client/app.web.component.html

diff --git a/client/app.component.html b/client/app.component.html
deleted file mode 100644
index b6cf4ee..0000000
--- a/client/app.component.html
+++ /dev/null
@@ -1,17 +0,0 @@
-<md-toolbar>
-  <h2>
-    <a ui-sref="parties"><span class="md-title">Socially</span></a>
-  </h2>
-  <span flex></span>
-  <div class="navbar-right navbar-text">
-    <div [hidden]="user">
-      <a md-button [routerLink]="['/login']" >Login</a>
-      <a md-button [routerLink]="['/signup']">Sign up</a>
-    </div>
-    <div [hidden]="!user">
-      <span>{{ user | displayName }}</span>
-      <button md-button (click)="logout()">Logout</button>
-    </div>
-  </div>
-</md-toolbar>
-<router-outlet flex-gt-sm layout-gt-sm="row"></router-outlet>
diff --git a/client/app.web.component.html b/client/app.web.component.html
new file mode 100644
index 0000000..b6cf4ee
--- /dev/null
+++ b/client/app.web.component.html
@@ -0,0 +1,17 @@
+<md-toolbar>
+  <h2>
+    <a ui-sref="parties"><span class="md-title">Socially</span></a>
+  </h2>
+  <span flex></span>
+  <div class="navbar-right navbar-text">
+    <div [hidden]="user">
+      <a md-button [routerLink]="['/login']" >Login</a>
+      <a md-button [routerLink]="['/signup']">Sign up</a>
+    </div>
+    <div [hidden]="!user">
+      <span>{{ user | displayName }}</span>
+      <button md-button (click)="logout()">Logout</button>
+    </div>
+  </div>
+</md-toolbar>
+<router-outlet flex-gt-sm layout-gt-sm="row"></router-outlet>
-- 
2.7.4


From 98392eca351288481fd82bfd4a1ba250a603ca69 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:03:54 +0200
Subject: [PATCH 236/276] Step 22.5: Use web version of Login component in
 routing

---
 client/app.routes.ts | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index a6373dd..2a45ca8 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -3,15 +3,14 @@ import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './imports/parties/parties-list.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
-import { LoginComponent as LoginWebComponent } from './imports/auth/login.web.component';
-import { LoginComponent as LoginMobileComponent } from './imports/auth/login.mobile.component';
+import { LoginComponent } from './imports/auth/login.web.component';
 import { SignupComponent } from './imports/auth/signup.component';
 import { RecoverComponent } from './imports/auth/recover.component';
 
 const routes: RouterConfig = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['CanActivateForLoggedIn'] },
-  { path: 'login', component: Meteor.isCordova ? LoginMobileComponent : LoginWebComponent },
+  { path: 'login', component: LoginComponent },
   { path: 'signup', component: SignupComponent },
   { path: 'recover', component: RecoverComponent },
 ];
-- 
2.7.4


From aab5617e1b11bf88c61c0c791d5c84c0e3fa8a15 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:04:40 +0200
Subject: [PATCH 237/276] Step 22.6: Update the App component path in the
 main.ts

---
 client/main.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/main.ts b/client/main.ts
index ccdd1b8..94765ec 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -2,7 +2,7 @@ import { bootstrap } from 'angular2-meteor-auto-bootstrap';
 import { disableDeprecatedForms, provideForms } from '@angular/forms';
 import { GOOGLE_MAPS_PROVIDERS } from 'angular2-google-maps/core';
 
-import { AppComponent } from './app.component';
+import { AppComponent } from './app.web.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
 
 bootstrap(AppComponent, [
-- 
2.7.4


From f5388b0e46857ad626ecc9aaeb519abf0bb84036 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:05:48 +0200
Subject: [PATCH 238/276] Step 22.6: Defer bootstraping an App

---
 client/main.ts | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/client/main.ts b/client/main.ts
index 94765ec..94676df 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -5,9 +5,11 @@ import { GOOGLE_MAPS_PROVIDERS } from 'angular2-google-maps/core';
 import { AppComponent } from './app.web.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
 
-bootstrap(AppComponent, [
-  disableDeprecatedForms(),
-  provideForms(),
-  APP_ROUTER_PROVIDERS,
-  GOOGLE_MAPS_PROVIDERS
-]);
+function runWeb() {
+  bootstrap(AppComponent, [
+    disableDeprecatedForms(),
+    provideForms(),
+    APP_ROUTER_PROVIDERS,
+    GOOGLE_MAPS_PROVIDERS
+  ]);
+}
-- 
2.7.4


From c58f9f1d0c6ac6cde602ad99a8afbc048db15217 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:07:01 +0200
Subject: [PATCH 239/276] Step 22.7: Create a space for the mobile bootstrap

---
 client/main.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index 94676df..fe70bff 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -13,3 +13,7 @@ function runWeb() {
     GOOGLE_MAPS_PROVIDERS
   ]);
 }
+
+function runMobile() {
+  console.log('Mobile version is not yet available!');
+}
-- 
2.7.4


From e68d4eb6cb1f494c6035f21a7efe66ac7dfb2f6b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:07:56 +0200
Subject: [PATCH 240/276] Step 22.8: Use Meteor.isCordova

---
 client/main.ts | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index fe70bff..65223c8 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -1,10 +1,17 @@
 import { bootstrap } from 'angular2-meteor-auto-bootstrap';
 import { disableDeprecatedForms, provideForms } from '@angular/forms';
 import { GOOGLE_MAPS_PROVIDERS } from 'angular2-google-maps/core';
+import { Meteor } from 'meteor/meteor';
 
 import { AppComponent } from './app.web.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
 
+if (Meteor.isCordova) {
+  runMobile();
+} else {
+  runWeb();
+}
+
 function runWeb() {
   bootstrap(AppComponent, [
     disableDeprecatedForms(),
-- 
2.7.4


From 98253999cf344d645826ce5475033dd7ea8870a6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:08:32 +0200
Subject: [PATCH 241/276] Step 22.9: Run mobile version of the App only if
 device is ready

---
 client/main.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/main.ts b/client/main.ts
index 65223c8..37f7199 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -7,7 +7,9 @@ import { AppComponent } from './app.web.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
 
 if (Meteor.isCordova) {
-  runMobile();
+  document.addEventListener('deviceready', () => {
+    runMobile();
+  });
 } else {
   runWeb();
 }
-- 
2.7.4


From 36bf4e32e826daa42cb23ca8d15ba238747d6bbd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:09:12 +0200
Subject: [PATCH 242/276] Step 22.10: Create a view for mobile version of the
 App

---
 client/app.mobile.component.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/app.mobile.component.html

diff --git a/client/app.mobile.component.html b/client/app.mobile.component.html
new file mode 100644
index 0000000..aab2c16
--- /dev/null
+++ b/client/app.mobile.component.html
@@ -0,0 +1 @@
+<ion-nav [root]="rootPage" swipe-back-enabled="true"></ion-nav>
-- 
2.7.4


From 9a5b03d0a0d36c8bec1779cf8f3d9f0f4e6e33fc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:10:01 +0200
Subject: [PATCH 243/276] Step 22.11: Create a mobile version of the App

---
 client/app.mobile.component.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 client/app.mobile.component.ts

diff --git a/client/app.mobile.component.ts b/client/app.mobile.component.ts
new file mode 100644
index 0000000..2eb6a16
--- /dev/null
+++ b/client/app.mobile.component.ts
@@ -0,0 +1,11 @@
+import { Component } from '@angular/core';
+import { App, Platform, MenuController } from 'ionic-angular';
+
+import template from './app.mobile.component.html';
+
+@Component({
+  template
+})
+export class AppComponent {
+  constructor(app: App, platform: Platform, menu: MenuController) {}
+}
-- 
2.7.4


From 2813c119d489d07f677f6c24e1ea51c6849cf497 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:12:07 +0200
Subject: [PATCH 244/276] Step 22.12: Bootstrap the mobile version of the App
 component

---
 client/main.ts | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/client/main.ts b/client/main.ts
index 37f7199..5212404 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -1,9 +1,12 @@
 import { bootstrap } from 'angular2-meteor-auto-bootstrap';
 import { disableDeprecatedForms, provideForms } from '@angular/forms';
 import { GOOGLE_MAPS_PROVIDERS } from 'angular2-google-maps/core';
+import { ionicBootstrap } from 'ionic-angular';
+import { METEOR_PROVIDERS } from 'angular2-meteor';
 import { Meteor } from 'meteor/meteor';
 
-import { AppComponent } from './app.web.component';
+import { AppComponent as AppWebComponent } from './app.web.component';
+import { AppComponent as AppMobileComponent } from './app.mobile.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
 
 if (Meteor.isCordova) {
@@ -15,7 +18,7 @@ if (Meteor.isCordova) {
 }
 
 function runWeb() {
-  bootstrap(AppComponent, [
+  bootstrap(AppWebComponent, [
     disableDeprecatedForms(),
     provideForms(),
     APP_ROUTER_PROVIDERS,
@@ -24,5 +27,7 @@ function runWeb() {
 }
 
 function runMobile() {
-  console.log('Mobile version is not yet available!');
+  ionicBootstrap(AppMobileComponent, [
+    METEOR_PROVIDERS
+  ]);
 }
-- 
2.7.4


From cbee1feec5e6f641ad18768112f367c7cbdc0abc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:52:59 +0200
Subject: [PATCH 245/276] Step 22.13: Install ionic-selector

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index fecb271..38ac1bd 100644
--- a/package.json
+++ b/package.json
@@ -35,6 +35,7 @@
     "es6-shim": "0.35.1",
     "gm": "^1.22.0",
     "ionic-angular": "2.0.0-beta.10",
+    "ionic-selector": "0.0.2",
     "meteor-node-stubs": "0.2.3",
     "ng2-pagination": "^0.3.5",
     "reflect-metadata": "0.1.3",
-- 
2.7.4


From 7d0828e2dc3e7c509a5005622ad436d0f390ed01 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:53:37 +0200
Subject: [PATCH 246/276] Step 22.14: Use ionic-selector

---
 client/main.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index 5212404..c779ed6 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -9,8 +9,11 @@ import { AppComponent as AppWebComponent } from './app.web.component';
 import { AppComponent as AppMobileComponent } from './app.mobile.component';
 import { APP_ROUTER_PROVIDERS } from './app.routes';
 
+import ionicSelector from 'ionic-selector';
+
 if (Meteor.isCordova) {
   document.addEventListener('deviceready', () => {
+    ionicSelector('app');
     runMobile();
   });
 } else {
-- 
2.7.4


From 1edde166ca601dea27ef950ed27a753415f2d355 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:54:32 +0200
Subject: [PATCH 247/276] Step 22.15: Install ionicons

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 38ac1bd..7251dbf 100644
--- a/package.json
+++ b/package.json
@@ -36,6 +36,7 @@
     "gm": "^1.22.0",
     "ionic-angular": "2.0.0-beta.10",
     "ionic-selector": "0.0.2",
+    "ionicons": "^3.0.0",
     "meteor-node-stubs": "0.2.3",
     "ng2-pagination": "^0.3.5",
     "reflect-metadata": "0.1.3",
-- 
2.7.4


From 22bef8d5be32f3831f5b9e78b6f18ea2384e6d67 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:55:09 +0200
Subject: [PATCH 248/276] Step 22.16: Create ionic.scss and add ionicons to it

---
 client/imports/ionic.scss | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/imports/ionic.scss

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
new file mode 100644
index 0000000..bb889d9
--- /dev/null
+++ b/client/imports/ionic.scss
@@ -0,0 +1 @@
+@import "{}/node_modules/ionicons/dist/scss/ionicons";
-- 
2.7.4


From 0ccd753e224afac8c9f6f39e6570e35702ceb82d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:56:32 +0200
Subject: [PATCH 249/276] Step 22.17: Copy ionic.scss from node module

---
 client/imports/ionic.scss | 57 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
index bb889d9..f19a0f2 100644
--- a/client/imports/ionic.scss
+++ b/client/imports/ionic.scss
@@ -1 +1,58 @@
 @import "{}/node_modules/ionicons/dist/scss/ionicons";
+
+// IONIC
+
+@charset "UTF-8";
+
+// Core Components
+@import "components.core";
+
+// Core Globals
+@import "globals.core";
+
+
+// Core App
+@import
+  "components/app/normalize",
+  "components/app/structure",
+  "components/app/scrollbars",
+  "components/app/typography",
+  "util/util";
+
+
+// Core Components
+@import
+  "components/backdrop/backdrop",
+  "components/grid/grid",
+  "components/icon/icon",
+  "components/img/img",
+  "components/infinite-scroll/infinite-scroll",
+  "components/loading/loading",
+  "components/menu/menu",
+  "components/modal/modal",
+  "components/popover/popover",
+  "components/range/range",
+  "components/refresher/refresher",
+  "components/scroll/scroll",
+  "components/show-hide-when/show-hide-when",
+  "components/slides/slides",
+  "components/spinner/spinner",
+  "components/virtual-scroll/virtual-scroll";
+
+// iOS Components
+.ios {
+  @import "components.ios";
+  @include ios-body();
+}
+
+// Material Design Components
+.md {
+  @import "components.md";
+  @include md-body();
+}
+
+// Windows Components
+.wp {
+  @import "components.wp";
+  @include wp-body();
+}
-- 
2.7.4


From 7316ba44635eba66e921a3571a690ad315127af1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:57:14 +0200
Subject: [PATCH 250/276] Step 22.18: Add proper prefix

---
 client/imports/ionic.scss | 52 +++++++++++++++++++++++------------------------
 1 file changed, 26 insertions(+), 26 deletions(-)

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
index f19a0f2..a2f422c 100644
--- a/client/imports/ionic.scss
+++ b/client/imports/ionic.scss
@@ -5,54 +5,54 @@
 @charset "UTF-8";
 
 // Core Components
-@import "components.core";
+@import "{}/node_modules/ionic-angular/components.core";
 
 // Core Globals
-@import "globals.core";
+@import "{}/node_modules/ionic-angular/globals.core";
 
 
 // Core App
 @import
-  "components/app/normalize",
-  "components/app/structure",
-  "components/app/scrollbars",
-  "components/app/typography",
-  "util/util";
+  "{}/node_modules/ionic-angular/components/app/normalize",
+  "{}/node_modules/ionic-angular/components/app/structure",
+  "{}/node_modules/ionic-angular/components/app/scrollbars",
+  "{}/node_modules/ionic-angular/components/app/typography",
+  "{}/node_modules/ionic-angular/util/util";
 
 
 // Core Components
 @import
-  "components/backdrop/backdrop",
-  "components/grid/grid",
-  "components/icon/icon",
-  "components/img/img",
-  "components/infinite-scroll/infinite-scroll",
-  "components/loading/loading",
-  "components/menu/menu",
-  "components/modal/modal",
-  "components/popover/popover",
-  "components/range/range",
-  "components/refresher/refresher",
-  "components/scroll/scroll",
-  "components/show-hide-when/show-hide-when",
-  "components/slides/slides",
-  "components/spinner/spinner",
-  "components/virtual-scroll/virtual-scroll";
+  "{}/node_modules/ionic-angular/components/backdrop/backdrop",
+  "{}/node_modules/ionic-angular/components/grid/grid",
+  "{}/node_modules/ionic-angular/components/icon/icon",
+  "{}/node_modules/ionic-angular/components/img/img",
+  "{}/node_modules/ionic-angular/components/infinite-scroll/infinite-scroll",
+  "{}/node_modules/ionic-angular/components/loading/loading",
+  "{}/node_modules/ionic-angular/components/menu/menu",
+  "{}/node_modules/ionic-angular/components/modal/modal",
+  "{}/node_modules/ionic-angular/components/popover/popover",
+  "{}/node_modules/ionic-angular/components/range/range",
+  "{}/node_modules/ionic-angular/components/refresher/refresher",
+  "{}/node_modules/ionic-angular/components/scroll/scroll",
+  "{}/node_modules/ionic-angular/components/show-hide-when/show-hide-when",
+  "{}/node_modules/ionic-angular/components/slides/slides",
+  "{}/node_modules/ionic-angular/components/spinner/spinner",
+  "{}/node_modules/ionic-angular/components/virtual-scroll/virtual-scroll";
 
 // iOS Components
 .ios {
-  @import "components.ios";
+  @import "{}/node_modules/ionic-angular/components.ios";
   @include ios-body();
 }
 
 // Material Design Components
 .md {
-  @import "components.md";
+  @import "{}/node_modules/ionic-angular/components.md";
   @include md-body();
 }
 
 // Windows Components
 .wp {
-  @import "components.wp";
+  @import "{}/node_modules/ionic-angular/components.wp";
   @include wp-body();
 }
-- 
2.7.4


From 4d2394f3fee84f76b82a9dcc2a18f96f2cc20434 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:58:39 +0200
Subject: [PATCH 251/276] Step 22.19: Replace import with the contents of
 components.core

---
 client/imports/ionic.scss | 38 +++++++++++++++++++++++++++++++++++++-
 1 file changed, 37 insertions(+), 1 deletion(-)

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
index a2f422c..58d8fbf 100644
--- a/client/imports/ionic.scss
+++ b/client/imports/ionic.scss
@@ -5,7 +5,43 @@
 @charset "UTF-8";
 
 // Core Components
-@import "{}/node_modules/ionic-angular/components.core";
+
+// Core Globals
+@import "globals.core";
+
+
+// Core App
+@import
+  "components/app/normalize",
+  "components/app/structure",
+  "components/app/scrollbars",
+  "components/app/typography",
+  "util/util";
+
+
+// Core Components
+@import
+  "components/backdrop/backdrop",
+  "components/grid/grid",
+  "components/icon/icon",
+  "components/img/img",
+  "components/infinite-scroll/infinite-scroll",
+  "components/loading/loading",
+  "components/menu/menu",
+  "components/modal/modal",
+  "components/popover/popover",
+  "components/range/range",
+  "components/refresher/refresher",
+  "components/scroll/scroll",
+  "components/show-hide-when/show-hide-when",
+  "components/slides/slides",
+  "components/spinner/spinner",
+  "components/virtual-scroll/virtual-scroll";
+
+
+// Ionicons
+@import "fonts/ionicons";
+
 
 // Core Globals
 @import "{}/node_modules/ionic-angular/globals.core";
-- 
2.7.4


From eb4519132882144e7f91a98fa422aca44e7d2dbe Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:59:29 +0200
Subject: [PATCH 252/276] Step 22.20: Replace import of fonts with the contents

---
 client/imports/ionic.scss | 36 +++++++++++++++++++++++++++++++++++-
 1 file changed, 35 insertions(+), 1 deletion(-)

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
index 58d8fbf..dd8206d 100644
--- a/client/imports/ionic.scss
+++ b/client/imports/ionic.scss
@@ -40,7 +40,41 @@
 
 
 // Ionicons
-@import "fonts/ionicons";
+
+// Ionicons Icon Font CSS
+// --------------------------
+// Ionicons CSS for Ionic's <ion-icon> element
+// ionicons-icons.scss has the icons and their unicode characters
+
+$ionicons-font-path: $font-path !default;
+
+@import "ionicons-icons";
+@import "ionicons-variables";
+
+
+@font-face {
+  font-family: "Ionicons";
+  src: url("#{$ionicons-font-path}/ionicons.woff2?v=#{$ionicons-version}") format("woff2"),
+    url("#{$ionicons-font-path}/ionicons.woff?v=#{$ionicons-version}") format("woff"),
+    url("#{$ionicons-font-path}/ionicons.ttf?v=#{$ionicons-version}") format("truetype");
+  font-weight: normal;
+  font-style: normal;
+}
+
+ion-icon {
+  display: inline-block;
+
+  font-family: "Ionicons";
+  -moz-osx-font-smoothing: grayscale;
+  -webkit-font-smoothing: antialiased;
+  font-style: normal;
+  font-variant: normal;
+  font-weight: normal;
+  line-height: 1;
+  text-rendering: auto;
+  text-transform: none;
+  speak: none;
+}
 
 
 // Core Globals
-- 
2.7.4


From 16a4ae9a1b395fa584bc04694c8b189533f86269 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 16:59:58 +0200
Subject: [PATCH 253/276] Step 20.21: Remove two imports

---
 client/imports/ionic.scss | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
index dd8206d..d9cad9d 100644
--- a/client/imports/ionic.scss
+++ b/client/imports/ionic.scss
@@ -48,9 +48,6 @@
 
 $ionicons-font-path: $font-path !default;
 
-@import "ionicons-icons";
-@import "ionicons-variables";
-
 
 @font-face {
   font-family: "Ionicons";
-- 
2.7.4


From 6da3e9709548d90e935ea773c31b47b958a9a2b1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:00:42 +0200
Subject: [PATCH 254/276] Step 20.22: Add prefixes

---
 client/imports/ionic.scss | 44 ++++++++++++++++++++++----------------------
 1 file changed, 22 insertions(+), 22 deletions(-)

diff --git a/client/imports/ionic.scss b/client/imports/ionic.scss
index d9cad9d..741f28a 100644
--- a/client/imports/ionic.scss
+++ b/client/imports/ionic.scss
@@ -7,36 +7,36 @@
 // Core Components
 
 // Core Globals
-@import "globals.core";
+@import "{}/node_modules/ionic-angular/globals.core";
 
 
 // Core App
 @import
-  "components/app/normalize",
-  "components/app/structure",
-  "components/app/scrollbars",
-  "components/app/typography",
-  "util/util";
+  "{}/node_modules/ionic-angular/components/app/normalize",
+  "{}/node_modules/ionic-angular/components/app/structure",
+  "{}/node_modules/ionic-angular/components/app/scrollbars",
+  "{}/node_modules/ionic-angular/components/app/typography",
+  "{}/node_modules/ionic-angular/util/util";
 
 
 // Core Components
 @import
-  "components/backdrop/backdrop",
-  "components/grid/grid",
-  "components/icon/icon",
-  "components/img/img",
-  "components/infinite-scroll/infinite-scroll",
-  "components/loading/loading",
-  "components/menu/menu",
-  "components/modal/modal",
-  "components/popover/popover",
-  "components/range/range",
-  "components/refresher/refresher",
-  "components/scroll/scroll",
-  "components/show-hide-when/show-hide-when",
-  "components/slides/slides",
-  "components/spinner/spinner",
-  "components/virtual-scroll/virtual-scroll";
+  "{}/node_modules/ionic-angular/components/backdrop/backdrop",
+  "{}/node_modules/ionic-angular/components/grid/grid",
+  "{}/node_modules/ionic-angular/components/icon/icon",
+  "{}/node_modules/ionic-angular/components/img/img",
+  "{}/node_modules/ionic-angular/components/infinite-scroll/infinite-scroll",
+  "{}/node_modules/ionic-angular/components/loading/loading",
+  "{}/node_modules/ionic-angular/components/menu/menu",
+  "{}/node_modules/ionic-angular/components/modal/modal",
+  "{}/node_modules/ionic-angular/components/popover/popover",
+  "{}/node_modules/ionic-angular/components/range/range",
+  "{}/node_modules/ionic-angular/components/refresher/refresher",
+  "{}/node_modules/ionic-angular/components/scroll/scroll",
+  "{}/node_modules/ionic-angular/components/show-hide-when/show-hide-when",
+  "{}/node_modules/ionic-angular/components/slides/slides",
+  "{}/node_modules/ionic-angular/components/spinner/spinner",
+  "{}/node_modules/ionic-angular/components/virtual-scroll/virtual-scroll";
 
 
 // Ionicons
-- 
2.7.4


From 40fd00c8f567fa75fa016f33e327c7938feaf7cb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:01:43 +0200
Subject: [PATCH 255/276] Step 20.23: Import ionic.scss to main file

---
 client/main.scss | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/main.scss b/client/main.scss
index 4ec70f0..4d19a36 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,4 +1,5 @@
 @import "{}/node_modules/angular2-meteor-accounts-ui/build/login-buttons.scss";
+@import "imports/ionic";
 
 $color1 : #2F2933;
 $color2 : #01A2A6;
-- 
2.7.4


From 231df2a16e6236229e2f36b59586012a0e014ee9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:04:43 +0200
Subject: [PATCH 256/276] Step 22.23: Add two classes to fix an issue with
 overflow

---
 client/main.scss | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/client/main.scss b/client/main.scss
index 4d19a36..d26d2bf 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -18,6 +18,15 @@ body {
   font-family: 'Muli', sans-serif;
 }
 
+body.mobile {
+  overflow: hidden;
+}
+
+body.web {
+  overflow: visible;
+  position: initial;
+}
+
 .sebm-google-map-container {
   width: 450px;
   height: 450px;
-- 
2.7.4


From 2ab4033e994fb23b3a3451193544ce6eb09ec445 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:05:29 +0200
Subject: [PATCH 257/276] Step 22.24: Set the proper class on body

---
 client/main.ts | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index c779ed6..08dee1e 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -15,9 +15,11 @@ if (Meteor.isCordova) {
   document.addEventListener('deviceready', () => {
     ionicSelector('app');
     runMobile();
+    setClass('mobile');
   });
 } else {
   runWeb();
+  setClass('web');
 }
 
 function runWeb() {
@@ -34,3 +36,10 @@ function runMobile() {
     METEOR_PROVIDERS
   ]);
 }
+
+function setClass(css) {
+  if (!document.body.className) {
+    document.body.className = "";
+  }
+  document.body.className += " " + css;
+}
-- 
2.7.4


From cdaecec511f3b6e7e16e1bf70cb32f8657b02f5b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:25:49 +0200
Subject: [PATCH 258/276] Step 22.25: Move the PartiesListComponent class to a
 separate file

---
 client/imports/parties/parties-list.class.ts | 68 ++++++++++++++++++++++++++++
 1 file changed, 68 insertions(+)
 create mode 100644 client/imports/parties/parties-list.class.ts

diff --git a/client/imports/parties/parties-list.class.ts b/client/imports/parties/parties-list.class.ts
new file mode 100644
index 0000000..0606368
--- /dev/null
+++ b/client/imports/parties/parties-list.class.ts
@@ -0,0 +1,68 @@
+export class PartiesListComponent extends MeteorComponent implements OnInit {
+  parties: Mongo.Cursor<Party>;
+  partiesSize: number = 0;
+  pageSize: number = 10;
+  curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
+  nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
+  location: ReactiveVar<string> = new ReactiveVar<string>(null);
+  loading: boolean = false;
+  user: Meteor.User;
+
+  constructor(private paginationService: PaginationService) {
+    super();
+  }
+
+  ngOnInit() {
+    this.paginationService.register({
+      id: this.paginationService.defaultId,
+      itemsPerPage: this.pageSize,
+      currentPage: this.curPage.get(),
+      totalItems: this.partiesSize,
+    });
+
+    this.autorun(() => {
+      const options = {
+        limit: this.pageSize,
+        skip: (this.curPage.get() - 1) * this.pageSize,
+        sort: { name: this.nameOrder.get() }
+      };
+
+      this.loading = true;
+      this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
+
+      this.subscribe('parties', options, this.location.get(), () => {
+        this.parties = Parties.find({}, {sort: { name: this.nameOrder.get() }});
+        this.loading = false;
+      }, true);
+    });
+
+
+    this.autorun(() => {
+      this.partiesSize = Counts.get('numberOfParties');
+      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
+    });
+
+    this.subscribe('images');
+  }
+
+  removeParty(party) {
+    Parties.remove(party._id);
+  }
+
+  search(value: string) {
+    this.curPage.set(1);
+    this.location.set(value);
+  }
+
+  changeSortOrder(nameOrder: string) {
+    this.nameOrder.set(parseInt(nameOrder));
+  }
+
+  onPageChanged(page: number) {
+    this.curPage.set(page);
+  }
+
+  isOwner(party: Party): boolean {
+    return this.user && this.user._id === party.owner;
+  }
+}
-- 
2.7.4


From da6e56f39b5fbbd49099ede99531e3b2444f4570 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:28:29 +0200
Subject: [PATCH 259/276] Step 22.26: Add needed modules

---
 client/imports/parties/parties-list.class.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/client/imports/parties/parties-list.class.ts b/client/imports/parties/parties-list.class.ts
index 0606368..0a73543 100644
--- a/client/imports/parties/parties-list.class.ts
+++ b/client/imports/parties/parties-list.class.ts
@@ -1,3 +1,14 @@
+import { OnInit } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
+import { Mongo } from 'meteor/mongo';
+import { ReactiveVar } from 'meteor/reactive-var';
+import { Meteor } from 'meteor/meteor';
+import { Counts } from 'meteor/tmeasday:publish-counts';
+import { PaginationService } from 'ng2-pagination';
+
+import { Parties } from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/interfaces/party.interface';
+
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
   partiesSize: number = 0;
-- 
2.7.4


From dc370690a2767082f61d0b9b80feb6e45842ff4f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:29:07 +0200
Subject: [PATCH 260/276] Step 22.27: Use InjectUser on it

---
 client/imports/parties/parties-list.class.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/parties/parties-list.class.ts b/client/imports/parties/parties-list.class.ts
index 0a73543..8b138a7 100644
--- a/client/imports/parties/parties-list.class.ts
+++ b/client/imports/parties/parties-list.class.ts
@@ -1,5 +1,6 @@
 import { OnInit } from '@angular/core';
 import { MeteorComponent } from 'angular2-meteor';
+import { InjectUser } from 'angular2-meteor-accounts-ui';
 import { Mongo } from 'meteor/mongo';
 import { ReactiveVar } from 'meteor/reactive-var';
 import { Meteor } from 'meteor/meteor';
@@ -9,6 +10,7 @@ import { PaginationService } from 'ng2-pagination';
 import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
 
+@InjectUser('user')
 export class PartiesListComponent extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
   partiesSize: number = 0;
-- 
2.7.4


From 8f4705609c522d02362a8512cd7574798bd4e719 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:30:00 +0200
Subject: [PATCH 261/276] Step 22.28: Rename to parties-list.web.component.ts

---
 client/imports/parties/parties-list.component.ts   | 97 ----------------------
 .../imports/parties/parties-list.web.component.ts  | 97 ++++++++++++++++++++++
 2 files changed, 97 insertions(+), 97 deletions(-)
 delete mode 100644 client/imports/parties/parties-list.component.ts
 create mode 100644 client/imports/parties/parties-list.web.component.ts

diff --git a/client/imports/parties/parties-list.component.ts b/client/imports/parties/parties-list.component.ts
deleted file mode 100644
index aeb3ccb..0000000
--- a/client/imports/parties/parties-list.component.ts
+++ /dev/null
@@ -1,97 +0,0 @@
-import { Component, OnInit } from '@angular/core';
-import { ROUTER_DIRECTIVES } from '@angular/router';
-import { Mongo } from 'meteor/mongo';
-import { ReactiveVar } from 'meteor/reactive-var';
-import { Counts } from 'meteor/tmeasday:publish-counts';
-import { InjectUser } from 'angular2-meteor-accounts-ui';
-import { MeteorComponent } from 'angular2-meteor';
-import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
-import { GOOGLE_MAPS_DIRECTIVES } from 'angular2-google-maps/core';
-import { MD_CARD_DIRECTIVES } from '@angular2-material/card';
-import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
-import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
-
-import { Parties }   from '../../../both/collections/parties.collection';
-import { Party } from '../../../both/interfaces/party.interface';
-import { PartiesFormComponent } from './parties-form.component';
-import { RsvpPipe } from '../shared/rsvp.pipe';
-import { DisplayMainImagePipe } from '../shared/display-main-image.pipe';
-
-import template from './parties-list.component.html';
-
-@Component({
-  selector: 'parties-list',
-  template,
-  viewProviders: [PaginationService],
-  directives: [MD_CARD_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_INPUT_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
-  pipes: [RsvpPipe, DisplayMainImagePipe]
-})
-@InjectUser('user')
-export class PartiesListComponent extends MeteorComponent implements OnInit {
-  parties: Mongo.Cursor<Party>;
-  partiesSize: number = 0;
-  pageSize: number = 10;
-  curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
-  nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
-  location: ReactiveVar<string> = new ReactiveVar<string>(null);
-  loading: boolean = false;
-  user: Meteor.User;
-
-  constructor(private paginationService: PaginationService) {
-    super();
-  }
-
-  ngOnInit() {
-    this.paginationService.register({
-      id: this.paginationService.defaultId,
-      itemsPerPage: this.pageSize,
-      currentPage: this.curPage.get(),
-      totalItems: this.partiesSize,
-    });
-
-    this.autorun(() => {
-      const options = {
-        limit: this.pageSize,
-        skip: (this.curPage.get() - 1) * this.pageSize,
-        sort: { name: this.nameOrder.get() }
-      };
-
-      this.loading = true;
-      this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
-
-      this.subscribe('parties', options, this.location.get(), () => {
-        this.parties = Parties.find({}, {sort: { name: this.nameOrder.get() }});
-        this.loading = false;
-      }, true);
-    });
-
-
-    this.autorun(() => {
-      this.partiesSize = Counts.get('numberOfParties');
-      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
-    });
-
-    this.subscribe('images');
-  }
-
-  removeParty(party) {
-    Parties.remove(party._id);
-  }
-
-  search(value: string) {
-    this.curPage.set(1);
-    this.location.set(value);
-  }
-
-  changeSortOrder(nameOrder: string) {
-    this.nameOrder.set(parseInt(nameOrder));
-  }
-
-  onPageChanged(page: number) {
-    this.curPage.set(page);
-  }
-
-  isOwner(party: Party): boolean {
-    return this.user && this.user._id === party.owner;
-  }
-}
diff --git a/client/imports/parties/parties-list.web.component.ts b/client/imports/parties/parties-list.web.component.ts
new file mode 100644
index 0000000..aeb3ccb
--- /dev/null
+++ b/client/imports/parties/parties-list.web.component.ts
@@ -0,0 +1,97 @@
+import { Component, OnInit } from '@angular/core';
+import { ROUTER_DIRECTIVES } from '@angular/router';
+import { Mongo } from 'meteor/mongo';
+import { ReactiveVar } from 'meteor/reactive-var';
+import { Counts } from 'meteor/tmeasday:publish-counts';
+import { InjectUser } from 'angular2-meteor-accounts-ui';
+import { MeteorComponent } from 'angular2-meteor';
+import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
+import { GOOGLE_MAPS_DIRECTIVES } from 'angular2-google-maps/core';
+import { MD_CARD_DIRECTIVES } from '@angular2-material/card';
+import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
+import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
+
+import { Parties }   from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/interfaces/party.interface';
+import { PartiesFormComponent } from './parties-form.component';
+import { RsvpPipe } from '../shared/rsvp.pipe';
+import { DisplayMainImagePipe } from '../shared/display-main-image.pipe';
+
+import template from './parties-list.component.html';
+
+@Component({
+  selector: 'parties-list',
+  template,
+  viewProviders: [PaginationService],
+  directives: [MD_CARD_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_INPUT_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
+  pipes: [RsvpPipe, DisplayMainImagePipe]
+})
+@InjectUser('user')
+export class PartiesListComponent extends MeteorComponent implements OnInit {
+  parties: Mongo.Cursor<Party>;
+  partiesSize: number = 0;
+  pageSize: number = 10;
+  curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
+  nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
+  location: ReactiveVar<string> = new ReactiveVar<string>(null);
+  loading: boolean = false;
+  user: Meteor.User;
+
+  constructor(private paginationService: PaginationService) {
+    super();
+  }
+
+  ngOnInit() {
+    this.paginationService.register({
+      id: this.paginationService.defaultId,
+      itemsPerPage: this.pageSize,
+      currentPage: this.curPage.get(),
+      totalItems: this.partiesSize,
+    });
+
+    this.autorun(() => {
+      const options = {
+        limit: this.pageSize,
+        skip: (this.curPage.get() - 1) * this.pageSize,
+        sort: { name: this.nameOrder.get() }
+      };
+
+      this.loading = true;
+      this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
+
+      this.subscribe('parties', options, this.location.get(), () => {
+        this.parties = Parties.find({}, {sort: { name: this.nameOrder.get() }});
+        this.loading = false;
+      }, true);
+    });
+
+
+    this.autorun(() => {
+      this.partiesSize = Counts.get('numberOfParties');
+      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
+    });
+
+    this.subscribe('images');
+  }
+
+  removeParty(party) {
+    Parties.remove(party._id);
+  }
+
+  search(value: string) {
+    this.curPage.set(1);
+    this.location.set(value);
+  }
+
+  changeSortOrder(nameOrder: string) {
+    this.nameOrder.set(parseInt(nameOrder));
+  }
+
+  onPageChanged(page: number) {
+    this.curPage.set(page);
+  }
+
+  isOwner(party: Party): boolean {
+    return this.user && this.user._id === party.owner;
+  }
+}
-- 
2.7.4


From b53c4b3019714ef43660175718bd56c7ae88655f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:30:51 +0200
Subject: [PATCH 262/276] Step 22.29: Rename the class to PartiesList

---
 client/imports/parties/parties-list.class.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.class.ts b/client/imports/parties/parties-list.class.ts
index 8b138a7..cbd3aec 100644
--- a/client/imports/parties/parties-list.class.ts
+++ b/client/imports/parties/parties-list.class.ts
@@ -11,7 +11,7 @@ import { Parties } from '../../../both/collections/parties.collection';
 import { Party } from '../../../both/interfaces/party.interface';
 
 @InjectUser('user')
-export class PartiesListComponent extends MeteorComponent implements OnInit {
+export class PartiesList extends MeteorComponent implements OnInit {
   parties: Mongo.Cursor<Party>;
   partiesSize: number = 0;
   pageSize: number = 10;
-- 
2.7.4


From 4b52afc3ec959dd482e515a3d0654f9d2ffd60cc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:33:20 +0200
Subject: [PATCH 263/276] Step 22.30: Use only needed things

---
 .../imports/parties/parties-list.web.component.ts  | 80 ++--------------------
 1 file changed, 5 insertions(+), 75 deletions(-)

diff --git a/client/imports/parties/parties-list.web.component.ts b/client/imports/parties/parties-list.web.component.ts
index aeb3ccb..1a4b2cd 100644
--- a/client/imports/parties/parties-list.web.component.ts
+++ b/client/imports/parties/parties-list.web.component.ts
@@ -1,21 +1,15 @@
-import { Component, OnInit } from '@angular/core';
+import { Component } from '@angular/core';
 import { ROUTER_DIRECTIVES } from '@angular/router';
-import { Mongo } from 'meteor/mongo';
-import { ReactiveVar } from 'meteor/reactive-var';
-import { Counts } from 'meteor/tmeasday:publish-counts';
-import { InjectUser } from 'angular2-meteor-accounts-ui';
-import { MeteorComponent } from 'angular2-meteor';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 import { GOOGLE_MAPS_DIRECTIVES } from 'angular2-google-maps/core';
 import { MD_CARD_DIRECTIVES } from '@angular2-material/card';
 import { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';
 import { MD_INPUT_DIRECTIVES } from '@angular2-material/input';
 
-import { Parties }   from '../../../both/collections/parties.collection';
-import { Party } from '../../../both/interfaces/party.interface';
 import { PartiesFormComponent } from './parties-form.component';
 import { RsvpPipe } from '../shared/rsvp.pipe';
 import { DisplayMainImagePipe } from '../shared/display-main-image.pipe';
+import { PartiesList } from './parties-list.class';
 
 import template from './parties-list.component.html';
 
@@ -26,72 +20,8 @@ import template from './parties-list.component.html';
   directives: [MD_CARD_DIRECTIVES, MD_TOOLBAR_DIRECTIVES, MD_INPUT_DIRECTIVES, GOOGLE_MAPS_DIRECTIVES, PartiesFormComponent, ROUTER_DIRECTIVES, PaginationControlsCmp],
   pipes: [RsvpPipe, DisplayMainImagePipe]
 })
-@InjectUser('user')
-export class PartiesListComponent extends MeteorComponent implements OnInit {
-  parties: Mongo.Cursor<Party>;
-  partiesSize: number = 0;
-  pageSize: number = 10;
-  curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
-  nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
-  location: ReactiveVar<string> = new ReactiveVar<string>(null);
-  loading: boolean = false;
-  user: Meteor.User;
-
-  constructor(private paginationService: PaginationService) {
-    super();
-  }
-
-  ngOnInit() {
-    this.paginationService.register({
-      id: this.paginationService.defaultId,
-      itemsPerPage: this.pageSize,
-      currentPage: this.curPage.get(),
-      totalItems: this.partiesSize,
-    });
-
-    this.autorun(() => {
-      const options = {
-        limit: this.pageSize,
-        skip: (this.curPage.get() - 1) * this.pageSize,
-        sort: { name: this.nameOrder.get() }
-      };
-
-      this.loading = true;
-      this.paginationService.setCurrentPage(this.paginationService.defaultId, this.curPage.get());
-
-      this.subscribe('parties', options, this.location.get(), () => {
-        this.parties = Parties.find({}, {sort: { name: this.nameOrder.get() }});
-        this.loading = false;
-      }, true);
-    });
-
-
-    this.autorun(() => {
-      this.partiesSize = Counts.get('numberOfParties');
-      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
-    });
-
-    this.subscribe('images');
-  }
-
-  removeParty(party) {
-    Parties.remove(party._id);
-  }
-
-  search(value: string) {
-    this.curPage.set(1);
-    this.location.set(value);
-  }
-
-  changeSortOrder(nameOrder: string) {
-    this.nameOrder.set(parseInt(nameOrder));
-  }
-
-  onPageChanged(page: number) {
-    this.curPage.set(page);
-  }
-
-  isOwner(party: Party): boolean {
-    return this.user && this.user._id === party.owner;
+export class PartiesListComponent extends PartiesList {
+  constructor(paginationService: PaginationService) {
+    super(paginationService);
   }
 }
-- 
2.7.4


From 8735a231654ebe242dfe9ac949be948672f5d1c2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:34:14 +0200
Subject: [PATCH 264/276] Step 22.31: Correct the template path

---
 client/imports/parties/parties-list.web.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.web.component.ts b/client/imports/parties/parties-list.web.component.ts
index 1a4b2cd..0d38431 100644
--- a/client/imports/parties/parties-list.web.component.ts
+++ b/client/imports/parties/parties-list.web.component.ts
@@ -11,7 +11,7 @@ import { RsvpPipe } from '../shared/rsvp.pipe';
 import { DisplayMainImagePipe } from '../shared/display-main-image.pipe';
 import { PartiesList } from './parties-list.class';
 
-import template from './parties-list.component.html';
+import template from './parties-list.web.component.html';
 
 @Component({
   selector: 'parties-list',
-- 
2.7.4


From 197a49b6f7ee5a83fccbccdf47042c63bc41fe43 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:34:37 +0200
Subject: [PATCH 265/276] Step 22.32: Rename to parties-list-web.component.html

---
 client/imports/parties/parties-list.component.html | 78 ----------------------
 .../parties/parties-list.web.component.html        | 78 ++++++++++++++++++++++
 2 files changed, 78 insertions(+), 78 deletions(-)
 delete mode 100644 client/imports/parties/parties-list.component.html
 create mode 100644 client/imports/parties/parties-list.web.component.html

diff --git a/client/imports/parties/parties-list.component.html b/client/imports/parties/parties-list.component.html
deleted file mode 100644
index ce092fa..0000000
--- a/client/imports/parties/parties-list.component.html
+++ /dev/null
@@ -1,78 +0,0 @@
-<md-content flex layout="row" class="ma-parties-list">
-  <div layout="row" flex>
-    <div flex="50">
-      <div>
-        <md-content class="new-party-form-container">
-          <md-toolbar>
-            <div class="md-toolbar-tools">
-              <h3>Create a new party!</h3>
-            </div>
-          </md-toolbar>
-          <parties-form [hidden]="!user"></parties-form>
-          <div [hidden]="user">You need to login to create new parties!</div>
-        </md-content>
-        <div layout-padding layout="row">
-          <md-input #searchtext placeholder="Search by Location"></md-input>
-        </div>
-        <div layout-padding layout="row">
-          Sort by name:
-          <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
-            <option value="1" selected>Ascending</option>
-            <option value="-1">Descending</option>
-          </select>
-        </div>
-
-        <md-content class="md-padding" style="padding-top:0;">
-          <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
-          <div *ngFor="let party of parties">
-            <md-card>
-              <md-card-content>
-                <img *ngIf="party.images" class="party-main-image" [src]="party | displayMainImage">
-                <h2 class="md-title ma-name">
-                  <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-                </h2>
-                <p class="ma-description" style="padding:0 10px;margin-bottom:35px;margin-top: 6px;">
-                  {{party.description}}
-                </p>
-                <div layout="row">
-                  <div layout="row" layout-align="end end">
-                    <div>
-                      <div class="rsvps-sum">
-                        <div class="rsvps-amount">{{party | rsvp:'yes'}}</div>
-                        <div class="rsvps-title">Yes</div>
-                      </div>
-                      <div class="rsvps-sum">
-                        <div class="rsvps-amount">{{party | rsvp:'maybe'}}</div>
-                        <div class="rsvps-title">Maybe</div>
-                      </div>
-                      <div class="rsvps-sum">
-                        <div class="rsvps-amount">{{party | rsvp:'no'}}</div>
-                        <div class="rsvps-title">No</div>
-                      </div>
-                    </div>
-                  </div>
-                </div>
-              </md-card-content>
-            </md-card>
-          </div>
-        </md-content>
-      </div>
-      <div flex="50" layout="row" style="min-height:300px;">
-        <sebm-google-map
-          style="width: 100%; min-height:300px;"
-          flex layout="row"
-          [latitude]="0"
-          [longitude]="0"
-          [zoom]="1">
-          <div *ngFor="let party of parties">
-            <sebm-google-map-marker
-              *ngIf="party.location.lat"
-              [latitude]="party.location.lat"
-              [longitude]="party.location.lng">
-            </sebm-google-map-marker>
-          </div>
-        </sebm-google-map>
-      </div>
-    </div>
-  </div>
-</md-content>
diff --git a/client/imports/parties/parties-list.web.component.html b/client/imports/parties/parties-list.web.component.html
new file mode 100644
index 0000000..ce092fa
--- /dev/null
+++ b/client/imports/parties/parties-list.web.component.html
@@ -0,0 +1,78 @@
+<md-content flex layout="row" class="ma-parties-list">
+  <div layout="row" flex>
+    <div flex="50">
+      <div>
+        <md-content class="new-party-form-container">
+          <md-toolbar>
+            <div class="md-toolbar-tools">
+              <h3>Create a new party!</h3>
+            </div>
+          </md-toolbar>
+          <parties-form [hidden]="!user"></parties-form>
+          <div [hidden]="user">You need to login to create new parties!</div>
+        </md-content>
+        <div layout-padding layout="row">
+          <md-input #searchtext placeholder="Search by Location"></md-input>
+        </div>
+        <div layout-padding layout="row">
+          Sort by name:
+          <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
+            <option value="1" selected>Ascending</option>
+            <option value="-1">Descending</option>
+          </select>
+        </div>
+
+        <md-content class="md-padding" style="padding-top:0;">
+          <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+          <div *ngFor="let party of parties">
+            <md-card>
+              <md-card-content>
+                <img *ngIf="party.images" class="party-main-image" [src]="party | displayMainImage">
+                <h2 class="md-title ma-name">
+                  <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+                </h2>
+                <p class="ma-description" style="padding:0 10px;margin-bottom:35px;margin-top: 6px;">
+                  {{party.description}}
+                </p>
+                <div layout="row">
+                  <div layout="row" layout-align="end end">
+                    <div>
+                      <div class="rsvps-sum">
+                        <div class="rsvps-amount">{{party | rsvp:'yes'}}</div>
+                        <div class="rsvps-title">Yes</div>
+                      </div>
+                      <div class="rsvps-sum">
+                        <div class="rsvps-amount">{{party | rsvp:'maybe'}}</div>
+                        <div class="rsvps-title">Maybe</div>
+                      </div>
+                      <div class="rsvps-sum">
+                        <div class="rsvps-amount">{{party | rsvp:'no'}}</div>
+                        <div class="rsvps-title">No</div>
+                      </div>
+                    </div>
+                  </div>
+                </div>
+              </md-card-content>
+            </md-card>
+          </div>
+        </md-content>
+      </div>
+      <div flex="50" layout="row" style="min-height:300px;">
+        <sebm-google-map
+          style="width: 100%; min-height:300px;"
+          flex layout="row"
+          [latitude]="0"
+          [longitude]="0"
+          [zoom]="1">
+          <div *ngFor="let party of parties">
+            <sebm-google-map-marker
+              *ngIf="party.location.lat"
+              [latitude]="party.location.lat"
+              [longitude]="party.location.lng">
+            </sebm-google-map-marker>
+          </div>
+        </sebm-google-map>
+      </div>
+    </div>
+  </div>
+</md-content>
-- 
2.7.4


From 36aeecba9b0e0b09ee01f68da1784c0eae09c861 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:35:41 +0200
Subject: [PATCH 266/276] Step 22.33: Create a basic view of the mobile version

---
 client/imports/parties/parties-list.mobile.component.html | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 client/imports/parties/parties-list.mobile.component.html

diff --git a/client/imports/parties/parties-list.mobile.component.html b/client/imports/parties/parties-list.mobile.component.html
new file mode 100644
index 0000000..b9e7ac6
--- /dev/null
+++ b/client/imports/parties/parties-list.mobile.component.html
@@ -0,0 +1,7 @@
+<ion-navbar *navbar>
+  <ion-title>Socially</ion-title>
+</ion-navbar>
+
+<ion-content padding>
+  Parties
+</ion-content>
-- 
2.7.4


From 327629062ce656366ff9aa8746e52954f7536c77 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:37:46 +0200
Subject: [PATCH 267/276] Step 22.34: Create the mobile version of PartiesList
 component

---
 client/imports/parties/parties-list.mobile.component.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 client/imports/parties/parties-list.mobile.component.ts

diff --git a/client/imports/parties/parties-list.mobile.component.ts b/client/imports/parties/parties-list.mobile.component.ts
new file mode 100644
index 0000000..62bdabe
--- /dev/null
+++ b/client/imports/parties/parties-list.mobile.component.ts
@@ -0,0 +1,17 @@
+import { Component } from '@angular/core';
+import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
+
+import { PartiesList } from './parties-list.class';
+
+import template from './parties-list.mobile.component.html';
+
+@Component({
+  template,
+  viewProviders: [PaginationService],
+  directives: [PaginationControlsCmp]
+})
+export class PartiesListComponent extends PartiesList {
+  constructor(paginationService: PaginationService) {
+    super(paginationService);
+  }
+}
-- 
2.7.4


From 375370f5ee019a6c187b70fb549cb2c4ea0f41d8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:38:23 +0200
Subject: [PATCH 268/276] Step 22.35: Update a path of PartiesListComponent
 module

---
 client/app.routes.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/app.routes.ts b/client/app.routes.ts
index 2a45ca8..21a36bc 100644
--- a/client/app.routes.ts
+++ b/client/app.routes.ts
@@ -1,7 +1,7 @@
 import { RouterConfig, provideRouter } from '@angular/router';
 import { Meteor } from 'meteor/meteor';
 
-import { PartiesListComponent } from './imports/parties/parties-list.component';
+import { PartiesListComponent } from './imports/parties/parties-list.web.component';
 import { PartyDetailsComponent } from './imports/parties/party-details.component';
 import { LoginComponent } from './imports/auth/login.web.component';
 import { SignupComponent } from './imports/auth/signup.component';
-- 
2.7.4


From 3d0a6bf2bb7592fc935b987b43a4f274e57308c2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:39:35 +0200
Subject: [PATCH 269/276] Step 22.36: Import RsvpPipe

---
 client/imports/parties/parties-list.mobile.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.mobile.component.ts b/client/imports/parties/parties-list.mobile.component.ts
index 62bdabe..f4b5f7d 100644
--- a/client/imports/parties/parties-list.mobile.component.ts
+++ b/client/imports/parties/parties-list.mobile.component.ts
@@ -2,13 +2,15 @@ import { Component } from '@angular/core';
 import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 
 import { PartiesList } from './parties-list.class';
+import { RsvpPipe } from '../shared/rsvp.pipe';
 
 import template from './parties-list.mobile.component.html';
 
 @Component({
   template,
   viewProviders: [PaginationService],
-  directives: [PaginationControlsCmp]
+  directives: [PaginationControlsCmp],
+  pipes: [RsvpPipe]
 })
 export class PartiesListComponent extends PartiesList {
   constructor(paginationService: PaginationService) {
-- 
2.7.4


From 0c161ad1186f58f11a33e5c893fd292d66511de4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:40:14 +0200
Subject: [PATCH 270/276] Step 22.37: Add name, description ad RSVPs to the
 view

---
 .../parties/parties-list.mobile.component.html     | 25 +++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.mobile.component.html b/client/imports/parties/parties-list.mobile.component.html
index b9e7ac6..31ec349 100644
--- a/client/imports/parties/parties-list.mobile.component.html
+++ b/client/imports/parties/parties-list.mobile.component.html
@@ -3,5 +3,28 @@
 </ion-navbar>
 
 <ion-content padding>
-  Parties
+  <ion-card *ngFor="let party of parties">
+    <ion-card-content>
+      <ion-card-title>
+        {{party.name}}
+      </ion-card-title>
+      <p>
+        {{party.description}}
+      </p>
+    </ion-card-content>
+
+    <ion-row no-padding>
+      <ion-col text-right>
+        <ion-badge>
+          yes {{party | rsvp:'yes'}}
+        </ion-badge>
+        <ion-badge item-center dark>
+          maybe {{party | rsvp:'maybe'}}
+        </ion-badge>
+        <ion-badge item-center danger>
+          no {{party | rsvp:'no'}}
+        </ion-badge>
+      </ion-col>
+    </ion-row>
+  </ion-card>
 </ion-content>
-- 
2.7.4


From ad3a078b05ac183a648712a5cbdd3b93d224ade8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:41:32 +0200
Subject: [PATCH 271/276] Step 22.38: Set PartiesListComponent as a root page

---
 client/app.mobile.component.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/client/app.mobile.component.ts b/client/app.mobile.component.ts
index 2eb6a16..bb29fe1 100644
--- a/client/app.mobile.component.ts
+++ b/client/app.mobile.component.ts
@@ -1,11 +1,17 @@
 import { Component } from '@angular/core';
 import { App, Platform, MenuController } from 'ionic-angular';
 
+import { PartiesListComponent } from './imports/parties/parties-list.mobile.component';
+
 import template from './app.mobile.component.html';
 
 @Component({
   template
 })
 export class AppComponent {
-  constructor(app: App, platform: Platform, menu: MenuController) {}
+  rootPage: any;
+
+  constructor(app: App, platform: Platform, menu: MenuController) {
+    this.rootPage = PartiesListComponent;
+  }
 }
-- 
2.7.4


From c972674508da74487c0a5ba819b0a08eeed097b1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:42:45 +0200
Subject: [PATCH 272/276] Step 22.39: Fix an issuewith a absolute path of an
 image

---
 client/imports/shared/display-main-image.pipe.ts | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/client/imports/shared/display-main-image.pipe.ts b/client/imports/shared/display-main-image.pipe.ts
index 4a317a1..114a46b 100644
--- a/client/imports/shared/display-main-image.pipe.ts
+++ b/client/imports/shared/display-main-image.pipe.ts
@@ -1,5 +1,6 @@
 import { Pipe } from '@angular/core';
 import { MeteorComponent } from 'angular2-meteor';
+import { Meteor } from 'meteor/meteor';
 
 import { Images } from '../../../both/collections/images.collection';
 import { Party } from '../../../both/interfaces/party.interface';
@@ -24,7 +25,15 @@ export class DisplayMainImagePipe extends MeteorComponent {
     this.autorun(() => {
       const found = Images.findOne(imageId);
       if (found) {
-        imageUrl = found.url;
+        // XXX Make sure to use proper absolute url of an image
+        // jalik:ufs sets an absolute path of a file (let's say localhost:3000)
+        // Might be a problem when running an app in a different port (development)
+        if (!Meteor.isCordova) {
+          imageUrl = found.url;
+        } else {
+          const path = `ufs/${found.store}/${found._id}/${found.name}`;
+          imageUrl = Meteor.absoluteUrl(path);
+        }
       }
     }, true);
 
-- 
2.7.4


From eb0686c0c98b5a0964f4dd4f23dbb782c75a1c47 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:43:40 +0200
Subject: [PATCH 273/276] Step 22.40: Add DisplayMainImage pipe

---
 client/imports/parties/parties-list.mobile.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties/parties-list.mobile.component.ts b/client/imports/parties/parties-list.mobile.component.ts
index f4b5f7d..285621d 100644
--- a/client/imports/parties/parties-list.mobile.component.ts
+++ b/client/imports/parties/parties-list.mobile.component.ts
@@ -3,6 +3,7 @@ import { PaginationService, PaginationControlsCmp } from 'ng2-pagination';
 
 import { PartiesList } from './parties-list.class';
 import { RsvpPipe } from '../shared/rsvp.pipe';
+import { DisplayMainImagePipe } from '../shared/display-main-image.pipe';
 
 import template from './parties-list.mobile.component.html';
 
@@ -10,7 +11,7 @@ import template from './parties-list.mobile.component.html';
   template,
   viewProviders: [PaginationService],
   directives: [PaginationControlsCmp],
-  pipes: [RsvpPipe]
+  pipes: [RsvpPipe, DisplayMainImagePipe]
 })
 export class PartiesListComponent extends PartiesList {
   constructor(paginationService: PaginationService) {
-- 
2.7.4


From 32779537af00debdff6b579fd909381e8d4fb54c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:44:12 +0200
Subject: [PATCH 274/276] Step 22.41: Use the pipe

---
 client/imports/parties/parties-list.mobile.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/parties/parties-list.mobile.component.html b/client/imports/parties/parties-list.mobile.component.html
index 31ec349..dc2e509 100644
--- a/client/imports/parties/parties-list.mobile.component.html
+++ b/client/imports/parties/parties-list.mobile.component.html
@@ -4,6 +4,7 @@
 
 <ion-content padding>
   <ion-card *ngFor="let party of parties">
+    <img *ngIf="party.images" [src]="party | displayMainImage">
     <ion-card-content>
       <ion-card-title>
         {{party.name}}
-- 
2.7.4


From 65dcc3278035128a5eb56f4a2947b3ddcb23707d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:46:07 +0200
Subject: [PATCH 275/276] Step 22.42: Add mys:fonts

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index a18f985..963c650 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -29,3 +29,4 @@ email
 jalik:ufs
 jalik:ufs-gridfs
 mys:accounts-phone
+mys:fonts
diff --git a/.meteor/versions b/.meteor/versions
index 81bf246..0663738 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -63,6 +63,7 @@ modules-runtime@0.7.5
 mongo@1.1.10
 mongo-id@1.0.5
 mys:accounts-phone@0.0.21
+mys:fonts@0.0.2
 npm-bcrypt@0.8.7
 npm-mongo@1.5.45
 observe-sequence@1.0.12
-- 
2.7.4


From ec4fc2bc8076aef2af12a389f72cbffc5250b59f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Sat, 30 Jul 2016 17:52:57 +0200
Subject: [PATCH 276/276] Step 22.43: Define fonts.json

---
 fonts.json | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 fonts.json

diff --git a/fonts.json b/fonts.json
new file mode 100644
index 0000000..1b0004e
--- /dev/null
+++ b/fonts.json
@@ -0,0 +1,8 @@
+{
+  "map": {
+    "node_modules/ionic-angular/fonts/roboto-medium.ttf": "fonts/roboto-medium.ttf",
+    "node_modules/ionic-angular/fonts/roboto-regular.ttf": "fonts/roboto-regular.ttf",
+    "node_modules/ionic-angular/fonts/roboto-medium.woff": "fonts/roboto-medium.woff",
+    "node_modules/ionic-angular/fonts/roboto-regular.woff": "fonts/roboto-regular.woff"
+  }
+}
-- 
2.7.4

